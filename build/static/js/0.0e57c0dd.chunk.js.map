{"version":3,"sources":["../static/js/0.0e57c0dd.chunk.js","screens/Contact.js","../node_modules/@firebase/util/dist/cjs/index.js","../node_modules/@firebase/database/dist/cjs/src/core/util/util.js","../node_modules/@firebase/database/dist/cjs/src/core/util/Path.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PriorityIndex.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/ChildrenNode.js","../node_modules/tslib/tslib.es6.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/Node.js","components/Button.js","components/Loader.js","../node_modules/@firebase/database/dist/cjs/src/core/util/validation.js","../node_modules/@firebase/database/dist/cjs/src/core/operation/Operation.js","components/DecoderText.js","../node_modules/@firebase/database/dist/cjs/src/core/view/Change.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/KeyIndex.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/nodeFromJSON.js","utils/ScrollToTop.js","../node_modules/@firebase/app/dist/esm/index.js","../node_modules/@firebase/database/dist/cjs/src/core/storage/storage.js","../node_modules/@firebase/database/dist/cjs/src/realtime/Constants.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/Index.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/LeafNode.js","../node_modules/@firebase/database/dist/cjs/src/core/util/SortedMap.js","../node_modules/@firebase/database/dist/cjs/src/core/Repo.js","../node_modules/@firebase/database/dist/cjs/src/core/view/CacheNode.js","../node_modules/@firebase/util/dist/cjs/src/constants.js","../node_modules/@firebase/database/dist/cjs/src/api/Reference.js","../node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js","../node_modules/@firebase/database/dist/cjs/src/core/util/ImmutableTree.js","../node_modules/@firebase/database/dist/cjs/src/core/view/filter/IndexedFilter.js","../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsManager.js","../node_modules/@firebase/database/dist/cjs/src/core/RepoManager.js","../node_modules/@firebase/util/dist/cjs/src/assert.js","../node_modules/@firebase/util/dist/cjs/src/crypt.js","../node_modules/@firebase/util/dist/cjs/src/json.js","../node_modules/@firebase/util/dist/cjs/src/obj.js","../node_modules/@firebase/database/dist/cjs/src/api/Database.js","../node_modules/@firebase/logger/dist/esm/src/logger.js","../node_modules/@firebase/database/dist/cjs/src/core/util/libs/parser.js","../node_modules/@firebase/database/dist/cjs/src/core/RepoInfo.js","../node_modules/@firebase/database/dist/cjs/src/api/onDisconnect.js","../node_modules/@firebase/database/dist/cjs/src/api/Query.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/snap.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/IndexMap.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/childSet.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/comparators.js","../node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PathIndex.js","../node_modules/@firebase/database/dist/cjs/src/core/util/ServerValues.js","../node_modules/@firebase/database/dist/cjs/src/core/SparseSnapshotTree.js","../node_modules/@firebase/database/dist/cjs/src/core/util/CountedSet.js","../node_modules/@firebase/database/dist/cjs/src/core/operation/Overwrite.js","../node_modules/@firebase/database/dist/cjs/src/core/SyncPoint.js","../node_modules/@firebase/database/dist/cjs/src/core/view/ViewCache.js","../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsListener.js","../node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js","../node_modules/@firebase/database/dist/cjs/src/core/util/EventEmitter.js","../node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js","../node_modules/@firebase/database/dist/cjs/src/realtime/BrowserPollConnection.js","../node_modules/@firebase/database/dist/cjs/src/realtime/WebSocketConnection.js","../node_modules/@firebase/database/dist/cjs/src/core/ServerActions.js","../node_modules/@firebase/database/dist/cjs/src/core/view/filter/RangedFilter.js","components/Input.js","components/TextArea.js","../node_modules/autosize/dist/autosize.js","utils/Firebase.js","../node_modules/@firebase/app/dist/esm/src/firebaseApp.js","../node_modules/@firebase/util/dist/cjs/src/deepCopy.js","../node_modules/@firebase/util/dist/cjs/src/deferred.js","../node_modules/@firebase/util/dist/cjs/src/environment.js","../node_modules/@firebase/util/dist/cjs/src/errors.js","../node_modules/@firebase/util/dist/cjs/src/jwt.js","../node_modules/@firebase/util/dist/cjs/src/query.js","../node_modules/@firebase/util/dist/cjs/src/sha1.js","../node_modules/@firebase/util/dist/cjs/src/hash.js","../node_modules/@firebase/util/dist/cjs/src/subscribe.js","../node_modules/@firebase/util/dist/cjs/src/validation.js","../node_modules/@firebase/util/dist/cjs/src/utf8.js","../node_modules/@firebase/database/dist/cjs/index.js","../node_modules/@firebase/database/dist/cjs/src/core/storage/DOMStorageWrapper.js","../node_modules/@firebase/database/dist/cjs/src/core/storage/MemoryStorage.js","../node_modules/@firebase/logger/dist/esm/index.js","../node_modules/@firebase/database/dist/cjs/src/api/TransactionResult.js","../node_modules/@firebase/database/dist/cjs/src/core/util/NextPushId.js","../node_modules/@firebase/database/dist/cjs/src/core/view/EventRegistration.js","../node_modules/@firebase/database/dist/cjs/src/core/view/Event.js","../node_modules/@firebase/database/dist/cjs/src/core/SyncTree.js","../node_modules/@firebase/database/dist/cjs/src/core/operation/AckUserWrite.js","../node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js","../node_modules/@firebase/database/dist/cjs/src/core/operation/Merge.js","../node_modules/@firebase/database/dist/cjs/src/core/view/View.js","../node_modules/@firebase/database/dist/cjs/src/core/view/ViewProcessor.js","../node_modules/@firebase/database/dist/cjs/src/core/view/ChildChangeAccumulator.js","../node_modules/@firebase/database/dist/cjs/src/core/view/CompleteChildSource.js","../node_modules/@firebase/database/dist/cjs/src/core/view/EventGenerator.js","../node_modules/@firebase/database/dist/cjs/src/core/WriteTree.js","../node_modules/@firebase/database/dist/cjs/src/core/CompoundWrite.js","../node_modules/@firebase/database/dist/cjs/src/core/SnapshotHolder.js","../node_modules/@firebase/database/dist/cjs/src/core/AuthTokenProvider.js","../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsCollection.js","../node_modules/@firebase/database/dist/cjs/src/core/stats/StatsReporter.js","../node_modules/@firebase/database/dist/cjs/src/core/view/EventQueue.js","../node_modules/@firebase/database/dist/cjs/src/core/util/VisibilityMonitor.js","../node_modules/@firebase/database/dist/cjs/src/core/util/OnlineMonitor.js","../node_modules/@firebase/database/dist/cjs/src/realtime/TransportManager.js","../node_modules/@firebase/database/dist/cjs/src/realtime/polling/PacketReceiver.js","../node_modules/@firebase/database/dist/cjs/src/core/ReadonlyRestClient.js","../node_modules/@firebase/database/dist/cjs/src/core/view/QueryParams.js","../node_modules/@firebase/database/dist/cjs/src/core/view/filter/LimitedFilter.js","../node_modules/@firebase/database/dist/cjs/src/core/Repo_transaction.js","../node_modules/@firebase/database/dist/cjs/src/core/util/Tree.js","../node_modules/@firebase/database/dist/cjs/src/api/internal.js","../node_modules/@firebase/database/dist/cjs/src/api/test_access.js","config.json"],"names":["webpackJsonp","Array","concat","module","__webpack_exports__","__webpack_require__","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_styled_components__","__WEBPACK_IMPORTED_MODULE_2_react_transition_group__","__WEBPACK_IMPORTED_MODULE_3_react_helmet__","__WEBPACK_IMPORTED_MODULE_4__components_Input__","__WEBPACK_IMPORTED_MODULE_5__components_DecoderText__","__WEBPACK_IMPORTED_MODULE_6__components_Button__","__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__","__WEBPACK_IMPORTED_MODULE_8__utils_Firebase__","__WEBPACK_IMPORTED_MODULE_9__utils_ScrollToTop__","_createClass","target","props","i","length","descriptor","key","protoProps","staticProps","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","prerender","window","location","port","Contact","_PureComponent","_ref","_temp","_this","_ret","this","_len","arguments","args","_key","getPrototypeOf","apply","state","emailValue","messageValue","sending","complete","updateEmail","event","setState","updateMessage","onSubmit","_this$state","preventDefault","database","ref","push","email","message","then","catch","error","alert","_this2","status","_state","a","createElement","ContactWrapper","name","content","component","Fragment","appear","timeout","mountOnEnter","unmountOnExit","ContactForm","autoComplete","method","role","ContactTitle","delay","text","start","offset","ContactDivider","ContactInput","onChange","label","id","type","hasValue","maxLength","required","multiline","ContactButton","disabled","loading","icon","ContactComplete","ContactCompleteTitle","ContactCompleteText","ContactCompleteButton","secondary","to","section","tablet","mobile","form","h1","theme","curveFastoutSlowin","div","colorPrimary","p","exports","assert_1","assert","assertionError","crypt_1","base64","base64Decode","base64Encode","constants_1","CONSTANTS","deepCopy_1","deepCopy","deepExtend","patchProperty","deferred_1","Deferred","environment_1","getUA","isMobileCordova","isNodeSdk","isReactNative","errors_1","ErrorFactory","FirebaseError","patchCapture","json_1","jsonEval","stringify","jwt_1","decode","isAdmin","issuedAtTime","isValidFormat","isValidTimestamp","obj_1","clone","contains","every","extend","findKey","findValue","forEach","getAnyKey","getCount","getValues","isEmpty","isNonNullObject","map","safeGet","query_1","querystring","querystringDecode","sha1_1","Sha1","subscribe_1","async","createSubscribe","validation_1","errorPrefix","validateArgCount","validateCallback","validateContextObject","validateNamespace","utf8_1","stringLength","stringToByteArray","util_1","util_2","util_3","util_4","util_5","util_6","storage_1","util_7","logger_1","logClient","Logger","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","var_args","_i","isArray","logger","firstLog_","enableLogging","logger_","persistent","logLevel","LogLevel","VERBOSE","log","bind","SessionStorage","set","remove","get","logWrapper","prefix","fatal","Error","warn","warnIfPageIsSecure","protocol","indexOf","warnAboutUnsupportedMethod","methodName","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","val","bindCallback","callback","context","doubleToIEEE754String","v","s","e","f","ln","bits","Infinity","abs","pow","min","LN2","round","reverse","join","hexByteString","hexByte","parseInt","substr","toString","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","callUserCallback","beingCrawled","search","exportPropGetter","object","fnGet","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","setNodeFromJSON","nodeFromJSON","setMaxNode","MAX_NODE","tslib_1","Index_1","Node_1","LeafNode_1","PriorityIndex","_super","__extends","compare","aPriority","node","getPriority","bPriority","indexCmp","compareTo","isDefinedOn","indexedValueChanged","oldNode","newNode","minPost","NamedNode","MIN","maxPost","LeafNode","makePost","indexValue","priorityNode","Index","PRIORITY_INDEX","EMPTY_NODE","SortedMap_1","snap_1","PriorityIndex_1","KeyIndex_1","IndexMap_1","comparators_1","ChildrenNode","children_","priorityNode_","indexMap_","lazyHash_","validatePriorityNode","SortedMap","NAME_COMPARATOR","IndexMap","Default","isLeafNode","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","front","hasChild","updateImmediateChild","newChildNode","namedNode","newChildren","newIndexMap","newPriority","removeFromIndexes","insert","addToIndexes","updateChild","newImmediateChild","numChildren","count","exportFormat","numKeys","maxKey","allIntegerKeys","forEachChild","childNode","array","hash","toHash_1","priorityHashText","childHash","getPredecessorChildName","index","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","indexDefinition","minKey","getFirstChild","getLastChildName","getLastChild","action","inorderTraversal","wrappedNode","getIterator","getIteratorFrom","startPost","iterator","Wrap","next","peek","getNext","getReverseIterator","getReverseIteratorFrom","endPost","withIndex","KEY_INDEX","hasIndex","addIndex","isIndexed","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","KeyIndex","__EMPTY_NODE","__childrenNodeConstructor","d","__","extendStatics","__rest","t","hasOwnProperty","getOwnPropertySymbols","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","result","done","__generator","verb","op","_","y","ops","trys","g","sent","throw","return","Symbol","__exportStar","m","__values","o","__read","ar","__spread","__await","__asyncGenerator","q","resume","settle","fulfill","shift","asyncIterator","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","__esModule","default","__importDefault","__assign","assign","_objectWithoutProperties","LinkButton","RouterButton","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_3__components_Loader__","__WEBPACK_IMPORTED_MODULE_4__utils_Icon__","__WEBPACK_IMPORTED_MODULE_5__utils_Theme__","__WEBPACK_IMPORTED_MODULE_6__utils_StyleUtils__","ButtonContent","iconRight","children","ButtonIcon","ButtonText","style","position","transform","size","color","colorBackground","Button","_ref2","className","ButtonContainer","_ref3","rel","LinkButtonContainer","_ref4","RouterButtonContainer","button","clipPath","withComponent","span","Loader","LoaderContainer","LoaderSpan","AnimGrow","Path_1","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","replace","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","repoInfo","host","namespace","validateCredential","cred","validateBoolean","bool","validateString","string","validateObject","validateObjectContainsKey","opt_type","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","DecoderText","startTime","Date","now","elapsedTime","running","started","anim","stop","deltaTime","needsUpdate","fps","requestAnimationFrame","timeOffset","finalArray","setValue","output","textArray","shuffle","chars","getRandCharacter","randNum","random","lowChoice","picketCharacter","_this$props","_this$props$offset","nextProps","clearTimeout","_props","DecoderSpan","aria-label","item","aria-hidden","DecoderCode","Change","snapshotNode","oldSnap","prevName","valueChange","snapshot","VALUE","childAddedChange","childKey","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","json","ChildrenNode_1","jsonLeaf","USE_HINZE","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","childSet_1","buildChildSet","NAME_ONLY_COMPARATOR","sortedChildSet","getCompare",".priority","ScrollToTop","_Component","prevStatus","nextStatus","scrollTo","firebase","__WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__","DOMStorageWrapper_1","MemoryStorage_1","createStoragefor","domStorageName","domStorage","setItem","removeItem","DOMStorageWrapper","MemoryStorage","PersistentStorage","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","oldWrapped","newWrapped","value_",".value","getValue","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","hasNext","LLRBNode","RED","copy","reverseTraversal","min_","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","rightParent","resultGenerator","ServerValues_1","nodeFromJSON_1","SparseSnapshotTree_1","SyncTree_1","SnapshotHolder_1","AuthTokenProvider_1","StatsManager_1","StatsReporter_1","StatsListener_1","EventQueue_1","PersistentConnection_1","ReadonlyRestClient_1","Database_1","Repo","repoInfo_","forceRestClient","app","dataUpdateCount","statsListener_","eventQueue_","EventQueue","nextWriteId_","interceptServerDataCallback_","onDisconnect_","SparseSnapshotTree","persistentConnection_","authTokenProvider","AuthTokenProvider","stats_","StatsManager","getCollection","server_","ReadonlyRestClient","onDataUpdate_","onConnectStatus_","authOverride","options","PersistentConnection","onServerInfoUpdate_","addTokenChangeListener","token","refreshAuthToken","statsReporter_","getOrCreateReporter","StatsReporter","transactions_init_","infoData_","SnapshotHolder","infoSyncTree_","SyncTree","startListening","tag","currentHashFn","onComplete","infoEvents","getNode","applyServerOverwrite","stopListening","updateInfo_","serverSyncTree_","listen","events","raiseEventsForChangedPath","unlisten","secure","serverTime","offsetNode","getTime","generateServerValues","generateWithValues","timestamp","isMerge","taggedChildren","applyTaggedQueryMerge","taggedSnap","applyTaggedQueryOverwrite","changedChildren","applyServerMerge","snap","affectedPath","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","updates","updateSnapshot","getNextWriteId_","setWithPriority","newVal","log_","serverValues","newNodeUnresolved","resolveDeferredValueSnapshot","writeId","applyUserOverwrite","queueEvents","put","errorReason","success","clearEvents","ackUserWrite","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","applyUserMerge","merge","changedPath","resolvedOnDisconnectTree","resolveDeferredValueTree","forEachTree","Empty","onDisconnectCancel","forget","onDisconnectSet","onDisconnectPut","remember","onDisconnectSetWithPriority","onDisconnectUpdate","onDisconnectMerge","addEventCallbackForQuery","eventRegistration","addEventRegistration","raiseEventsAtPath","removeEventCallbackForQuery","removeEventRegistration","interrupt","stats","showDelta","console","StatsListener","longestName","reduce","previousValue","currentValue","stat","statsIncrementCounter","metric","incrementCounter","includeStat","__database","Database","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","onDisconnect_1","TransactionResult_1","NextPushId_1","Query_1","Repo_1","QueryParams_1","SyncPoint_1","Reference","repo","QueryParams","DEFAULT","getKey","getParent","parentPath","getRoot","databaseProp","deferred","wrapCallback","promise","objectToMerge","newObjectToMerge","transaction","transactionUpdate","applyLocally","promiseComplete","committed","TransactionResult","startTransaction","setPriority","nextPushId","thennablePushRef","pushRef","onDisconnect","OnDisconnect","Query","__referenceConstructor","SyncPoint","DataSnapshot","ref_","index_","exportVal","toJSON","exists","childPathString","childPath","childRef","hasChildren","getRef","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","tree","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","subtree","childTree","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","Change_1","IndexedFilter","source","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","getIndex","StatsCollection_1","hashString","collections_","StatsCollection","creatorFunction","reporters_","parser_1","_staticInstance","RepoManager","repos_","useRestClient_","getInstance","appName","dbUrl","databaseFromApp","url","parseRepoInfo","createRepo","deleteRepo","appRepos","toURLString","assertion","out","charCodeAt","byteArrayToString","bytes","pos","c1","fromCharCode","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","input","opt_webSafe","init_","byteToCharMap","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","JSON","parse","objTo","objFrom","rv","opt_obj","res","opt_this","Reference_1","RepoManager_1","repo_","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","delete","_a","instances","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","info","WARN","ERROR","_logLevel","_logHandler","debug","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","startsWith","segment","kv","RepoInfo_1","dataURL","parseURL","subdomain","domain","webSocketOnly","scheme","RepoInfo","colonInd","slashInd","questionMarkInd","queryParams","parts","Constants_1","persistenceKey","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","params","connURL","pairs","cancel","ValueIndex_1","PathIndex_1","EventRegistration_1","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","PathIndex","VALUE_INDEX","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","getQueryParams","on","cancelCallbackOrContext","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","ValueEventRegistration","ChildEventRegistration","off","valueCallback","once","userCallback","cancelOrContext","firstCall","onceCallback","err","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","ValueIndex","valueNode","_defaultIndexMap","fallbackObject","indexes_","indexSet_","indexKey","sortedMap","existingChildren","childList","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","SortedMap_2","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","keyFn","mapSortFn","buildBalancedTree","low","high","middle","base12","root","buildPennant","chunkSize","attachPennant","pennant","isOne","indexPath_","extractChild","aChild","bChild","values","resolveDeferredValue","resolvedTree","rawPri","leafNode","childrenNode","CountedSet_1","find","CountedSet","add","self_1","prefixPath","func","clear","Operation_1","Overwrite","OVERWRITE","operationForChild","CacheNode_1","ViewCache_1","View_1","views_","applyOperation","operation","writesCache","optCompleteServerCache","view","events_1","serverCache","serverCacheComplete","eventCache","calcCompleteEventCache","eventCacheComplete","calcCompleteEventChildren","viewCache","ViewCache","View","getInitialEvents","cancelError","removed","cancelEvents","hadCompleteView","hasCompleteView","viewQueryId","getQuery","loadsAllData","getQueryViews","filter","getCompleteServerCache","viewForQuery","getCompleteView","viewExistsForQuery","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","collection_","last_","newStats","delta","app_1","VisibilityMonitor_1","OnlineMonitor_1","Connection_1","ServerActions_1","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","lastSessionId","establishConnectionTimer_","visible_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","VisibilityMonitor","onVisible_","OnlineMonitor","onOnline_","sendRequest","onResponse","curReqNum","msg","isDefault","listenSpec","hashFn","sendListen_","req","payload","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","onAuthRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","reportStats","onDataMessage_","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","onReady_","sessionId","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","visible","online","close","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","accessToken","Connection","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","queries","clientName","currentlyOnline","ServerActions","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","eventData","getInitialEvent","splice","et","TransportManager_1","onMessage_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","TransportManager","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","open","healthyTimeout_ms","healthyTimeout_","bytesReceived","markConnectionHealthy","bytesSent","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","tryCleanupConnection","connId","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","send","onControl_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","ts","version","h","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","onMessage","closeConnections_","PacketReceiver_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","BrowserPollConnection","transportSessionId","everConnected_","urlFn","curSegmentNum","myPacketOrderer","PacketReceiver","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","shutdown_","myDisconnFrame","removeChild","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","parentNode","onerror","process","setWebSocketImpl","impl","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","platform","env","NODE_ENV","PUBLIC_URL","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","isInMemoryStorage","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","IndexedFilter_1","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","startName","endName","__WEBPACK_IMPORTED_MODULE_2__components_TextArea__","Input","InputWrapper","InputElement","aria-labelledby","InputTextArea","InputLabel","htmlFor","colorText","InputLabelFocus","__WEBPACK_IMPORTED_MODULE_1_autosize__","__WEBPACK_IMPORTED_MODULE_1_autosize___default","TextArea","textarea","allowResize","resize","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","ta","changeOverflow","width","offsetWidth","overflowY","getParentOverflows","el","arr","Element","scrollTop","scrollHeight","overflows","docTop","documentElement","height","heightOffset","clientWidth","styleHeight","computed","getComputedStyle","actualHeight","boxSizing","offsetHeight","cachedHeight","evt","createEvent","dispatchEvent","nodeName","has","pageResize","destroy","removeEventListener","overflowX","wordWrap","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","methods","Map","Event","bubbles","initEvent","autosize","x","__WEBPACK_IMPORTED_MODULE_0__firebase_app__","__WEBPACK_IMPORTED_MODULE_1__firebase_database__","__WEBPACK_IMPORTED_MODULE_2__config__","__WEBPACK_IMPORTED_MODULE_2__config___default","firebaseConfig","Firebase","initializeApp","createFirebaseNamespace","removeApp","callAppHooks","apps_","DEFAULT_ENTRY_NAME","FirebaseAppImpl","getApps","registerService","createService","serviceProperties","appHook","allowMultipleInstances","factories","appHooks","serviceNamespace","appArg","__WEBPACK_IMPORTED_MODULE_0__firebase_util__","_getService","extendNamespace","eventName","serviceName","factoryName","useAsService","useService","apps","appErrors","tokenListeners","firebase_","isDeleted_","services_","name_","options_","getUid","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","services","serviceKey","instanceKey","all","service","instanceIdentifier","instanceSpecifier","extendApp","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","dateValue","prop","captureFake","captureStackTrace","ERROR_NAME","err_1","pattern","template","fullCode","header","claims","signature","validSince","validUntil","decoded","querystringParams","arrayVal","hash_1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","opt_offset","W","opt_length","lengthMinusBlock","inbuf","totalBits","Hash","executor","onNoObservers","ObserverProxy","subscribe","onError","implementsAnyMethods","methods_1","noop","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","nextOrObserver","unsub","unsubscribeOne","finalError","sendOne","argName","minCount","maxCount","argCount","argError","registerDatabase","unused","TEST_ACCESS","DataSnapshot_1","domStorage_","prefix_","prefixedName_","storedVal","getItem","cache_","setLogLevel","level","__WEBPACK_IMPORTED_MODULE_0__src_logger__","inst","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","Event_1","callback_","cancelCallback_","context_","respondsTo","change","DataEvent","getEventRunner","ctx","getEventType","cancelCB_1","cb_1","createCancelEvent","CancelEvent","hasAnyCallback","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","cb","getPath","AckUserWrite_1","ImmutableTree_1","ListenComplete_1","Merge_1","Overwrite_1","WriteTree_1","listenProvider_","syncPointTree_","pendingWriteTree_","WriteTree","tagToQueryMap_","queryToTagMap_","newData","addOverwrite","applyOperationToSyncPoints_","addMerge","changeTree","Merge","revert","getWrite","removeWrite","affectedTree_1","AckUserWrite","applyListenComplete","ListenComplete","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","completeCache","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","childWrites","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","findIndex","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","queryForListening_","tagForQuery_","queryToRemove","tagToRemove","removeTags_","writeIdsToExclude","writeTree","maybeChildSyncPoint","childMap","views_1","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","affectedTree","ACK_USER_WRITE","LISTEN_COMPLETE","MERGE","ViewProcessor_1","EventGenerator_1","query_","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","ViewProcessor","initialServerCache","initialEventCache","newServerCache","newEventCache","viewCache_","eventGenerator_","EventGenerator","cache","path_1","registration","maybeEvent","remaining","existing","completeServerCache","oldViewCache","assertIndexed","generateEventsForChanges_","changes","initialChanges","registrations","generateEventsForChanges","ChildChangeAccumulator_1","CompleteChildSource_1","ProcessorResult","filter_","newViewCache","filterServerNode","accumulator","ChildChangeAccumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","revertUserWrite_","ackUserWrite_","listenComplete_","getChanges","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverNode","completeChildren","completeEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","calcCompleteChild","changedSnap","oldServerSnap","serverFilter","newServerNode","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","getCompleteChild","newEventSnap","cacheHasChild_","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","oldEventCache","serverChildren","changeMap_","oldChange","oldType","NoCompleteChildSource_","getChildAfterChild","writes_","optCompleteServerCache_","completeServerData","nodes","calcIndexedSlice","eventRegistrations","moves","generateEventsForType_","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","aWrapped","bWrapped","CompoundWrite_1","visibleWrites_","CompoundWrite","allWrites_","lastWriteId_","WriteTreeRef","addWrite","addWrites","record","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","getCompleteNode","treePath","includeHiddenWrites","childCompoundWrite","hasCompleteWrite","mergeAtPath","layerTree_","layeredCache","shadowingNode","subMerge","completeServerChildren","topLevelSet","merge_1","getCompleteChildren","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","writeTree_","existingServerCache","rootmost","rootMostPath","newWrite","applySubtreeWrite_","priorityWrite_1","rootNode_","newSnapshotNode","app_","removeTokenChangeListener","errorMessage","counters_","amount","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","collection","statsToReport_","reportStats_","reportedStats","haveStatsToReport","eventLists_","recursionDepth_","eventDataList","currList","eventPath","EventList","raiseQueuedEventsMatchingPredicate_","sentAll","eventList","raise","events_","eventFn","EventEmitter_1","hidden","visibilityChange","online_","BrowserPollConnection_1","WebSocketConnection_1","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","pendingResponses","currentResponseNum","closeAfterResponse","onClose","responseNum","requestNum","this_1","toProcess","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","xhr","XMLHttpRequest","responseText","LimitedFilter_1","RangedFilter_1","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","getLimit","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","LimitedFilter","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","rangedFilter_","reverse_","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","TransactionStatus","Tree_1","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","Tree","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","subTree","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","currentNode","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","from","forEachAncestor","abortTransactionsOnNode_","forEachDescendant","lastSent","TreeNode","childCount","parent_","pathObj","updateParents_","includeSelf","childrenFirst","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId"],"mappings":"AAAAA,cAAc,GAAGC,MAAM,KAAKC,QAEtB,SAAUC,EAAQC,EAAqBC,GAE7C,YAeknN,SAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAASK,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUf,OAAOgB,OAAOF,GAAYA,EAAWC,WAAWE,aAAad,MAAMU,EAASK,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWN,IAAWd,OAAOqB,eAAerB,OAAOqB,eAAeR,EAASC,GAAYD,EAASS,UAAUR,GAd1hPd,OAAOuB,eAAe5B,EAAqB,cAAgBQ,OAAO,GAC7C,IAAIqB,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEG,EAAkD/B,EAAoB,GACtEgC,EAAuDhC,EAAoB,IAE3EiC,GAD+DjC,EAAoB8B,EAAEE,GACxChC,EAAoB,KAEjEkC,GADqDlC,EAAoB8B,EAAEG,GACzBjC,EAAoB,MACtEmC,EAAwDnC,EAAoB,KAC5EoC,EAAmDpC,EAAoB,KACvEqC,EAAkDrC,EAAoB,IACtEsC,EAAgDtC,EAAoB,KACpEuC,EAAmDvC,EAAoB,KAC5FwC,EAAa,WAAW,QAASlC,GAAiBmC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWvB,WAAWuB,EAAWvB,aAAY,EAAMuB,EAAWrB,cAAa,EAAQ,SAAUqB,KAAWA,EAAWtB,UAAS,GAAKnB,OAAOuB,eAAec,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWzC,EAAiBI,EAAYS,UAAU4B,GAAeC,GAAY1C,EAAiBI,EAAYsC,GAAoBtC,MAAsBuC,EAAgBhD,GAAwB,+JAA+J,6DAA6D,0DAA0D,mBAAmB,qCAAqC,+JAA+J,6DAA6D,0DAA0D,mBAAmB,qCAAqCiD,EAAiBjD,GAAwB,wFAAwF,2EAA2E,wFAAwF,2EAA2EkD,EAAiBlD,GAAwB,qLAAqL,wDAAwD,mFAAmF,SAAS,OAAO,qLAAqL,wDAAwD,mFAAmF,SAAS,OAAOmD,EAAiBnD,GAAwB,2EAA2E,uGAAuG,wDAAwD,qJAAuJ,iPAAiP,SAAS,OAAO,2EAA2E,uGAAuG,wDAAwD,qJAAuJ,iPAAiP,SAAS,OAAOoD,EAAiBpD,GAAwB,wGAAwG,wDAAwD,kEAAkE,SAAS,OAAO,wGAAwG,wDAAwD,kEAAkE,SAAS,OAAOqD,EAAiBrD,GAAwB,oGAAoG,0BAA0B,6BAA6B,gEAAgE,SAAS,SAAS,OAAO,oGAAoG,0BAA0B,6BAA6B,gEAAgE,SAAS,SAAS,OAAOsD,EAAiBtD,GAAwB,mMAAmM,mMAAmMuD,EAAiBvD,GAAwB,6JAA6J,wDAAwD,kEAAkE,OAAO,6JAA6J,wDAAwD,kEAAkE,OAAOwD,EAAiBxD,GAAwB,0HAA0H,wDAAwD,kEAAkE,OAAO,0HAA0H,wDAAwD,kEAAkE,OAAOyD,EAAkBzD,GAAwB,+EAA+E,wDAAwD,wFAAwF,OAAO,+EAA+E,wDAAwD,wFAAwF,OCRrmN0D,EAAqC,UAAzBC,OAAOC,SAASC,KAGbC,EDK4lP,SAASC,GAAkD,QAASD,KAAU,GAAIE,GAASC,EAAMC,EAAMC,CAAK5D,GAAgB6D,KAAKN,EAAS,KAAI,GAAIO,GAAKC,UAAU3B,OAAO4B,EAAK5E,MAAM0E,GAAMG,EAAK,EAAEA,EAAKH,EAAKG,IAAQD,EAAKC,GAAMF,UAAUE,EAAO,OAAaP,GAAOC,EAAMvD,EAA2ByD,MAAMJ,EAAKF,EAAQrC,WAAWtB,OAAOsE,eAAeX,IAAUjD,KAAK6D,MAAMV,GAAMI,MAAMxE,OAAO2E,KAAeL,ECJ7/PS,OACEC,WAAY,GACZC,aAAc,GACdC,SAAS,EACTC,UAAU,GDA0jQb,ECGtkQc,YAAc,SAAAC,GACZf,EAAKgB,UAAUN,WAAYK,EAAMzC,OAAOlC,SDJgnQ4D,ECO1pQiB,cAAgB,SAAAF,GACdf,EAAKgB,UAAUL,aAAcI,EAAMzC,OAAOlC,SDRssQ4D,ECWlvQkB,SAAW,SAAAH,GAAS,GAAAI,GAC4BnB,EAAKS,MAA3CC,EADUS,EACVT,WAAYC,EADFQ,EACER,aAAcC,EADhBO,EACgBP,OAClCG,GAAMK,iBAEDR,IACHZ,EAAKgB,UAAUJ,SAAS,IAExBzC,EAAA,EAASkD,WAAWC,IAAI,YAAYC,MAClCC,MAAOd,EACPe,QAASd,IACRe,KAAK,WACN1B,EAAKgB,UAAUH,UAAU,EAAMD,SAAS,MACvCe,MAAM,SAACC,GACR5B,EAAKgB,UAAUJ,SAAS,IACxBiB,MAAMD,ODzBw1P3B,EAAo4BF,EAAOtD,EAA2BuD,EAAMC,GAA6uG,MAAr3IpD,GAAU+C,EAAQC,GAA6nCxB,EAAauB,IAAUjB,IAAI,SAASvC,MAAM,WC8BxzR,GAAA0F,GAAA5B,KACC6B,EAAW7B,KAAK3B,MAAhBwD,OADDC,EAEiD9B,KAAKO,MAArDC,EAFDsB,EAECtB,WAAYC,EAFbqB,EAEarB,aAAcC,EAF3BoB,EAE2BpB,QAASC,EAFpCmB,EAEoCnB,QAE3C,OACEnD,GAAAuE,EAAAC,cAACC,EAAD,KACEzE,EAAAuE,EAAAC,cAAC9D,EAAA,GAAY2D,OAAQA,IACrBrE,EAAAuE,EAAAC,cAACpE,EAAA,OAAD,KACEJ,EAAAuE,EAAAC,cAAA,2BACAxE,EAAAuE,EAAAC,cAAA,QACEE,KAAK,cACLC,QAAQ,kHAGZ3E,EAAAuE,EAAAC,cAACrE,EAAA,iBAAgByE,UAAW5E,EAAAuE,EAAMM,WAC9B1B,GACAnD,EAAAuE,EAAAC,cAACrE,EAAA,YAAW2E,QAAA,EAAOC,QAAS,KAAMC,cAAA,EAAaC,eAAA,GAC5C,SAAAZ,GAAA,MACCrE,GAAAuE,EAAAC,cAACU,GAAYC,aAAa,MAAMC,OAAO,OAAO5B,SAAUY,EAAKZ,SAAU6B,KAAK,QAC1ErF,EAAAuE,EAAAC,cAACc,GAAajB,OAAQA,EAAQkB,MAAO,IACnCvF,EAAAuE,EAAAC,cAAClE,EAAA,GACCkF,KAAK,YACLC,MAAkB,aAAXpB,IAA0BvC,EACjC4D,OAAQ,OAGZ1F,EAAAuE,EAAAC,cAACmB,GAAetB,OAAQA,EAAQkB,MAAO,MACvCvF,EAAAuE,EAAAC,cAACoB,GACCvB,OAAQA,EACRkB,MAAO,IACPM,SAAUzB,EAAKhB,YACf0C,MAAM,aACNC,GAAG,QACHC,KAAK,QACLC,WAAYjD,EACZtE,MAAOsE,EACPkD,UAAW,IACXC,UAAA,IAEFnG,EAAAuE,EAAAC,cAACoB,GACCvB,OAAQA,EACRkB,MAAO,IACPM,SAAUzB,EAAKb,cACfuC,MAAM,UACNC,GAAG,UACHE,WAAYhD,EACZvE,MAAOuE,EACPiD,UAAW,IACXC,UAAA,EACAC,WAAA,IAEFpG,EAAAuE,EAAAC,cAAC6B,GACCC,SAAUpD,EACVA,QAASA,EACTqD,QAASrD,EACTmB,OAAQA,EACRkB,MAAO,IACPiB,KAAK,OACLR,KAAK,UAPP,mBAeP7C,GACCnD,EAAAuE,EAAAC,cAACrE,EAAA,YAAW2E,QAAA,EAAOC,QAAS,EAAGC,cAAA,EAAaC,eAAA,GACzC,SAAAZ,GAAA,MACCrE,GAAAuE,EAAAC,cAACiC,EAAD,KACEzG,EAAAuE,EAAAC,cAACkC,GACCrC,OAAQA,EACRkB,MAAO,GAFT,gBAMAvF,EAAAuE,EAAAC,cAACmC,GAAoBtC,OAAQA,EAAQkB,MAAO,KAA5C,uDAGAvF,EAAAuE,EAAAC,cAACoC,GACCC,WAAA,EACAC,GAAG,IACHzC,OAAQA,EACRkB,MAAO,IACPiB,KAAK,gBALP,6BD7Go/XtE,GCLj+XnC,EAAA,cDK8jY7B,GAA6B,QAAI,CCgIpoY,IAAMuG,GAAiBvE,EAAA,EAAO6G,QAAxB3F,EAQiBZ,EAAA,EAAMwG,OAINxG,EAAA,EAAMyG,OAINzG,EAAA,EAAMyG,OAAyBzG,EAAA,EAAMyG,QAKtD/B,EAAchF,EAAA,EAAOgH,KAArB7F,EAKiBb,EAAA,EAAMyG,QAMvB3B,EAAepF,EAAA,EAAOiH,GAAtB7F,EAO0B,SAAAT,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,MAhLnB,KAqLd,SAAA1E,GAAA,OAA2B,aAAjBA,EAAMwD,QACC,YAAjBxD,EAAMwD,UAA0BvC,GADvB,+DAMT,SAAAjB,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,+HAQPsB,EAAiBzF,EAAA,EAAOoH,IAAxB/F,EAIU,SAAAV,GAAA,MAASA,GAAMuG,MAAMG,aAAa,IAGlB,SAAA1G,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,MA5MnB,KAoNA,SAAA1E,GAAA,MAASA,GAAMuG,MAAMG,aAAa,IAchD,SAAA1G,GAAA,OAA2B,aAAjBA,EAAMwD,QACC,YAAjBxD,EAAMwD,UAA0BvC,GADvB,+DAMT,SAAAjB,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,+HAQPuB,EAAerH,OAAA2B,EAAA,GAAOG,EAAA,GAAtBmB,EAG0B,SAAAX,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,MArPnB,KAyPd,SAAA1E,GAAA,OAA2B,aAAjBA,EAAMwD,QACC,YAAjBxD,EAAMwD,UAA0BvC,GADvB,+DAMT,SAAAjB,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,+HAQPgC,EAAgB9H,OAAA2B,EAAA,GAAOK,EAAA,GAAvBkB,EAG0B,SAAAZ,GAAA,MAASA,GAAMuG,MAAMC,oBAC/B,SAAAxG,GAAA,MAA0B,YAAjBA,EAAMwD,OAAuB,MAAWxD,EAAM0E,MA3Q3D,IA2Qa,MACN,SAAA1E,GAAA,MAA0B,YAAjBA,EAAMwD,OAAuB,OAAS,QAIpE,SAAAxD,GAAA,MAASA,GAAMqC,SAAN,4CAEiBrC,EAAMwG,mBAFvB,uLAUM7G,EAAA,EAVN,wCAcT,SAAAK,GAAA,OAA2B,aAAjBA,EAAMwD,QACC,YAAjBxD,EAAMwD,UAA0BvC,GADvB,+DAMT,SAAAjB,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,+HAQPoC,EAAkBvG,EAAA,EAAOoH,IAAzB5F,GAaAgF,EAAuBxG,EAAA,EAAOiH,GAA9BxF,EAM0B,SAAAd,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,OAIjC,SAAA1E,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,gEAMPsC,EAAsBzG,EAAA,EAAOsH,EAA7B5F,EAI0B,SAAAf,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,OAIjC,SAAA1E,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,gEAMPuC,EAAwBrI,OAAA2B,EAAA,GAAOK,EAAA,GAA/BsB,EAE0B,SAAAhB,GAAA,MAASA,GAAMuG,MAAMC,oBAE/B,SAAAxG,GAAA,MAASA,GAAM0E,OAKjC,SAAA1E,GAAA,MAA0B,YAAjBA,EAAMwD,QAAN,iED1VJ,CACA,CACA,CAEH,SAAUpG,EAAQwJ,EAAStJ,GAEjC,YEZAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgJ,GAAAvJ,EAAA,IACAsJ,GAAAE,OAAAD,EAAAC,OACAF,EAAAG,eAAAF,EAAAE,cACA,IAAAC,GAAA1J,EAAA,IACAsJ,GAAAK,OAAAD,EAAAC,OACAL,EAAAM,aAAAF,EAAAE,aACAN,EAAAO,aAAAH,EAAAG,YACA,IAAAC,GAAA9J,EAAA,IACAsJ,GAAAS,UAAAD,EAAAC,SACA,IAAAC,GAAAhK,EAAA,IACAsJ,GAAAW,SAAAD,EAAAC,SACAX,EAAAY,WAAAF,EAAAE,WACAZ,EAAAa,cAAAH,EAAAG,aACA,IAAAC,GAAApK,EAAA,IACAsJ,GAAAe,SAAAD,EAAAC,QACA,IAAAC,GAAAtK,EAAA,IACAsJ,GAAAiB,MAAAD,EAAAC,MACAjB,EAAAkB,gBAAAF,EAAAE,gBACAlB,EAAAmB,UAAAH,EAAAG,UACAnB,EAAAoB,cAAAJ,EAAAI,aACA,IAAAC,GAAA3K,EAAA,IACAsJ,GAAAsB,aAAAD,EAAAC,aACAtB,EAAAuB,cAAAF,EAAAE,cACAvB,EAAAwB,aAAAH,EAAAG,YACA,IAAAC,GAAA/K,EAAA,IACAsJ,GAAA0B,SAAAD,EAAAC,SACA1B,EAAA2B,UAAAF,EAAAE,SACA,IAAAC,GAAAlL,EAAA,IACAsJ,GAAA6B,OAAAD,EAAAC,OACA7B,EAAA8B,QAAAF,EAAAE,QACA9B,EAAA+B,aAAAH,EAAAG,aACA/B,EAAAgC,cAAAJ,EAAAI,cACAhC,EAAAiC,iBAAAL,EAAAK,gBACA,IAAAC,GAAAxL,EAAA,IACAsJ,GAAAmC,MAAAD,EAAAC,MACAnC,EAAAoC,SAAAF,EAAAE,SACApC,EAAAqC,MAAAH,EAAAG,MACArC,EAAAsC,OAAAJ,EAAAI,OACAtC,EAAAuC,QAAAL,EAAAK,QACAvC,EAAAwC,UAAAN,EAAAM,UACAxC,EAAAyC,QAAAP,EAAAO,QACAzC,EAAA0C,UAAAR,EAAAQ,UACA1C,EAAA2C,SAAAT,EAAAS,SACA3C,EAAA4C,UAAAV,EAAAU,UACA5C,EAAA6C,QAAAX,EAAAW,QACA7C,EAAA8C,gBAAAZ,EAAAY,gBACA9C,EAAA+C,IAAAb,EAAAa,IACA/C,EAAAgD,QAAAd,EAAAc,OACA,IAAAC,GAAAvM,EAAA,IACAsJ,GAAAkD,YAAAD,EAAAC,YACAlD,EAAAmD,kBAAAF,EAAAE,iBACA,IAAAC,GAAA1M,EAAA,IACAsJ,GAAAqD,KAAAD,EAAAC,IACA,IAAAC,GAAA5M,EAAA,IACAsJ,GAAAuD,MAAAD,EAAAC,MACAvD,EAAAwD,gBAAAF,EAAAE,eACA,IAAAC,GAAA/M,EAAA,IACAsJ,GAAA0D,YAAAD,EAAAC,YACA1D,EAAA2D,iBAAAF,EAAAE,iBACA3D,EAAA4D,iBAAAH,EAAAG,iBACA5D,EAAA6D,sBAAAJ,EAAAI,sBACA7D,EAAA8D,kBAAAL,EAAAK,iBACA,IAAAC,GAAArN,EAAA,IACAsJ,GAAAgE,aAAAD,EAAAC,aACAhE,EAAAiE,kBAAAF,EAAAE,mBFoCM,SAAUzN,EAAQwJ,EAAStJ,GAEjC,YGvGAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACA2N,EAAA3N,EAAA,KACA4N,EAAA5N,EAAA,KACA6N,EAAA7N,EAAA,KACA8N,EAAA9N,EAAA,KACA+N,EAAA/N,EAAA,KACAgO,EAAAhO,EAAA,KACAiO,EAAA,GAAAD,GAAAE,OAAA,qBAKA5E,GAAA6E,cAAA,WACA,GAAAvG,GAAA,CACA,mBACA,MAAAA,SAQA0B,EAAA8E,KAAA,SAAAC,GACA,GAAAC,GAAAV,EAAAL,kBAAAc,GACAD,EAAA,GAAAT,GAAAhB,IACAyB,GAAAG,OAAAD,EACA,IAAAE,GAAAJ,EAAAK,QACA,OAAAf,GAAA/D,OAAA+E,gBAAAF,GAOA,IAAAG,GAAA,WAEA,OADAC,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,GAAAtK,UAAAsK,EAGA,QADAjJ,GAAA,GACAjD,EAAA,EAAmBA,EAAAiM,EAAAhM,OAAqBD,IACxC/C,MAAAkP,QAAAF,EAAAjM,KACAiM,EAAAjM,IACA,iBAAAiM,GAAAjM,IACA,iBAAAiM,GAAAjM,GAAAC,OACAgD,GAAA+I,EAAAhK,MAAA,KAAAiK,EAAAjM,IAEA,iBAAAiM,GAAAjM,GACAiD,GAAAiI,EAAA5C,UAAA2D,EAAAjM,IAGAiD,GAAAgJ,EAAAjM,GAEAiD,GAAA,GAEA,OAAAA,GAMA0D,GAAAyF,OAAA,IAMA,IAAAC,IAAA,CAMA1F,GAAA2F,cAAA,SAAAC,EAAAC,GACA3B,EAAAhE,QAAA2F,IAAA,IAAAD,IAAA,IAAAA,EAAA,+CACA,IAAAA,GACAjB,EAAAmB,SAAApB,EAAAqB,SAAAC,QACAhG,EAAAyF,OAAAd,EAAAsB,IAAAC,KAAAvB,GACAkB,GACArB,EAAA2B,eAAAC,IAAA,uBAEA,mBAAAR,GACA5F,EAAAyF,OAAAG,GAGA5F,EAAAyF,OAAA,KACAjB,EAAA2B,eAAAE,OAAA,qBAOArG,EAAAiG,IAAA,WAEA,OADAX,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,GAAAtK,UAAAsK,EAOA,KALA,IAAAG,IACAA,GAAA,EACA,OAAA1F,EAAAyF,SAAA,IAAAjB,EAAA2B,eAAAG,IAAA,oBACAtG,EAAA2F,eAAA,IAEA3F,EAAAyF,OAAA,CACA,GAAAnJ,GAAA+I,EAAAhK,MAAA,KAAAiK,EACAtF,GAAAyF,OAAAnJ,KAOA0D,EAAAuG,WAAA,SAAAC,GACA,kBAEA,OADAlB,MACAC,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CD,EAAAC,GAAAtK,UAAAsK,EAEAvF,GAAAiG,IAAA5K,UAAA,IAAAmL,GAAAjQ,OAAA+O,MAMAtF,EAAAvD,MAAA,WAEA,OADA6I,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,GAAAtK,UAAAsK,EAEA,IAAAjJ,GAAA,4BAAA+I,EAAAhK,UAAA,GAAAiK,EACAX,GAAAlI,MAAAH,IAKA0D,EAAAyG,MAAA,WAEA,OADAnB,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,GAAAtK,UAAAsK,EAEA,IAAAjJ,GAAA,yBAAA+I,EAAAhK,UAAA,GAAAiK,EAEA,MADAX,GAAAlI,MAAAH,GACA,GAAAoK,OAAApK,IAKA0D,EAAA2G,KAAA,WAEA,OADArB,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,GAAAtK,UAAAsK,EAEA,IAAAjJ,GAAA,qBAAA+I,EAAAhK,UAAA,GAAAiK,EACAX,GAAAgC,KAAArK,IAMA0D,EAAA4G,mBAAA,WAEA,oBAAAtM,SACAA,OAAAC,UACAD,OAAAC,SAAAsM,WACA,IAAAvM,OAAAC,SAAAsM,SAAAC,QAAA,WACA9G,EAAA2G,KAAA,8FAOA3G,EAAA+G,2BAAA,SAAAC,GACAhH,EAAA2G,KAAAK,EACA,qEAQAhH,EAAAiH,oBAAA,SAAAC,GACA,uBAAAA,KACAA,MACAA,GAAAC,OAAAC,mBACAF,GAAAC,OAAAE,oBAKArH,EAAAsH,oBAAA,SAAAC,GACA,GAAA9C,EAAAtD,aAAA,aAAAqG,SAAAC,WACAF,QAEA,CAGA,GAAAG,IAAA,EACAC,EAAA,WACA,IAAAH,SAAAI,KAEA,WADAC,YAAAF,EAAAG,KAAAC,MAAA,IAGAL,KACAA,GAAA,EACAH,KAGAC,UAAAQ,kBACAR,SAAAQ,iBAAA,mBAAAL,GAAA,GAEArN,OAAA0N,iBAAA,OAAAL,GAAA,IAEAH,SAAAS,cAEAT,SAAAS,YAAA,gCACA,aAAAT,SAAAC,YACAE,MAGArN,OAAA2N,YAAA,SAAAN,MAWA3H,EAAAkI,SAAA,aAKAlI,EAAAmI,SAAA,aAOAnI,EAAAoI,YAAA,SAAAtL,EAAAuL,GACA,GAAAvL,IAAAuL,EACA,QAEA,IAAAvL,IAAAkD,EAAAkI,UAAAG,IAAArI,EAAAmI,SACA,QAEA,IAAAE,IAAArI,EAAAkI,UAAApL,IAAAkD,EAAAmI,SACA,QAGA,IAAAG,GAAAtI,EAAAuI,YAAAzL,GAAA0L,EAAAxI,EAAAuI,YAAAF,EACA,eAAAC,EACA,OAAAE,EACAF,EAAAE,GAAA,EAAA1L,EAAAxD,OAAA+O,EAAA/O,OAAAgP,EAAAE,GAGA,EAGA,OAAAA,EACA,EAGA1L,EAAAuL,GAAA,KASArI,EAAAyI,cAAA,SAAA3L,EAAAuL,GACA,MAAAvL,KAAAuL,EACA,EAEAvL,EAAAuL,GACA,EAGA,GAQArI,EAAA0I,WAAA,SAAAlP,EAAAmP,GACA,GAAAA,GAAAnP,IAAAmP,GACA,MAAAA,GAAAnP,EAGA,UAAAkN,OAAA,yBAAAlN,EAAA,gBAAA+K,EAAA5C,UAAAgH,KAOA3I,EAAA4I,kBAAA,SAAAD,GACA,oBAAAA,IAAA,OAAAA,EACA,MAAApE,GAAA5C,UAAAgH,EACA,IAAAE,KACA,QAAAC,KAAAH,GACAE,EAAAzM,KAAA0M,EAGAD,GAAAE,MAEA,QADAvP,GAAA,IACAH,EAAA,EAAmBA,EAAAwP,EAAAvP,OAAiBD,IACpC,IAAAA,IACAG,GAAA,KACAA,GAAA+K,EAAA5C,UAAAkH,EAAAxP,IACAG,GAAA,IACAA,GAAAwG,EAAA4I,kBAAAD,EAAAE,EAAAxP,IAGA,OADAG,IAAA,KASAwG,EAAAgJ,kBAAA,SAAAjE,EAAAkE,GACA,GAAAC,GAAAnE,EAAAzL,MACA,IAAA4P,GAAAD,EACA,OAAAlE,EAGA,QADAoE,MACAC,EAAA,EAAmBA,EAAAF,EAASE,GAAAH,EAC5BG,EAAAH,EAAAC,EACAC,EAAA/M,KAAA2I,EAAAsE,UAAAD,EAAAF,IAGAC,EAAA/M,KAAA2I,EAAAsE,UAAAD,IAAAH,GAGA,OAAAE,IAQAnJ,EAAAsJ,KAAA,SAAAX,EAAApB,GACA,GAAAjR,MAAAkP,QAAAmD,GACA,OAAAtP,GAAA,EAAuBA,EAAAsP,EAAArP,SAAgBD,EACvCkO,EAAAlO,EAAAsP,EAAAtP,QAUA8K,GAAA1B,QAAAkG,EAAA,SAAAnP,EAAA+P,GAAiD,MAAAhC,GAAAgC,EAAA/P,MASjDwG,EAAAwJ,aAAA,SAAAC,EAAAC,GACA,MAAAA,GAAAD,EAAAvD,KAAAwD,GAAAD,GASAzJ,EAAA2J,sBAAA,SAAAC,GACA1F,EAAAhE,QAAAF,EAAAiH,oBAAA2C,GAAA,sBACA,IACAC,GAAAC,EAAAC,EAAAC,EAAA3Q,EAAA4Q,EAAAlF,CAyBA,KAtBA,IAAA6E,GACAE,EAAA,EACAC,EAAA,EACAF,EAAA,EAAAD,KAAAM,IAAA,MAGAL,EAAAD,EAAA,EACAA,EAAA9B,KAAAqC,IAAAP,GACAA,GAAA9B,KAAAsC,IAAA,UAEAJ,EAAAlC,KAAAuC,IAAAvC,KAAAC,MAAAD,KAAA7B,IAAA2D,GAAA9B,KAAAwC,KAbA,MAcAR,EAAAE,EAdA,KAeAD,EAAAjC,KAAAyC,MAAAX,EAAA9B,KAAAsC,IAAA,EAhBA,GAgBAJ,GAAAlC,KAAAsC,IAAA,EAhBA,OAoBAN,EAAA,EACAC,EAAAjC,KAAAyC,MAAAX,EAAA9B,KAAAsC,IAAA,YAIAH,KACA5Q,EA1BA,GA0BmBA,EAAGA,GAAA,EACtB4Q,EAAA7N,KAAA2N,EAAA,OACAA,EAAAjC,KAAAC,MAAAgC,EAAA,EAEA,KAAA1Q,EA9BA,GA8BmBA,EAAGA,GAAA,EACtB4Q,EAAA7N,KAAA0N,EAAA,OACAA,EAAAhC,KAAAC,MAAA+B,EAAA,EAEAG,GAAA7N,KAAAyN,EAAA,KACAI,EAAAO,UACAzF,EAAAkF,EAAAQ,KAAA,GAEA,IAAAC,GAAA,EACA,KAAArR,EAAA,EAAeA,EAAA,GAAQA,GAAA,GACvB,GAAAsR,GAAAC,SAAA7F,EAAA8F,OAAAxR,EAAA,MAAAyR,SAAA,GACA,KAAAH,EAAArR,SACAqR,EAAA,IAAAA,GACAD,GAAAC,EAEA,MAAAD,GAAAK,eAOA/K,EAAAgL,+BAAA,WACA,yBAAA1Q,UACAA,OAAA,SACAA,OAAA,kBACA,UAAA2Q,KAAA3Q,OAAAC,SAAA2Q,QAMAlL,EAAAmL,kBAAA,WAEA,uBAAAC,UAAA,iBAAAA,SAAAC,IAQArL,EAAAsL,mBAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,eACA,aAAAF,EACAE,EACA,0FAGA,qBAAAF,EACAE,EAAA,6DAEA,eAAAF,IACAE,EAAA,6BAEA,IAAAhP,GAAA,GAAAiK,OAAA6E,EAAA,OAAAC,EAAAE,KAAAZ,WAAA,KAAAW,EAEA,OADAhP,GAAA8O,OAAAI,cACAlP,GAOAuD,EAAA4L,gBAAA,GAAAC,QAAA,iBAMA7L,EAAAuI,YAAA,SAAAxD,GACA,GAAA/E,EAAA4L,gBAAAX,KAAAlG,GAAA,CACA,GAAA+G,GAAA3E,OAAApC,EACA,IAAA+G,IAAA,YAAAA,GAAA,WACA,MAAAA,GAGA,aAmBA9L,EAAA+L,eAAA,SAAAxE,GACA,IACAA,IAEA,MAAAuC,GAEAjC,WAAA,WAKA,GAAAmE,GAAAlC,EAAAkC,OAAA,EAEA,MADAhM,GAAA2G,KAAA,yCAAAqF,GACAlC,GACShC,KAAAC,MAAA,MAWT/H,EAAAiM,iBAAA,SAAAxC,GAEA,OADAnE,MACAC,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CD,EAAAC,EAAA,GAAAtK,UAAAsK,EAEA,oBAAAkE,IACAzJ,EAAA+L,eAAA,WACAtC,EAAApO,UAAA,GAAAiK,MAOAtF,EAAAkM,aAAA,WASA,OARA,iBAAA5R,SACAA,OAAA,WACAA,OAAA,qBACA,IAKA6R,OAAA,gGASAnM,EAAAoM,iBAAA,SAAAC,EAAApP,EAAAqP,GACAxV,OAAAuB,eAAAgU,EAAApP,GAAyCqJ,IAAAgG,KAWzCtM,EAAAuM,sBAAA,SAAAhF,EAAAiF,GACA,GAAAlP,GAAAuK,WAAAN,EAAAiF,EAIA,OAHA,iBAAAlP,MAAA,OACAA,EAAA,QAEAA,IHgIM,SAAU9G,EAAQwJ,EAAStJ,GAEjC,YIjtBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KAMA+V,EAAA,WAMA,QAAAA,GAAAC,EAAAC,GACA,YAAAA,EAAA,CACA5R,KAAA6R,QAAAF,EAAAG,MAAA,IAGA,QADAC,GAAA,EACAzT,EAAA,EAA2BA,EAAA0B,KAAA6R,QAAAtT,OAAyBD,IACpD0B,KAAA6R,QAAAvT,GAAAC,OAAA,IACAyB,KAAA6R,QAAAE,GAAA/R,KAAA6R,QAAAvT,GACAyT,IAGA/R,MAAA6R,QAAAtT,OAAAwT,EACA/R,KAAAgS,UAAA,MAGAhS,MAAA6R,QAAAF,EACA3R,KAAAgS,UAAAJ,EAwLA,MArLA7V,QAAAuB,eAAAoU,EAAA,SAMAnG,IAAA,WACA,UAAAmG,GAAA,KAEAzU,YAAA,EACAE,cAAA,IAEAuU,EAAA5U,UAAAmV,SAAA,WACA,MAAAjS,MAAAgS,WAAAhS,KAAA6R,QAAAtT,OACA,KACAyB,KAAA6R,QAAA7R,KAAAgS,YAKAN,EAAA5U,UAAAoV,UAAA,WACA,MAAAlS,MAAA6R,QAAAtT,OAAAyB,KAAAgS,WAKAN,EAAA5U,UAAAqV,SAAA,WACA,GAAAP,GAAA5R,KAAAgS,SAIA,OAHAJ,GAAA5R,KAAA6R,QAAAtT,QACAqT,IAEA,GAAAF,GAAA1R,KAAA6R,QAAAD,IAKAF,EAAA5U,UAAAsV,QAAA,WACA,MAAApS,MAAAgS,UAAAhS,KAAA6R,QAAAtT,OACAyB,KAAA6R,QAAA7R,KAAA6R,QAAAtT,OAAA,GACA,MAEAmT,EAAA5U,UAAAiT,SAAA,WAEA,OADAsC,GAAA,GACA/T,EAAA0B,KAAAgS,UAAoC1T,EAAA0B,KAAA6R,QAAAtT,OAAyBD,IAC7D,KAAA0B,KAAA6R,QAAAvT,KACA+T,GAAA,IAAArS,KAAA6R,QAAAvT,GAEA,OAAA+T,IAAA,KAEAX,EAAA5U,UAAAwV,mBAAA,WAEA,OADAD,GAAA,GACA/T,EAAA0B,KAAAgS,UAAoC1T,EAAA0B,KAAA6R,QAAAtT,OAAyBD,IAC7D,KAAA0B,KAAA6R,QAAAvT,KACA+T,GAAA,IAAAE,mBAAAC,OAAAxS,KAAA6R,QAAAvT,KAEA,OAAA+T,IAAA,KAQAX,EAAA5U,UAAA2V,MAAA,SAAAC,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAC/B1S,KAAA6R,QAAAY,MAAAzS,KAAAgS,UAAAU,IAKAhB,EAAA5U,UAAA6V,OAAA,WACA,GAAA3S,KAAAgS,WAAAhS,KAAA6R,QAAAtT,OACA,WAEA,QADAqU,MACAtU,EAAA0B,KAAAgS,UAAoC1T,EAAA0B,KAAA6R,QAAAtT,OAAA,EAA6BD,IACjEsU,EAAAvR,KAAArB,KAAA6R,QAAAvT,GACA,WAAAoT,GAAAkB,EAAA,IAMAlB,EAAA5U,UAAA+V,MAAA,SAAAC,GAEA,OADAF,MACAtU,EAAA0B,KAAAgS,UAAoC1T,EAAA0B,KAAA6R,QAAAtT,OAAyBD,IAC7DsU,EAAAvR,KAAArB,KAAA6R,QAAAvT,GACA,IAAAwU,YAAApB,GACA,OAAApT,GAAAwU,EAAAd,UAAgD1T,EAAAwU,EAAAjB,QAAAtT,OAAiCD,IACjFsU,EAAAvR,KAAAyR,EAAAjB,QAAAvT,QAKA,QADAyU,GAAAD,EAAAhB,MAAA,KACAxT,EAAA,EAA2BA,EAAAyU,EAAAxU,OAAwBD,IACnDyU,EAAAzU,GAAAC,OAAA,GACAqU,EAAAvR,KAAA0R,EAAAzU,GAGA,WAAAoT,GAAAkB,EAAA,IAKAlB,EAAA5U,UAAAgL,QAAA,WACA,MAAA9H,MAAAgS,WAAAhS,KAAA6R,QAAAtT,QAOAmT,EAAAsB,aAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAhB,WAAAmB,EAAAF,EAAAjB,UACA,WAAAkB,EACA,MAAAD,EAEA,IAAAC,IAAAC,EACA,MAAA1B,GAAAsB,aAAAC,EAAAd,WAAAe,EAAAf,WAGA,UAAAxG,OAAA,8BACAuH,EACA,8BAEAD,EACA,MAQAvB,EAAA2B,aAAA,SAAAC,EAAAC,GAGA,OAFAC,GAAAF,EAAAb,QACAgB,EAAAF,EAAAd,QACAnU,EAAA,EAAuBA,EAAAkV,EAAAjV,QAAAD,EAAAmV,EAAAlV,OAA6CD,IAAA,CACpE,GAAAoV,GAAAvK,EAAAkE,YAAAmG,EAAAlV,GAAAmV,EAAAnV,GACA,QAAAoV,EACA,MAAAA,GAEA,MAAAF,GAAAjV,SAAAkV,EAAAlV,OACA,EACAiV,EAAAjV,OAAAkV,EAAAlV,QAAA,KAOAmT,EAAA5U,UAAA6W,OAAA,SAAAC,GACA,GAAA5T,KAAAkS,cAAA0B,EAAA1B,YACA,QAEA,QAAA5T,GAAA0B,KAAAgS,UAAA6B,EAAAD,EAAA5B,UAAyD1T,GAAA0B,KAAA6R,QAAAtT,OAA0BD,IAAAuV,IACnF,GAAA7T,KAAA6R,QAAAvT,KAAAsV,EAAA/B,QAAAgC,GACA,QAGA,WAOAnC,EAAA5U,UAAAuK,SAAA,SAAAuM,GACA,GAAAtV,GAAA0B,KAAAgS,UACA6B,EAAAD,EAAA5B,SACA,IAAAhS,KAAAkS,YAAA0B,EAAA1B,YACA,QAEA,MAAA5T,EAAA0B,KAAA6R,QAAAtT,QAAA,CACA,GAAAyB,KAAA6R,QAAAvT,KAAAsV,EAAA/B,QAAAgC,GACA,WAEAvV,IACAuV,EAEA,UAEAnC,IAEAzM,GAAAyM,MAWA,IAAAoC,GAAA,WAKA,QAAAA,GAAAnD,EAAAoD,GACA/T,KAAA+T,eAEA/T,KAAAgU,OAAArD,EAAA8B,QAEAzS,KAAAiU,YAAAlH,KAAAmH,IAAA,EAAAlU,KAAAgU,OAAAzV,OACA,QAAAD,GAAA,EAAuBA,EAAA0B,KAAAgU,OAAAzV,OAAwBD,IAC/C0B,KAAAiU,aAAA7K,EAAAH,aAAAjJ,KAAAgU,OAAA1V,GAEA0B,MAAAmU,cAgEA,MA9DApY,QAAAuB,eAAAwW,EAAA,kBAEAvI,IAAA,WACA,WAEAtO,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAAwW,EAAA,yBAEAvI,IAAA,WACA,YAEAtO,YAAA,EACAE,cAAA,IAGA2W,EAAAhX,UAAAuE,KAAA,SAAAwR,GAEA7S,KAAAgU,OAAAzV,OAAA,IACAyB,KAAAiU,aAAA,GAEAjU,KAAAgU,OAAA3S,KAAAwR,GACA7S,KAAAiU,aAAA7K,EAAAH,aAAA4J,GACA7S,KAAAmU,eAEAL,EAAAhX,UAAAsX,IAAA,WACA,GAAAC,GAAArU,KAAAgU,OAAAI,KACApU,MAAAiU,aAAA7K,EAAAH,aAAAoL,GAEArU,KAAAgU,OAAAzV,OAAA,IACAyB,KAAAiU,aAAA,IAGAH,EAAAhX,UAAAqX,YAAA,WACA,GAAAnU,KAAAiU,YAAAH,EAAAQ,sBACA,SAAA3I,OAAA3L,KAAA+T,aACA,8BACAD,EAAAQ,sBACA,WACAtU,KAAAiU,YACA,KAEA,IAAAjU,KAAAgU,OAAAzV,OAAAuV,EAAAS,eACA,SAAA5I,OAAA3L,KAAA+T,aACA,iEACAD,EAAAS,eACA,gCACAvU,KAAAwU,kBAQAV,EAAAhX,UAAA0X,cAAA,WACA,UAAAxU,KAAAgU,OAAAzV,OACA,GAEA,gBAAAyB,KAAAgU,OAAAtE,KAAA,UAEAoE,IAEA7O,GAAA6O,kBJyuBM,SAAUrY,EAAQwJ,EAAStJ,GAEjC,YKthCA,SAAA8Y,GAAAjG,GACAkG,EAAAlG,EAGA,QAAAmG,GAAAnG,GACAoG,EAAApG,EAbAzS,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAKAwY,GACAE,EANAC,EAAAlZ,EAAA,KACAmZ,EAAAnZ,EAAA,KACAwN,EAAAxN,EAAA,KACAoZ,EAAApZ,EAAA,KACAqZ,EAAArZ,EAAA,IAMAsJ,GAAAwP,kBAIAxP,EAAA0P,YAMA,IAAAM,GAAA,SAAAC,GAEA,QAAAD,KACA,cAAAC,KAAA5U,MAAAN,KAAAE,YAAAF,KAuDA,MAzDA6U,GAAAM,UAAAF,EAAAC,GAOAD,EAAAnY,UAAAsY,QAAA,SAAArT,EAAAuL,GACA,GAAA+H,GAAAtT,EAAAuT,KAAAC,cACAC,EAAAlI,EAAAgI,KAAAC,cACAE,EAAAJ,EAAAK,UAAAF,EACA,YAAAC,EACAtM,EAAAkE,YAAAtL,EAAAG,KAAAoL,EAAApL,MAGAuT,GAMAR,EAAAnY,UAAA6Y,YAAA,SAAAL,GACA,OAAAA,EAAAC,cAAAzN,WAKAmN,EAAAnY,UAAA8Y,oBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAN,cAAA5B,OAAAmC,EAAAP,gBAKAN,EAAAnY,UAAAiZ,QAAA,WACA,MAAAhB,GAAAiB,UAAAC,KAKAhB,EAAAnY,UAAAoZ,QAAA,WACA,UAAAnB,GAAAiB,UAAA7M,EAAAiE,SAAA,GAAA4H,GAAAmB,SAAA,kBAAAvB,KAOAK,EAAAnY,UAAAsZ,SAAA,SAAAC,EAAAnU,GACA,GAAAoU,GAAA5B,EAAA2B,EACA,WAAAtB,GAAAiB,UAAA9T,EAAA,GAAA8S,GAAAmB,SAAA,kBAAAG,KAKArB,EAAAnY,UAAAiT,SAAA,WACA,mBAEAkF,GACCH,EAAAyB,MACDtR,GAAAgQ,gBACAhQ,EAAAuR,eAAA,GAAAvB,ILsjCM,SAAUxZ,EAAQwJ,EAAStJ,GAEjC,YM1oCAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAYAua,GAZA5B,EAAAlZ,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA+a,EAAA/a,EAAA,KACAoZ,EAAApZ,EAAA,KACAgb,EAAAhb,EAAA,KACAib,EAAAjb,EAAA,KACAkb,EAAAlb,EAAA,KACAmb,EAAAnb,EAAA,KACAqZ,EAAArZ,EAAA,KACAob,EAAApb,EAAA,KAWAqb,EAAA,WAQA,QAAAA,GAAAC,EAAAC,EAAAC,GACAnX,KAAAiX,YACAjX,KAAAkX,gBACAlX,KAAAmX,YACAnX,KAAAoX,UAAA,KAMApX,KAAAkX,eACAP,EAAAU,qBAAArX,KAAAkX,eAEAlX,KAAAiX,UAAAnP,WACAqB,EAAAhE,QAAAnF,KAAAkX,eAAAlX,KAAAkX,cAAApP,UAAA,wCAuXA,MApXA/L,QAAAuB,eAAA0Z,EAAA,cACAzL,IAAA,WACA,MAAAkL,KACAA,EAAA,GAAAO,GAAA,GAAAN,GAAAY,UAAAP,EAAAQ,iBAAA,KAAAT,EAAAU,SAAAC,WAEAxa,YAAA,EACAE,cAAA,IAGA6Z,EAAAla,UAAA4a,WAAA,WACA,UAGAV,EAAAla,UAAAyY,YAAA,WACA,MAAAvV,MAAAkX,eAAAT,GAGAO,EAAAla,UAAA6a,eAAA,SAAAC,GACA,MAAA5X,MAAAiX,UAAAnP,UAEA9H,KAGA,GAAAgX,GAAAhX,KAAAiX,UAAAW,EAAA5X,KAAAmX,YAIAH,EAAAla,UAAA+a,kBAAA,SAAAC,GAEA,iBAAAA,EACA,MAAA9X,MAAAuV,aAGA,IAAA1C,GAAA7S,KAAAiX,UAAA1L,IAAAuM,EACA,eAAAjF,EAAA4D,EAAA5D,GAIAmE,EAAAla,UAAAib,SAAA,SAAApH,GACA,GAAAqH,GAAArH,EAAAsB,UACA,eAAA+F,EACAhY,KACAA,KAAA6X,kBAAAG,GAAAD,SAAApH,EAAAwB,aAGA6E,EAAAla,UAAAmb,SAAA,SAAAH,GACA,cAAA9X,KAAAiX,UAAA1L,IAAAuM,IAGAd,EAAAla,UAAAob,qBAAA,SAAAJ,EAAAK,GAEA,GADAhP,EAAAhE,OAAAgT,EAAA,8CACA,cAAAL,EACA,MAAA9X,MAAA2X,eAAAQ,EAGA,IAAAC,GAAA,GAAArD,GAAAiB,UAAA8B,EAAAK,GACAE,MAAA,GAAAC,MAAA,GAAAC,MAAA,EAUA,OATAJ,GAAArQ,WACAuQ,EAAArY,KAAAiX,UAAA3L,OAAAwM,GACAQ,EAAAtY,KAAAmX,UAAAqB,kBAAAJ,EAAApY,KAAAiX,aAGAoB,EAAArY,KAAAiX,UAAAwB,OAAAX,EAAAK,GACAG,EAAAtY,KAAAmX,UAAAuB,aAAAN,EAAApY,KAAAiX,YAEAsB,EAAAF,EAAAvQ,UAAA2O,EAAAzW,KAAAkX,cACA,GAAAF,GAAAqB,EAAAE,EAAAD,IAIAtB,EAAAla,UAAA6b,YAAA,SAAAhI,EAAAwH,GACA,GAAAH,GAAArH,EAAAsB,UACA,WAAA+F,EACA,MAAAG,EAGAhP,GAAAhE,OAAA,cAAAwL,EAAAsB,YAAA,IAAAtB,EAAAuB,YAAA,6CACA,IAAA0G,GAAA5Y,KAAA6X,kBAAAG,GAAAW,YAAAhI,EAAAwB,WAAAgG,EACA,OAAAnY,MAAAkY,qBAAAF,EAAAY,IAIA5B,EAAAla,UAAAgL,QAAA,WACA,MAAA9H,MAAAiX,UAAAnP,WAGAkP,EAAAla,UAAA+b,YAAA,WACA,MAAA7Y,MAAAiX,UAAA6B,SAGA9B,EAAAla,UAAA0R,IAAA,SAAAuK,GACA,GAAA/Y,KAAA8H,UACA,WACA,IAAA8F,MACAoL,EAAA,EAAAC,EAAA,EAAAC,GAAA,CAWA,IAVAlZ,KAAAmZ,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACAxL,EAAAnP,GAAA2a,EAAA5K,IAAAuK,GACAC,IACAE,GAAAlC,EAAAnG,gBAAAX,KAAAzR,GACAwa,EAAAlM,KAAAmH,IAAA+E,EAAA7M,OAAA3N,IAGAya,GAAA,KAGAH,GAAAG,GAAAD,EAAA,EAAAD,EAAA,CAEA,GAAAK,KACA,QAAA5a,KAAAmP,GACAyL,EAAA5a,GAAAmP,EAAAnP,EACA,OAAA4a,GAMA,MAHAN,KAAA/Y,KAAAuV,cAAAzN,YACA8F,EAAA,aAAA5N,KAAAuV,cAAA/G,OAEAZ,GAIAoJ,EAAAla,UAAAwc,KAAA,WACA,UAAAtZ,KAAAoX,UAAA,CACA,GAAAmC,GAAA,EACAvZ,MAAAuV,cAAAzN,YACAyR,GACA,YACA5C,EAAA6C,iBAAAxZ,KAAAuV,cAAA/G,OACA,KACAxO,KAAAmZ,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACA,GAAAK,GAAAL,EAAAE,MACA,MAAAG,IACAF,GAAA,IAAA9a,EAAA,IAAAgb,KAEAzZ,KAAAoX,UAAA,KAAAmC,EAAA,GAAAnQ,EAAAW,KAAAwP,GAEA,MAAAvZ,MAAAoX,WAGAJ,EAAAla,UAAA4c,wBAAA,SAAA5B,EAAAsB,EAAAO,GACA,GAAAC,GAAA5Z,KAAA6Z,cAAAF,EACA,IAAAC,EAAA,CACA,GAAAE,GAAAF,EAAAG,kBAAA,GAAAhF,GAAAiB,UAAA8B,EAAAsB,GACA,OAAAU,KAAA5X,KAAA,KAGA,MAAAlC,MAAAiX,UAAA8C,kBAAAjC,IAOAd,EAAAla,UAAAkd,kBAAA,SAAAC,GACA,GAAAL,GAAA5Z,KAAA6Z,cAAAI,EACA,IAAAL,EAAA,CACA,GAAAM,GAAAN,EAAAM,QACA,OAAAA,MAAAhY,KAGA,MAAAlC,MAAAiX,UAAAiD,UAOAlD,EAAAla,UAAAqd,cAAA,SAAAF,GACA,GAAAC,GAAAla,KAAAga,kBAAAC,EACA,OAAAC,GACA,GAAAnF,GAAAiB,UAAAkE,EAAAla,KAAAiX,UAAA1L,IAAA2O,IAGA,MAQAlD,EAAAla,UAAAsd,iBAAA,SAAAH,GACA,GAAAL,GAAA5Z,KAAA6Z,cAAAI,EACA,IAAAL,EAAA,CACA,GAAAX,GAAAW,EAAAX,QACA,OAAAA,MAAA/W,KAGA,MAAAlC,MAAAiX,UAAAgC,UAOAjC,EAAAla,UAAAud,aAAA,SAAAJ,GACA,GAAAhB,GAAAjZ,KAAAoa,iBAAAH,EACA,OAAAhB,GACA,GAAAlE,GAAAiB,UAAAiD,EAAAjZ,KAAAiX,UAAA1L,IAAA0N,IAGA,MAMAjC,EAAAla,UAAAqc,aAAA,SAAAQ,EAAAW,GACA,GAAAV,GAAA5Z,KAAA6Z,cAAAF,EACA,OAAAC,GACAA,EAAAW,iBAAA,SAAAC,GACA,MAAAF,GAAAE,EAAAtY,KAAAsY,EAAAlF,QAIAtV,KAAAiX,UAAAsD,iBAAAD,IAOAtD,EAAAla,UAAA2d,YAAA,SAAAR,GACA,MAAAja,MAAA0a,gBAAAT,EAAAlE,UAAAkE,IAQAjD,EAAAla,UAAA4d,gBAAA,SAAAC,EAAAV,GACA,GAAAL,GAAA5Z,KAAA6Z,cAAAI,EACA,IAAAL,EACA,MAAAA,GAAAc,gBAAAC,EAAA,SAAAlc,GAAkE,MAAAA,IAKlE,KAFA,GAAAmc,GAAA5a,KAAAiX,UAAAyD,gBAAAC,EAAAzY,KAAA6S,EAAAiB,UAAA6E,MACAC,EAAAF,EAAAG,OACA,MAAAD,GAAAb,EAAA7E,QAAA0F,EAAAH,GAAA,GACAC,EAAAI,UACAF,EAAAF,EAAAG,MAEA,OAAAH,IAOA5D,EAAAla,UAAAme,mBAAA,SAAAhB,GACA,MAAAja,MAAAkb,uBAAAjB,EAAA/D,UAAA+D,IAOAjD,EAAAla,UAAAoe,uBAAA,SAAAC,EAAAlB,GACA,GAAAL,GAAA5Z,KAAA6Z,cAAAI,EACA,IAAAL,EACA,MAAAA,GAAAsB,uBAAAC,EAAA,SAAA1c,GACA,MAAAA,IAMA,KAFA,GAAAmc,GAAA5a,KAAAiX,UAAAiE,uBAAAC,EAAAjZ,KAAA6S,EAAAiB,UAAA6E,MACAC,EAAAF,EAAAG,OACA,MAAAD,GAAAb,EAAA7E,QAAA0F,EAAAK,GAAA,GACAP,EAAAI,UACAF,EAAAF,EAAAG,MAEA,OAAAH,IAMA5D,EAAAla,UAAA4Y,UAAA,SAAA9B,GACA,MAAA5T,MAAA8H,UACA8L,EAAA9L,UACA,GAGA,EAGA8L,EAAA8D,cAAA9D,EAAA9L,UACA,EAEA8L,IAAA3O,EAAA2P,UACA,EAIA,GAMAoC,EAAAla,UAAAse,UAAA,SAAAnB,GACA,GAAAA,IAAApD,EAAAwE,WACArb,KAAAmX,UAAAmE,SAAArB,GACA,MAAAja,KAGA,IAAAsY,GAAAtY,KAAAmX,UAAAoE,SAAAtB,EAAAja,KAAAiX,UACA,WAAAD,GAAAhX,KAAAiX,UAAAjX,KAAAkX,cAAAoB,IAMAtB,EAAAla,UAAA0e,UAAA,SAAA7B,GACA,MAAAA,KAAA9C,EAAAwE,WAAArb,KAAAmX,UAAAmE,SAAA3B,IAKA3C,EAAAla,UAAA6W,OAAA,SAAAC,GACA,GAAAA,IAAA5T,KACA,QAEA,IAAA4T,EAAA8D,aACA,QAGA,IAAA+D,GAAA7H,CACA,IAAA5T,KAAAuV,cAAA5B,OAAA8H,EAAAlG,eAGA,IAAAvV,KAAAiX,UAAA6B,UAAA2C,EAAAxE,UAAA6B,QAAA,CAKA,IAJA,GAAA4C,GAAA1b,KAAAya,YAAA7D,EAAAJ,gBACAmF,EAAAF,EAAAhB,YAAA7D,EAAAJ,gBACAoF,EAAAF,EAAAV,UACAa,EAAAF,EAAAX,UACAY,GAAAC,GAAA,CACA,GAAAD,EAAA1Z,OAAA2Z,EAAA3Z,OACA0Z,EAAAtG,KAAA3B,OAAAkI,EAAAvG,MACA,QAEAsG,GAAAF,EAAAV,UACAa,EAAAF,EAAAX,UAEA,cAAAY,GAAA,OAAAC,EAGA,SAlBA,UA8BA7E,EAAAla,UAAA+c,cAAA,SAAAI,GACA,MAAAA,KAAApD,EAAAwE,UACA,KAGArb,KAAAmX,UAAA5L,IAAA0O,EAAAlK,aAOAiH,EAAAnG,gBAAA,iBACAmG,IAEA/R,GAAA+R,cAMA,IAAA8E,GAAA,SAAA5G,GAEA,QAAA4G,KACA,MAAA5G,GAAAzY,KAAAuD,KAAA,GAAA0W,GAAAY,UAAAP,EAAAQ,iBAAAP,EAAAP,WAAAK,EAAAU,SAAAC,UAAAzX,KAuBA,MAzBA6U,GAAAM,UAAA2G,EAAA5G,GAIA4G,EAAAhf,UAAA4Y,UAAA,SAAA9B,GACA,MAAAA,KAAA5T,KACA,EAGA,GAGA8b,EAAAhf,UAAA6W,OAAA,SAAAC,GAEA,MAAAA,KAAA5T,MAEA8b,EAAAhf,UAAAyY,YAAA,WACA,MAAAvV,OAEA8b,EAAAhf,UAAA+a,kBAAA,SAAAC,GACA,MAAAd,GAAAP,YAEAqF,EAAAhf,UAAAgL,QAAA,WACA,UAEAgU,GACC9E,EACD/R,GAAA6W,UAMA7W,EAAA2P,SAAA,GAAAkH,GACA/f,OAAAE,iBAAA8Y,EAAAiB,WACAC,KACA/Z,MAAA,GAAA6Y,GAAAiB,UAAA5M,EAAA+D,SAAA6J,EAAAP,aAEAsF,KACA7f,MAAA,GAAA6Y,GAAAiB,UAAA5M,EAAAgE,SAAAnI,EAAA2P,aAMAiC,EAAAmF,SAAAC,aAAAjF,EAAAP,WACAzB,EAAAmB,SAAA+F,0BAAAlF,EACAL,EAAAhC,WAAA1P,EAAA2P,UACAgC,EAAAjC,WAAA1P,EAAA2P,WNkqCM,SAAUnZ,EAAQC,EAAqBC,GAE7C,YO5nDA,SAAAwZ,GAAAgH,EAAA7O,GAEA,QAAA8O,KAAmBpc,KAAAhD,YAAAmf,EADnBE,EAAAF,EAAA7O,GAEA6O,EAAArf,UAAA,OAAAwQ,EAAAvR,OAAAgB,OAAAuQ,IAAA8O,EAAAtf,UAAAwQ,EAAAxQ,UAAA,GAAAsf,IAWA,QAAAE,GAAAxN,EAAAC,GACA,GAAAwN,KACA,QAAAvX,KAAA8J,GAAA/S,OAAAe,UAAA0f,eAAA/f,KAAAqS,EAAA9J,IAAA+J,EAAAhD,QAAA/G,GAAA,IACAuX,EAAAvX,GAAA8J,EAAA9J,GACA,UAAA8J,GAAA,mBAAA/S,QAAA0gB,sBACA,OAAAne,GAAA,EAAA0G,EAAAjJ,OAAA0gB,sBAAA3N,GAA4DxQ,EAAA0G,EAAAzG,OAAcD,IAAAyQ,EAAAhD,QAAA/G,EAAA1G,IAAA,IAC1Eie,EAAAvX,EAAA1G,IAAAwQ,EAAA9J,EAAA1G,IACA,OAAAie,GAGA,QAAAG,GAAAC,EAAAve,EAAAK,EAAAme,GACA,GAAAT,GAAA9N,EAAAnO,UAAA3B,OAAAse,EAAAxO,EAAA,EAAAjQ,EAAA,OAAAwe,IAAA7gB,OAAA+gB,yBAAA1e,EAAAK,GAAAme,CACA,qBAAAG,UAAA,mBAAAA,SAAAC,SAAAH,EAAAE,QAAAC,SAAAL,EAAAve,EAAAK,EAAAme,OACA,QAAAte,GAAAqe,EAAApe,OAAA,EAA4CD,GAAA,EAAQA,KAAA6d,EAAAQ,EAAAre,MAAAue,GAAAxO,EAAA,EAAA8N,EAAAU,GAAAxO,EAAA,EAAA8N,EAAA/d,EAAAK,EAAAoe,GAAAV,EAAA/d,EAAAK,KAAAoe,EACpD,OAAAxO,GAAA,GAAAwO,GAAA9gB,OAAAuB,eAAAc,EAAAK,EAAAoe,KAGA,QAAAI,GAAAC,EAAAC,GACA,gBAAA/e,EAAAK,GAAmC0e,EAAA/e,EAAAK,EAAAye,IAGnC,QAAAE,GAAAC,EAAAC,GACA,oBAAAP,UAAA,mBAAAA,SAAAQ,SAAA,MAAAR,SAAAQ,SAAAF,EAAAC,GAGA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAD,MAAAE,UAAA,SAAAC,EAAAC,GACA,QAAAC,GAAA9hB,GAAmC,IAAM+hB,EAAAL,EAAA9C,KAAA5e,IAA+B,MAAA6S,GAAYgP,EAAAhP,IACpF,QAAAmP,GAAAhiB,GAAkC,IAAM+hB,EAAAL,EAAA,MAAA1hB,IAAmC,MAAA6S,GAAYgP,EAAAhP,IACvF,QAAAkP,GAAAE,GAA+BA,EAAAC,KAAAN,EAAAK,EAAAjiB,OAAA,GAAAyhB,GAAA,SAAAG,GAAiEA,EAAAK,EAAAjiB,SAAyBsF,KAAAwc,EAAAE,GACzHD,GAAAL,IAAAtd,MAAAmd,EAAAC,QAAA5C,UAIA,QAAAuD,GAAAZ,EAAA5Q,GAGA,QAAAyR,GAAA7gB,GAAsB,gBAAAoR,GAAsB,MAAAoP,IAAAxgB,EAAAoR,KAC5C,QAAAoP,GAAAM,GACA,GAAAvP,EAAA,SAAA1S,WAAA,kCACA,MAAAkiB,GAAA,IACA,GAAAxP,EAAA,EAAAyP,IAAAlC,EAAAkC,EAAA,EAAAF,EAAA,YAAAA,EAAA,uBAAAhC,IAAA9f,KAAAgiB,EAAAF,EAAA,KAAAH,KAAA,MAAA7B,EAEA,QADAkC,EAAA,EAAAlC,IAAAgC,GAAA,EAAAhC,EAAArgB,QACAqiB,EAAA,IACA,cAAAhC,EAAAgC,CAAuC,MACvC,QAAkC,MAAlCC,GAAAlb,SAA2CpH,MAAAqiB,EAAA,GAAAH,MAAA,EAC3C,QAAAI,EAAAlb,QAAkCmb,EAAAF,EAAA,GAAWA,GAAA,EAAU,SACvD,QAAAA,EAAAC,EAAAE,IAAAtK,MAAyCoK,EAAAG,KAAAvK,KAAc,SACvD,SACA,GAAAmI,EAAAiC,EAAAG,OAAApC,IAAAhe,OAAA,GAAAge,IAAAhe,OAAA,UAAAggB,EAAA,QAAAA,EAAA,KAA6GC,EAAA,CAAO,UACpH,OAAAD,EAAA,MAAAhC,GAAAgC,EAAA,GAAAhC,EAAA,IAAAgC,EAAA,GAAAhC,EAAA,KAAgFiC,EAAAlb,MAAAib,EAAA,EAAiB,OACjG,OAAAA,EAAA,IAAAC,EAAAlb,MAAAiZ,EAAA,IAAwDiC,EAAAlb,MAAAiZ,EAAA,GAAgBA,EAAAgC,CAAQ,OAChF,GAAAhC,GAAAiC,EAAAlb,MAAAiZ,EAAA,IAA8CiC,EAAAlb,MAAAiZ,EAAA,GAAgBiC,EAAAE,IAAArd,KAAAkd,EAAgB,OAC9EhC,EAAA,IAAAiC,EAAAE,IAAAtK,MACAoK,EAAAG,KAAAvK,KAAiC,UAEjCmK,EAAA1R,EAAApQ,KAAAghB,EAAAe,GACS,MAAAzP,GAAYwP,GAAA,EAAAxP,GAAa0P,EAAA,EAAS,QAAUzP,EAAAuN,EAAA,EACrD,KAAAgC,EAAA,QAAAA,GAAA,EAAmC,QAASriB,MAAAqiB,EAAA,GAAAA,EAAA,UAAAH,MAAA,GAvB5C,GAAwGpP,GAAAyP,EAAAlC,EAAAqC,EAAxGJ,GAAalb,MAAA,EAAAub,KAAA,WAA6B,KAAAtC,EAAA,QAAAA,GAAA,EAA0B,OAAAA,GAAA,IAAeoC,QAAAD,OACnF,OAAAE,IAAgB9D,KAAAwD,EAAA,GAAAQ,MAAAR,EAAA,GAAAS,OAAAT,EAAA,IAAqD,mBAAAU,UAAAJ,EAAAI,OAAApE,UAAA,WAAoE,MAAA5a,QAAe4e,EA0BxJ,QAAAK,GAAAC,EAAAja,GACA,OAAAD,KAAAka,GAAAja,EAAAuX,eAAAxX,KAAAC,EAAAD,GAAAka,EAAAla,IAGA,QAAAma,GAAAC,GACA,GAAAF,GAAA,mBAAAF,SAAAI,EAAAJ,OAAApE,UAAAtc,EAAA,CACA,OAAA4gB,KAAAziB,KAAA2iB,IAEAtE,KAAA,WAEA,MADAsE,IAAA9gB,GAAA8gB,EAAA7gB,SAAA6gB,MAAA,KACoBljB,MAAAkjB,KAAA9gB,KAAA8f,MAAAgB,KAKpB,QAAAC,GAAAD,EAAA3hB,GACA,GAAAyhB,GAAA,mBAAAF,SAAAI,EAAAJ,OAAApE,SACA,KAAAsE,EAAA,MAAAE,EACA,IAAAvC,GAAA9N,EAAAzQ,EAAA4gB,EAAAziB,KAAA2iB,GAAAE,IACA,KACA,eAAA7hB,QAAA,MAAAof,EAAAve,EAAAwc,QAAAsD,MAAAkB,EAAAje,KAAAwb,EAAA3gB,OAEA,MAAAwF,GAAmBqN,GAAMrN,SACzB,QACA,IACAmb,MAAAuB,OAAAc,EAAA5gB,EAAA,SAAA4gB,EAAAziB,KAAA6B,GAEA,QAAiB,GAAAyQ,EAAA,KAAAA,GAAArN,OAEjB,MAAA4d,GAGA,QAAAC,KACA,OAAAD,MAAAhhB,EAAA,EAA4BA,EAAA4B,UAAA3B,OAAsBD,IAClDghB,IAAA9jB,OAAA6jB,EAAAnf,UAAA5B,IACA,OAAAghB,GAGA,QAAAE,GAAA3Q,GACA,MAAA7O,gBAAAwf,IAAAxf,KAAA6O,IAAA7O,MAAA,GAAAwf,GAAA3Q,GAGA,QAAA4Q,GAAAhC,EAAAC,EAAAE,GAIA,QAAAU,GAAA7gB,GAAsBmhB,EAAAnhB,KAAAa,EAAAb,GAAA,SAAAoR,GAAgC,UAAAgP,SAAA,SAAA9b,EAAAuL,GAAqCoS,EAAAre,MAAA5D,EAAAoR,EAAA9M,EAAAuL,IAAA,GAAAqS,EAAAliB,EAAAoR,OAC3F,QAAA8Q,GAAAliB,EAAAoR,GAA2B,IAAMoP,EAAAW,EAAAnhB,GAAAoR,IAAiB,MAAAE,GAAY6Q,EAAAF,EAAA,MAAA3Q,IAC9D,QAAAkP,GAAApB,GAAsBA,EAAA3gB,gBAAAsjB,GAAA3B,QAAAC,QAAAjB,EAAA3gB,MAAA2S,GAAArN,KAAAqe,EAAA9B,GAAA6B,EAAAF,EAAA,MAAA7C,GACtB,QAAAgD,GAAA3jB,GAA6ByjB,EAAA,OAAAzjB,GAC7B,QAAA6hB,GAAA7hB,GAA4ByjB,EAAA,QAAAzjB,GAC5B,QAAA0jB,GAAA5Q,EAAAH,GAA2BG,EAAAH,GAAA6Q,EAAAI,QAAAJ,EAAAnhB,QAAAohB,EAAAD,EAAA,MAAAA,EAAA,OAR3B,IAAAV,OAAAe,cAAA,SAAAzjB,WAAA,uCACA,IAAAgC,GAAAsgB,EAAAhB,EAAAtd,MAAAmd,EAAAC,OAAAgC,IACA,OAAAphB,MAAiBggB,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAAhgB,EAAA0gB,OAAAe,eAAA,WAAsF,MAAA/f,OAAe1B,EAStH,QAAA0hB,GAAAZ,GAGA,QAAAd,GAAA7gB,EAAAuR,GAAyBoQ,EAAA3hB,KAAAa,EAAAb,GAAA,SAAAoR,GAAgC,OAAA7J,OAAoB9I,MAAAsjB,EAAAJ,EAAA3hB,GAAAoR,IAAAuP,KAAA,WAAA3gB,GAAgDuR,IAAAH,OAF7H,GAAAvQ,GAAA0G,CACA,OAAA1G,MAAiBggB,EAAA,QAAAA,EAAA,iBAAAvP,GAA4C,KAAAA,KAAWuP,EAAA,UAAAhgB,EAAA0gB,OAAApE,UAAA,WAAqD,MAAA5a,OAAe1B,EAI5I,QAAA2hB,GAAAb,GACA,IAAAJ,OAAAe,cAAA,SAAAzjB,WAAA,uCACA,IAAA4iB,GAAAE,EAAAJ,OAAAe,cACA,OAAAb,KAAAziB,KAAA2iB,GAAA,mBAAAD,KAAAC,KAAAJ,OAAApE,YAGA,QAAAsF,GAAAC,EAAArkB,GAEA,MADAC,QAAAuB,eAAgCvB,OAAAuB,eAAA6iB,EAAA,OAAuCjkB,MAAAJ,IAAwBqkB,EAAArkB,MAC/FqkB,EAGA,QAAAC,GAAAC,GACA,GAAAA,KAAAC,WAAA,MAAAD,EACA,IAAAlC,KACA,UAAAkC,EAAA,OAAAtS,KAAAsS,GAAAtkB,OAAAygB,eAAA/f,KAAA4jB,EAAAtS,KAAAoQ,EAAApQ,GAAAsS,EAAAtS,GAEA,OADAoQ,GAAAoC,QAAAF,EACAlC,EAGA,QAAAqC,GAAAH,GACA,MAAAA,MAAAC,WAAAD,GAA4CE,QAAAF,GPi+C5CtkB,OAAOuB,eAAe5B,EAAqB,cAAgBQ,OAAO,IACjCR,EAA+B,UAAIyZ,EACrCxZ,EAAoBwgB,EAAEzgB,EAAqB,WAAY,WAAa,MAAO+kB,KACzE/kB,EAA4B,OAAI4gB,EAChC5gB,EAAgC,WAAIghB,EACpChhB,EAA6B,QAAIuhB,EACjCvhB,EAAgC,WAAI0hB,EACpC1hB,EAA+B,UAAI8hB,EACnC9hB,EAAiC,YAAI2iB,EACrC3iB,EAAkC,aAAIujB,EACtCvjB,EAA8B,SAAIyjB,EAClCzjB,EAA4B,OAAI2jB,EAChC3jB,EAA8B,SAAI6jB,EAClC7jB,EAA6B,QAAI8jB,EACjC9jB,EAAsC,iBAAI+jB,EAC1C/jB,EAAsC,iBAAIskB,EAC1CtkB,EAAmC,cAAIukB,EACvCvkB,EAA0C,qBAAIwkB,EAC9CxkB,EAAkC,aAAI0kB,EOnqDvE1kB,EAAA,gBAAA8kB,CAgBA,IAAAnE,GAAAtgB,OAAAqB,iBACMC,uBAAgB9B,QAAA,SAAA4gB,EAAA7O,GAAsC6O,EAAA9e,UAAAiQ,IAC5D,SAAA6O,EAAA7O,GAAqB,OAAAtI,KAAAsI,KAAAkP,eAAAxX,KAAAmX,EAAAnX,GAAAsI,EAAAtI,KAQrByb,EAAA1kB,OAAA2kB,QAAA,SAAAnE,GACA,OAAAzN,GAAAxQ,EAAA,EAAAb,EAAAyC,UAAA3B,OAA4CD,EAAAb,EAAOa,IAAA,CACnDwQ,EAAA5O,UAAA5B,EACA,QAAA0G,KAAA8J,GAAA/S,OAAAe,UAAA0f,eAAA/f,KAAAqS,EAAA9J,KAAAuX,EAAAvX,GAAA8J,EAAA9J,IAEA,MAAAuX,KP4zDM,SAAU9gB,EAAQwJ,EAAStJ,GAEjC,YQ70DAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAQ9C,IAAA8Z,GAAA,WACA,QAAAA,GAAA9T,EAAAoT,GACAtV,KAAAkC,OACAlC,KAAAsV,OAWA,MAHAU,GAAA6E,KAAA,SAAA3Y,EAAAoT,GACA,UAAAU,GAAA9T,EAAAoT,IAEAU,IAEA/Q,GAAA+Q,aRq2DM,SAAUva,EAAQC,EAAqBC,GAE7C,YAWolD,SAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAAS6kB,GAAyB/S,EAAIE,GAAM,GAAI1P,KAAU,KAAI,GAAIE,KAAKsP,GAAQE,EAAK/B,QAAQzN,IAAI,GAAevC,OAAOe,UAAU0f,eAAe/f,KAAKmR,EAAItP,KAAYF,EAAOE,GAAGsP,EAAItP,GAAI,OAAOF,GAVx3DzC,EAAoBwgB,EAAEzgB,EAAqB,IAAK,WAAa,MAAOklB,KACpEjlB,EAAoBwgB,EAAEzgB,EAAqB,IAAK,WAAa,MAAOmlB,IAC9E,IAAItjB,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEG,EAAkD/B,EAAoB,GACtEmlB,EAAiDnlB,EAAoB,IACrEolB,EAAmDplB,EAAoB,KACvEqlB,EAA4CrlB,EAAoB,IAChEslB,EAA6CtlB,EAAoB,IACjEulB,EAAkDvlB,EAAoB,IAC3FiD,EAAgBhD,GAAwB,sIAAsI,kFAAkF,oFAAoF,SAAS,wFAAwF,SAAS,OAAO,sIAAsI,kFAAkF,oFAAoF,SAAS,wFAAwF,SAAS,OAAOiD,EAAiBjD,GAAwB,8FAA8F,SAAS,OAAO,8FAA8F,SAAS,OAAOkD,EAAiBlD,GAAwB,oBAAoB,sBAAsB,6BAA6B,cAAc,UAAU,SAAS,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,mBAAmB,cAAc,OAAO,oBAAoB,sBAAsB,6BAA6B,cAAc,UAAU,SAAS,gBAAgB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,mBAAmB,cAAc,OSl5DvkDulB,EAAgB,SAAAvhB,GAAA,GAAGwhB,GAAHxhB,EAAGwhB,UAAWpd,EAAdpE,EAAcoE,KAAMqd,EAApBzhB,EAAoByhB,SAAUhd,EAA9BzE,EAA8ByE,UAAWN,EAAzCnE,EAAyCmE,OAAzC,OACpBvG,GAAAuE,EAAAC,cAACxE,EAAAuE,EAAMM,SAAP,KACG2B,GAAQxG,EAAAuE,EAAAC,cAACsf,GAAWvd,QAASA,EAASuP,MAAA,EAAKtP,KAAMA,EAAMK,UAAWA,IACnE7G,EAAAuE,EAAAC,cAACuf,GAAWxd,QAASA,EAASM,UAAWA,GAAagd,GACrDD,GAAa5jB,EAAAuE,EAAAC,cAACsf,GAAWvd,QAASA,EAASC,KAAMod,EAAW/c,UAAWA,IACvEN,GACCvG,EAAAuE,EAAAC,cAAC+e,EAAA,GACCS,OAAQC,SAAU,WAAYnO,KAAM,MAAOoO,UAAW,oBACtDC,KAAK,KACLC,MAAOX,EAAA,EAAMY,gBAAgB,OAM/BC,EAAS,SAAAC,GAAA,GAAM1jB,GAANsiB,EAAAoB,MAAaC,EAAbD,EAAaC,UAAWR,EAAxBO,EAAwBP,MAAOnd,EAA/B0d,EAA+B1d,SAA/B,OACb7G,GAAAuE,EAAAC,cAACigB,EAADlmB,OAAA2kB,QACEsB,UAAWA,EACXR,MAAOA,EACPnd,UAAWA,GACPhG,GAEJb,EAAAuE,EAAAC,cAACmf,EAAkB9iB,KAIjBuiB,EAAa,SAAAsB,GAAA,GAAM7jB,GAANsiB,EAAAuB,MAAaF,EAAbE,EAAaF,UAAWR,EAAxBU,EAAwBV,MAAOnd,EAA/B6d,EAA+B7d,UAChD8L,EADiB+R,EACjB/R,KAAMgS,EADWD,EACXC,IAAK/jB,EADM8jB,EACN9jB,MADM,OAEjBZ,GAAAuE,EAAAC,cAACogB,GACCJ,UAAWA,EACXR,MAAOA,EACPnd,UAAWA,EACX8L,KAAMA,EACNgS,IAAKA,EACL/jB,OAAQA,GAERZ,EAAAuE,EAAAC,cAACmf,EAAkB9iB,KAIjBwiB,EAAe,SAAAwB,GAAA,GAAMhkB,GAANsiB,EAAA0B,MAAaL,EAAbK,EAAaL,UAAWR,EAAxBa,EAAwBb,MAAOnd,EAA/Bge,EAA+Bhe,UAAWC,EAA1C+d,EAA0C/d,EAA1C,OACnB9G,GAAAuE,EAAAC,cAACsgB,GACCN,UAAWA,EACXR,MAAOA,EACPld,GAAIA,EACJD,UAAWA,EAAY,EAAI,GAE3B7G,EAAAuE,EAAAC,cAACmf,EAAkB9iB,KAIjB4jB,EAAkBvkB,EAAA,EAAO6kB,OAAzB3jB,EAOmB,SAAAP,GAAA,MAASA,GAAMuG,MAAMC,oBAInC,SAAAxG,GAAA,MAASA,GAAMuG,MAAMid,gBAAgB,IAK5C,SAAAxjB,GAAA,OAAUA,EAAMgG,WAAP,oEAGgBhG,EAAMuG,MAAMC,mBAH5B,wBAIOxG,EAAMuG,MAAMG,aAAa,IAJhC,uBAKM1G,EAAMuG,MAAM4d,SAAS,IAL3B,6NAiBgBnkB,EAAMuG,MAAMC,mBAjB5B,wBAkBOxG,EAAMuG,MAAMG,aAAa,GAlBhC,uBAmBM1G,EAAMuG,MAAM4d,SAAS,GAnB3B,iIA6BT,SAAAnkB,GAAA,OAAUA,EAAMyF,WAAazF,EAAMgG,WAA1B,2JASOtI,OAAAmlB,EAAA,GAAU7iB,EAAMuG,MAAMG,aAAa,GAAI,IAT9C,kEAsBT,SAAA1G,GAAA,MAASA,GAAMgG,WAAN,uCAEAhG,EAAMuG,MAAMG,aAAa,GAFzB,kPAeO1G,EAAMuG,MAAMG,aAAa,IAfhC,4HAkBsB1G,EAAMuG,MAAMC,mBAlBlC,8SAqCT,SAAAxG,GAAA,MAASA,GAAM2F,MAAN,mCAKPoe,EAAsBH,EAAgBQ,cAAc,KACpDH,EAAwBL,EAAgBQ,cAAc3B,EAAA,GAEtDS,EAAa7jB,EAAA,EAAOglB,KAApB7jB,EAMF,SAAAR,GAAA,MAASA,GAAM0F,SAAN,iCAIT,SAAA1F,GAAA,MAASA,GAAMgG,UAAN,gBACAhG,EAAMuG,MAAMG,aAAa,GADzB,wBAGA1G,EAAMuG,MAAMid,gBAAgB,GAH5B,UAOPP,EAAavlB,OAAA2B,EAAA,GAAOsjB,EAAA,GAApBliB,EACW,SAAAT,GAAA,MAASA,GAAMiV,KAAO,IAAM,QAC3B,SAAAjV,GAAA,MAASA,GAAMiV,KAAO,OAAS,KACxB,SAAAjV,GAAA,MAASA,GAAMuG,MAAMC,oBACpC,SAAAxG,GAAA,MAASA,GAAMuG,MAAMid,gBAAgB,IAE3C,SAAAxjB,GAAA,MAASA,GAAMgG,WAAN,eACDhG,EAAMuG,MAAMG,aAAa,GADxB,SAITkd,EACAA,EACAG,EACAA,EACAE,EACAA,EACE,SAAAjkB,GAAA,MAAwB,eAAfA,EAAM2F,MAAN,oDAKX,SAAA3F,GAAA,MAASA,GAAM0F,SAAN,iCAKbrI,GAAA,KTwsDM,SAAUD,EAAQC,EAAqBC,GAE7C,YAI85C,SAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAHrgD,GAAIyB,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEG,EAAkD/B,EAAoB,GAC3FiD,EAAgBhD,GAAwB,cAAc,kBAAkB,wDAAwD,cAAc,kBAAkB,wDAAwDiD,EAAiBjD,GAAwB,wIAAwI,wIAAwIkD,EAAiBlD,GAAwB,iGAAiG,2CAA2C,6FAA6F,8EAA8E,8EAA8E,2CAA2C,iGAAiG,2CAA2C,6FAA6F,8EAA8E,8EAA8E,2CUj6D72C+mB,EAAS,SAAA/iB,GAAA,GAAG+hB,GAAH/hB,EAAG+hB,KAAMC,EAAThiB,EAASgiB,MAAOJ,EAAhB5hB,EAAgB4hB,MAAOQ,EAAvBpiB,EAAuBoiB,SAAvB,OACbxkB,GAAAuE,EAAAC,cAAC4gB,GAAgBjB,KAAMA,EAAMH,MAAOA,EAAOQ,UAAWA,GACpDxkB,EAAAuE,EAAAC,cAAC6gB,GAAWjB,MAAOA,IACnBpkB,EAAAuE,EAAAC,cAAC6gB,GAAWjB,MAAOA,IACnBpkB,EAAAuE,EAAAC,cAAC6gB,GAAWjB,MAAOA,IACnBpkB,EAAAuE,EAAAC,cAAC6gB,GAAWjB,MAAOA,MAIjBgB,EAAkBllB,EAAA,EAAOoH,IAAzBlG,EACK,SAAAP,GAAA,MAASA,GAAMsjB,MACd,SAAAtjB,GAAA,MAASA,GAAMsjB,OAKrBmB,EAAW/mB,OAAA2B,EAAA,GAAXmB,GAYAgkB,EAAanlB,EAAA,EAAOglB,KAApB5jB,EAKgB,SAAAT,GAAA,MAASA,GAAMujB,OAGpBkB,EAKAA,EAIAA,EAIAA,EAIjBpnB,GAAA,KV+2DS,CAEH,SAAUD,EAAQwJ,EAAStJ,GAEjC,YW35DAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6mB,GAAApnB,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACA2N,EAAA3N,EAAA,IAMAsJ,GAAA+d,mBAAA,iCAOA/d,EAAAge,oBAAA,+BAMAhe,EAAAie,eAAA,SAKAje,EAAAke,WAAA,SAAA1kB,GACA,uBAAAA,IAAA,IAAAA,EAAAF,SAAA0G,EAAA+d,mBAAA9S,KAAAzR,IAMAwG,EAAAme,kBAAA,SAAA/Q,GACA,uBAAAA,IACA,IAAAA,EAAA9T,SACA0G,EAAAge,oBAAA/S,KAAAmC,IAMApN,EAAAoe,sBAAA,SAAAhR,GAKA,MAJAA,KAEAA,IAAAiR,QAAA,yBAEAre,EAAAme,kBAAA/Q,IAMApN,EAAAse,gBAAA,SAAAC,GACA,cAAAA,GACA,iBAAAA,IACA,iBAAAA,KAAApa,EAAA8C,oBAAAsX,IACAA,GAAA,iBAAAA,IAAAra,EAAA9B,SAAAmc,EAAA,QAWAve,EAAAwe,wBAAA,SAAAC,EAAAC,EAAAxX,EAAAwE,EAAAiT,GACAA,OAAAC,KAAA1X,GAEAlH,EAAA6e,qBAAAza,EAAAV,YAAA+a,EAAAC,EAAAC,GAAAzX,EAAAwE,IASA1L,EAAA6e,qBAAA,SAAAnb,EAAAwD,EAAA4X,GACA,GAAApT,GAAAoT,YAAAhB,GAAArR,KAAA,GAAAqR,GAAAjP,eAAAiQ,EAAApb,GAAAob,CACA,QAAAF,KAAA1X,EACA,SAAAR,OAAAhD,EAAA,sBAAAgI,EAAA6D,gBAEA,uBAAArI,GACA,SAAAR,OAAAhD,EACA,uBACAgI,EAAA6D,gBACA,oBACArI,EAAA4D,WAEA,IAAA3G,EAAA8C,oBAAAC,GACA,SAAAR,OAAAhD,EAAA,YAAAwD,EAAA4D,WAAA,IAAAY,EAAA6D,gBAGA,qBAAArI,IACAA,EAAA5N,OAAA0G,EAAAie,eAAA,GACA5Z,EAAAL,aAAAkD,GAAAlH,EAAAie,eACA,SAAAvX,OAAAhD,EACA,kCACA1D,EAAAie,eACA,eACAvS,EAAA6D,gBACA,MACArI,EAAAmC,UAAA,MACA,QAIA,IAAAnC,GAAA,iBAAAA,GAAA,CACA,GAAA6X,IAAA,EAAAC,GAAA,CAqBA,IApBA9a,EAAAzB,QAAAyE,EAAA,SAAA1N,EAAAvC,GACA,cAAAuC,EACAulB,GAAA,MAEA,kBAAAvlB,GAAA,QAAAA,IACAwlB,GAAA,GACAhf,EAAAke,WAAA1kB,IACA,SAAAkN,OAAAhD,EACA,6BACAlK,EACA,KACAkS,EAAA6D,gBACA,uFAIA7D,GAAAtP,KAAA5C,GACAwG,EAAA6e,qBAAAnb,EAAAzM,EAAAyU,GACAA,EAAAyD,QAEA4P,GAAAC,EACA,SAAAtY,OAAAhD,EACA,4BACAgI,EAAA6D,gBACA,sCAUAvP,EAAAif,2BAAA,SAAAvb,EAAAwb,GACA,GAAA7lB,GAAA8lB,CACA,KAAA9lB,EAAA,EAAeA,EAAA6lB,EAAA5lB,OAAuBD,IAAA,CACtC8lB,EAAAD,EAAA7lB,EAEA,QADAwP,GAAAsW,EAAA3R,QACAoB,EAAA,EAAuBA,EAAA/F,EAAAvP,OAAiBsV,IACxC,iBAAA/F,EAAA+F,QAAA/F,EAAAvP,OAAA,OAGA,KAAA0G,EAAAke,WAAArV,EAAA+F,IACA,SAAAlI,OAAAhD,EACA,4BACAmF,EAAA+F,GACA,aACAuQ,EAAArU,WACA,uFAQAoU,EAAAnW,KAAA+U,EAAArR,KAAA2B,aACA,IAAAgR,GAAA,IACA,KAAA/lB,EAAA,EAAeA,EAAA6lB,EAAA5lB,OAAuBD,IAAA,CAEtC,GADA8lB,EAAAD,EAAA7lB,GACA,OAAA+lB,KAAAhd,SAAA+c,GACA,SAAAzY,OAAAhD,EACA,mBACA0b,EAAAtU,WACA,qCACAqU,EAAArU,WAEAsU,GAAAD,IAaAnf,EAAAqf,6BAAA,SAAAZ,EAAAC,EAAAxX,EAAAwE,EAAAiT,GACA,IAAAA,OAAAC,KAAA1X,EAAA,CAEA,GAAAxD,GAAAU,EAAAV,YAAA+a,EAAAC,EAAAC,EACA,KAAAzX,GAAA,iBAAAA,IAAA5Q,MAAAkP,QAAA0B,GACA,SAAAR,OAAAhD,EAAA,yDAEA,IAAAwb,KACAhb,GAAAzB,QAAAyE,EAAA,SAAA1N,EAAAvC,GACA,GAAAkoB,GAAA,GAAArB,GAAArR,KAAAjT,EAEA,IADAwG,EAAA6e,qBAAAnb,EAAAzM,EAAAyU,EAAAkC,MAAAuR,IACA,cAAAA,EAAAhS,YACAnN,EAAAse,gBAAArnB,GACA,SAAAyP,OAAAhD,EACA,kCACAyb,EAAArU,WACA,+FAIAoU,GAAA9iB,KAAA+iB,KAEAnf,EAAAif,2BAAAvb,EAAAwb,KAEAlf,EAAAsf,iBAAA,SAAAb,EAAAC,EAAAH,EAAAI,GACA,IAAAA,OAAAC,KAAAL,EAAA,CAEA,GAAApa,EAAA8C,oBAAAsX,GACA,SAAA7X,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,MACAJ,EAAAzT,WACA,4FAGA,KAAA9K,EAAAse,gBAAAC,GACA,SAAA7X,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,yFAGA3e,EAAAuf,kBAAA,SAAAd,EAAAC,EAAAc,EAAAb,GACA,IAAAA,OAAAC,KAAAY,EAEA,OAAAA,GACA,YACA,kBACA,oBACA,oBACA,kBACA,KACA,SACA,SAAA9Y,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,8GAIA3e,EAAAyf,YAAA,SAAAhB,EAAAC,EAAAllB,EAAAmlB,GACA,KAAAA,OAAAC,KAAAplB,KAEAwG,EAAAke,WAAA1kB,GACA,SAAAkN,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,yBACAnlB,EACA,qGAGAwG,EAAA0f,mBAAA,SAAAjB,EAAAC,EAAAtR,EAAAuR,GACA,KAAAA,OAAAC,KAAAxR,KAEApN,EAAAme,kBAAA/Q,GACA,SAAA1G,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,0BACAvR,EACA,qFAGApN,EAAA2f,uBAAA,SAAAlB,EAAAC,EAAAtR,EAAAuR,GACAvR,IAEAA,IAAAiR,QAAA,yBAEAre,EAAA0f,mBAAAjB,EAAAC,EAAAtR,EAAAuR,IAEA3e,EAAA4f,qBAAA,SAAAnB,EAAA/S,GACA,aAAAA,EAAAsB,WACA,SAAAtG,OAAA+X,EAAA,8CAGAze,EAAA6f,YAAA,SAAApB,EAAAC,EAAAoB,GAEA,GAAA1S,GAAA0S,EAAApU,KAAAZ,UACA,qBAAAgV,GAAAC,SAAAC,MACA,IAAAF,EAAAC,SAAAC,KAAA1mB,SACA0G,EAAAke,WAAA4B,EAAAC,SAAAE,YACA,cAAAH,EAAAC,SAAAC,KAAAnT,MAAA,SACA,IAAAO,EAAA9T,SAAA0G,EAAAoe,sBAAAhR,GACA,SAAA1G,OAAAtC,EAAAV,YAAA+a,EAAAC,GAAA,GACA,yFAIA1e,EAAAkgB,mBAAA,SAAAzB,EAAAC,EAAAyB,EAAAxB,GACA,KAAAA,OAAAC,KAAAuB,IAEA,iBAAAA,GACA,SAAAzZ,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,2CAEA3e,EAAAogB,gBAAA,SAAA3B,EAAAC,EAAA2B,EAAA1B,GACA,KAAAA,OAAAC,KAAAyB,IAEA,kBAAAA,GACA,SAAA3Z,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GAAA,uBAEA3e,EAAAsgB,eAAA,SAAA7B,EAAAC,EAAA6B,EAAA5B,GACA,KAAAA,OAAAC,KAAA2B,IAEA,iBAAAA,GACA,SAAA7Z,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,4BAGA3e,EAAAwgB,eAAA,SAAA/B,EAAAC,EAAA/V,EAAAgW,GACA,KAAAA,OAAAC,KAAAjW,MAEAA,GAAA,iBAAAA,IAAA,OAAAA,GACA,SAAAjC,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,4BAGA3e,EAAAygB,0BAAA,SAAAhC,EAAAC,EAAA/V,EAAAnP,EAAAmlB,EAAA+B,GAEA,IADA/X,GAAA,iBAAAA,KAAAzE,EAAA9B,SAAAuG,EAAAnP,GACA,CACA,GAAAmlB,EACA,MAGA,UAAAjY,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,yBACAnlB,EACA,KAGA,GAAAknB,EAAA,CACA,GAAAnX,GAAArF,EAAAlB,QAAA2F,EAAAnP,EACA,eAAAknB,GAAA,iBAAAnX,IACA,WAAAmX,GAAA,iBAAAnX,IACA,YAAAmX,GAAA,kBAAAnX,IACA,aAAAmX,GAAA,mBAAAnX,IACA,WAAAmX,GAAA,iBAAAnX,MACA,KAAAoV,GACA,GAAAjY,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,mCACAnlB,EACA,uBACAknB,EACA,MAGA,GAAAha,OAAAtC,EAAAV,YAAA+a,EAAAC,EAAAC,GACA,yBACAnlB,EACA,gBACAknB,EACA,QXu7DM,SAAUlqB,EAAQwJ,EAAStJ,GAEjC,YYhyEAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,MAMA,SAAAiqB,GACAA,IAAA,yBACAA,IAAA,iBACAA,IAAA,mCACAA,IAAA,sCACC3gB,EAAA2gB,gBAAA3gB,EAAA2gB,kBAQD,IAAAC,GAAA,WACA,QAAAA,GAAAC,EAAAC,EAAAC,EAAAC,GACAjmB,KAAA8lB,WACA9lB,KAAA+lB,aACA/lB,KAAAgmB,UACAhmB,KAAAimB,SACA9c,EAAAhE,QAAA8gB,GAAAF,EAAA,uCAyBA,MAnBAF,GAAAK,KAAA,GAAAL,IACA,WACA,GAKAA,EAAAM,OAAA,GAAAN,IAAA,GACA,QACA,GAKAA,EAAAO,qBAAA,SAAAJ,GACA,UAAAH,IAAA,GACA,EAAAG,GACA,IAEAH,IAEA5gB,GAAA4gB,mBZwzEM,SAAUpqB,EAAQC,EAAqBC,GAE7C,YAI+6B,SAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAASK,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUf,OAAOgB,OAAOF,GAAYA,EAAWC,WAAWE,aAAad,MAAMU,EAASK,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWN,IAAWd,OAAOqB,eAAerB,OAAOqB,eAAeR,EAASC,GAAYD,EAASS,UAAUR,GAHl0D,GAAIU,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEG,EAAkD/B,EAAoB,GAC3FwC,EAAa,WAAW,QAASlC,GAAiBmC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWvB,WAAWuB,EAAWvB,aAAY,EAAMuB,EAAWrB,cAAa,EAAQ,SAAUqB,KAAWA,EAAWtB,UAAS,GAAKnB,OAAOuB,eAAec,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWzC,EAAiBI,EAAYS,UAAU4B,GAAeC,GAAY1C,EAAiBI,EAAYsC,GAAoBtC,MAAsBuC,EAAgBhD,GAAwB,6DAA+D,6DAA+DiD,EAAiBjD,GAAwB,6GAA+G,6Gah4E3yByqB,Ebg4E81D,SAAS1mB,Ga/3E13D,QAAA0mB,GAAYhoB,GAAOlC,EAAA6D,KAAAqmB,EAAA,IAAAvmB,GAAAvD,EAAAyD,MAAAqmB,EAAAhpB,WAAAtB,OAAAsE,eAAAgmB,IAAA5pB,KAAAuD,KACX3B,GADWyB,GA+CnBmD,MAAQ,WACNnD,EAAKwmB,UAAYC,KAAKC,MACtB1mB,EAAK2mB,YAAc,EACnB3mB,EAAK4mB,SAAU,EACf5mB,EAAKgB,UAAU6lB,SAAS,IACxB7mB,EAAK8mB,QApDY9mB,EAuDnB+mB,KAAO,iBAAM/mB,GAAK4mB,SAAU,GAvDT5mB,EAyDnB8mB,KAAO,WAAM,GACHnF,GAAa3hB,EAAKS,MAAlBkhB,SACHgF,EAAcF,KAAKC,MAAQ1mB,EAAKwmB,UAChCQ,EAAYL,EAAc3mB,EAAK2mB,YAC/BM,EAAc,IAAOjnB,EAAKknB,KAAOF,CAEtC,IAAKhnB,EAAK4mB,QAAV,CAED,IAAKK,EAEJ,WADAE,uBAAsBnnB,EAAK8mB,KAO5B,IAHA9mB,EAAK2mB,YAAcA,EAClB3mB,EAAKgB,UAAU2gB,SAAW3hB,EAAK2mB,YAAc3mB,EAAKonB,WAAc,IAE7DzF,EAAW3hB,EAAKqC,QAAQ5D,OAAQ,CACnCuB,EAAK4mB,SAAU,CACb,IAAMS,GAAarnB,EAAKsnB,SAAStnB,EAAKqC,QAExC,YADErC,GAAKgB,UAAUumB,OAAQF,IAI1BF,sBAAsBnnB,EAAK8mB,KAE3B,IAAMU,GAAYxnB,EAAKynB,QAAQznB,EAAKqC,QAASrC,EAAK0nB,MAAO/F,EACxD3hB,GAAKgB,UAAUumB,OAAQC,MAnFNxnB,EAsFnBsnB,SAAW,SAAAlrB,GACT,MAAOA,GAAM8L,IAAI,SAAA9L,GAAA,OACfsH,KAAM,SACNtH,YAzFe4D,EA6FnBynB,QAAU,SAACplB,EAASqlB,EAAO/F,GACzB,MAAOtf,GAAQ6F,IAAI,SAAC9L,EAAOyd,GACzB,MAAIA,GAAQ8H,GACFje,KAAM,SAAUtH,UAIxBsH,KAAM,OACNtH,MAAO4D,EAAK2nB,iBAAiBD,OArGhB1nB,EA0GnB2nB,iBAAmB,SAAAD,GAClB,GAAME,GAAU3a,KAAKC,MAAMD,KAAK4a,SAAWH,EAAMjpB,QAC3CqpB,GAAc,GAAK7a,KAAK4a,SACxBE,EAAkBL,EAAME,EAE9B,OADeE,GAAY,EAAIC,EAAgB7X,cAAgB6X,EA9G7C,IAAAC,GAGchoB,EAAKzB,MAA5B2E,EAHS8kB,EAGT9kB,KAHS+kB,EAAAD,EAGH5kB,aAHG2gB,KAAAkE,EAGM,IAHNA,CAAA,OAKjBjoB,GAAKqC,QAAUa,EAAK8O,MAAM,IAC1BhS,EAAKwmB,UAAY,EACjBxmB,EAAK2mB,YAAc,EACnB3mB,EAAK4mB,SAAU,EACf5mB,EAAKonB,WAAahkB,EAClBpD,EAAKknB,IAAM,GACXlnB,EAAK0nB,OACH,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SACf,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,SACpB,SAAK,SAAK,SAAK,SAAK,UAGtB1nB,EAAKS,OACHkhB,SAAU,EACVkF,SAAS,EACTU,SAAU7jB,KAAM,OAAQtH,MAAO,MAhChB4D,Eb+3EgjK,MAAzrGnD,GAAU0pB,EAAY1mB,GAAisExB,EAAakoB,IAAc5nB,IAAI,4BAA4BvC,MAAM,Sa31ExoI8rB,GAAW,GAAApmB,GAAA5B,KAC3BiD,EAAU+kB,EAAV/kB,MACA0jB,EAAY3mB,KAAKO,MAAjBomB,OACJ1jB,KAAU0jB,IAAS3mB,KAAKuC,QAAUuK,WAAW,WAAOlL,EAAKqB,SAAU,Sbw1EgyIxE,IAAI,uBAAuBvC,MAAM,Wap1Ex4I+rB,aAAajoB,KAAKuC,SAClBvC,KAAK6mB,Ubm1E88IpoB,IAAI,SAASvC,MAAM,Wa7wE/9I,GAAAgsB,GAC4BloB,KAAK3B,MAAhC2E,EADDklB,EACCllB,KAAMgf,EADPkG,EACOlG,UAAWR,EADlB0G,EACkB1G,MACjB6F,EAAWrnB,KAAKO,MAAhB8mB,MAER,OACE7pB,GAAAuE,EAAAC,cAACmmB,GAAYC,aAAYplB,EAAMgf,UAAWA,EAAWR,MAAOA,GACzD6F,EAAOrf,IAAI,SAACqgB,EAAM1O,GACjB,MAAkB,WAAd0O,EAAK7kB,KAELhG,EAAAuE,EAAAC,cAAA,QACEvD,IAAQ4pB,EAAKnsB,MAAb,IAAsByd,EACtB2O,cAAY,QAEXD,EAAKnsB,OAMVsB,EAAAuE,EAAAC,cAACumB,GACC9pB,IAAQ4pB,EAAKnsB,MAAb,IAAsByd,EACtB2O,cAAY,QAEXD,EAAKnsB,cbsvEwjKmqB,Gah4EniK9oB,EAAA,cbg4EooK7B,GAAuB,EAAI,Ca7uExsK,IAAMysB,GAAczqB,EAAA,EAAOglB,KAArB9jB,GAOA2pB,EAAc7qB,EAAA,EAAOglB,KAArB7jB,IbyuEG,CAEH,SAAUpD,EAAQwJ,EAAStJ,GAEjC,Yc13EAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAU9C,IAAAssB,GAAA,WACA,QAAAA,GAAAhlB,EAAAilB,EAAA3Q,EAAA4Q,EAAAC,GACA3oB,KAAAwD,OACAxD,KAAAyoB,eACAzoB,KAAA8X,YACA9X,KAAA0oB,UACA1oB,KAAA2oB,WAqDA,MA/CAH,GAAAI,YAAA,SAAAC,GACA,UAAAL,KAAAM,MAAAD,IAOAL,EAAAO,iBAAA,SAAAC,EAAAH,GACA,UAAAL,KAAAS,YAAAJ,EAAAG,IAOAR,EAAAU,mBAAA,SAAAF,EAAAH,GACA,UAAAL,KAAAW,cAAAN,EAAAG,IAQAR,EAAAY,mBAAA,SAAAJ,EAAAK,EAAAC,GACA,UAAAd,KAAAe,cAAAF,EAAAL,EAAAM,IAOAd,EAAAgB,iBAAA,SAAAR,EAAAH,GACA,UAAAL,KAAAiB,YAAAZ,EAAAG,IAIAR,EAAAS,YAAA,cAEAT,EAAAW,cAAA,gBAEAX,EAAAe,cAAA,gBAEAf,EAAAiB,YAAA,cAEAjB,EAAAM,MAAA,QACAN,IAEAvjB,GAAAujB,Udi5ES,CAEH,SAAU/sB,EAAQwJ,EAAStJ,GAEjC,Ye59EAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAKA+f,GALApH,EAAAlZ,EAAA,KACAmZ,EAAAnZ,EAAA,KACAoZ,EAAApZ,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KAEAqgB,EAAA,SAAA9G,GAEA,QAAA8G,KACA,cAAA9G,KAAA5U,MAAAN,KAAAE,YAAAF,KA8DA,MAhEA6U,GAAAM,UAAA6G,EAAA9G,GAIAnZ,OAAAuB,eAAA0e,EAAA,gBACAzQ,IAAA,WACA,MAAA0Q,IAEA5Q,IAAA,SAAAmD,GACAyN,EAAAzN,GAEAvR,YAAA,EACAE,cAAA,IAKA6e,EAAAlf,UAAAsY,QAAA,SAAArT,EAAAuL,GACA,MAAAnE,GAAAkE,YAAAtL,EAAAG,KAAAoL,EAAApL,OAKA8Z,EAAAlf,UAAA6Y,YAAA,SAAAL,GAGA,KAAAlM,GAAAhE,eAAA,oDAKA4W,EAAAlf,UAAA8Y,oBAAA,SAAAC,EAAAC,GACA,UAKAkG,EAAAlf,UAAAiZ,QAAA,WACA,MAAAhB,GAAAiB,UAAAC,KAKA+F,EAAAlf,UAAAoZ,QAAA,WAGA,UAAAnB,GAAAiB,UAAA7M,EAAAiE,SAAA6O,IAOAD,EAAAlf,UAAAsZ,SAAA,SAAAC,EAAAnU,GAGA,MAFAkH,GAAAjE,OAAA,iBAAAkR,GAAA,gDAEA,GAAAtB,GAAAiB,UAAAK,EAAA4F,IAKAD,EAAAlf,UAAAiT,SAAA,WACA,cAEAiM,GACClH,EAAAyB,MACDtR,GAAA+W,WACA/W,EAAAoW,UAAA,GAAAW,Ifo/EM,SAAUvgB,EAAQwJ,EAAStJ,GAEjC,YgB/iFA,SAAA+Y,GAAAgV,EAAAlG,GAEA,OADA,KAAAA,IAA8BA,EAAA,MAC9B,OAAAkG,EACA,MAAAC,GAAA3S,aAAAP,UAaA,IAXA,iBAAAiT,IAAA,aAAAA,KACAlG,EAAAkG,EAAA,cAEAtgB,EAAAjE,OAAA,OAAAqe,GACA,iBAAAA,IACA,iBAAAA,IACA,iBAAAA,IAAA,OAAAA,GAAA,sCAAAA,IACA,iBAAAkG,IAAA,UAAAA,IAAA,OAAAA,EAAA,YACAA,IAAA,WAGA,iBAAAA,IAAA,OAAAA,GAAA,CACA,GAAAE,GAAAF,CACA,WAAA1U,GAAAmB,SAAAyT,EAAAlV,EAAA8O,IAEA,GAAAkG,YAAAnuB,SAAAsuB,EA2BA,CACA,GAAAC,GAAAH,EAAA3S,aAAAP,WACAsT,EAAAL,CAWA,OAVAvgB,GAAAzB,QAAAqiB,EAAA,SAAAtrB,EAAAurB,GACA,GAAA7gB,EAAA9B,SAAA0iB,EAAAtrB,IACA,MAAAA,EAAA6P,UAAA,MAEA,GAAA8K,GAAA1E,EAAAsV,IACA5Q,EAAA1B,cAAA0B,EAAAtR,YACAgiB,IAAA5R,qBAAAzZ,EAAA2a,OAIA0Q,EAAAnS,eAAAjD,EAAA8O,IAvCA,GAAAyG,MACAC,GAAA,EACAC,EAAAT,CAYA,IAXAvgB,EAAAzB,QAAAyiB,EAAA,SAAA1rB,EAAAoU,GACA,oBAAApU,IAAA,MAAAA,EAAA6P,UAAA,MAEA,GAAA8K,GAAA1E,EAAAyV,EAAA1rB,GACA2a,GAAAtR,YACAoiB,EACAA,IAAA9Q,EAAA7D,cAAAzN,UACAmiB,EAAA5oB,KAAA,GAAA0T,GAAAiB,UAAAvX,EAAA2a,QAIA,GAAA6Q,EAAA1rB,OACA,MAAAorB,GAAA3S,aAAAP,UAEA,IAAA2T,GAAAC,EAAAC,cAAAL,EAAAlT,EAAAwT,qBAAA,SAAAnS,GAAsH,MAAAA,GAAAlW,MAAyB6U,EAAAQ,gBAC/I,IAAA2S,EAAA,CACA,GAAAM,GAAAH,EAAAC,cAAAL,EAAArT,EAAAJ,eAAAiU,aACA,WAAAd,GAAA3S,aAAAoT,EAAA1V,EAAA8O,GAAA,GAAA1M,GAAAU,UAA8GkT,YAAAF,IAAiCE,YAAA9T,EAAAJ,kBAG/I,UAAAmT,GAAA3S,aAAAoT,EAAA1V,EAAA8O,GAAA1M,EAAAU,SAAAC,SA9DA1b,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAytB,GAAAhuB,EAAA,KACAqZ,EAAArZ,EAAA,KACAoZ,EAAApZ,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0uB,EAAA1uB,EAAA,KACAob,EAAApb,EAAA,KACAmb,EAAAnb,EAAA,KACAib,EAAAjb,EAAA,KACAkuB,GAAA,CAuEA5kB,GAAAyP,eACAkC,EAAAnC,gBAAAC,IhBylFM,SAAUjZ,EAAQC,EAAqBC,GAE7C,YAG8f,SAASQ,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUf,OAAOgB,OAAOF,GAAYA,EAAWC,WAAWE,aAAad,MAAMU,EAASK,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWN,IAAWd,OAAOqB,eAAerB,OAAOqB,eAAeR,EAASC,GAAYD,EAASS,UAAUR,GAF3wC,GAAIU,GAAsC5B,EAAoB,GAE/EwC,GADmExC,EAAoB8B,EAAEF,GAC5E,WAAW,QAAStB,GAAiBmC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWvB,WAAWuB,EAAWvB,aAAY,EAAMuB,EAAWrB,cAAa,EAAQ,SAAUqB,KAAWA,EAAWtB,UAAS,GAAKnB,OAAOuB,eAAec,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWzC,EAAiBI,EAAYS,UAAU4B,GAAeC,GAAY1C,EAAiBI,EAAYsC,GAAoBtC,OiB9rFvdsuB,EjB8rFuyC,SAASC,GAA8C,QAASD,KAAgD,MAAlCxuB,GAAgB6D,KAAK2qB,GAAoBpuB,EAA2ByD,MAAM2qB,EAAYttB,WAAWtB,OAAOsE,eAAesqB,IAAcrqB,MAAMN,KAAKE,YAAiU,MAA1gBvD,GAAUguB,EAAYC,GAAgMzsB,EAAawsB,IAAclsB,IAAI,4BAA4BvC,MAAM,SiB7rF5kD8rB,GAAW,GACnB6C,GAAe7qB,KAAK3B,MAA5BwD,OACQipB,EAAe9C,EAAvBnmB,MAEW,cAAfgpB,GAA4C,YAAfC,GAC/BvrB,OAAOwrB,SAAS,EAAG,MjBwrF4wDtsB,IAAI,SAASvC,MAAM,WiBnrFpzD,MAAO,UjBmrFu1DyuB,GiB9rFzzDptB,EAAA,UjB8rFs5D7B,GAAuB,EAAI,GAIp9D,SAAUD,EAAQC,EAAqBC,GAE7C,YACAI,QAAOuB,eAAe5B,EAAqB,cAAgBQ,OAAO,IACnCP,EAAoBwgB,EAAEzgB,EAAqB,WAAY,WAAa,MAAOsvB,IkBxsF1G,IAAAC,GAAAtvB,EAAA,KAgBAqvB,EAAAjvB,OAAAkvB,EAAA,IACAvvB,GAAA,WlBktFM,SAAUD,EAAQwJ,EAAStJ,GAEjC,YmBrtFAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgvB,GAAAvvB,EAAA,KACAwvB,EAAAxvB,EAAA,KAUAyvB,EAAA,SAAAC,GACA,IAGA,uBAAA9rB,SACA,oBAAAA,QAAA8rB,GAAA,CAEA,GAAAC,GAAA/rB,OAAA8rB,EAGA,OAFAC,GAAAC,QAAA,6BACAD,EAAAE,WAAA,qBACA,GAAAN,GAAAO,kBAAAH,IAGA,MAAAvc,IAGA,UAAAoc,GAAAO,cAGAzmB,GAAA0mB,kBAAAP,EAAA,gBAEAnmB,EAAAmG,eAAAggB,EAAA,mBnB6uFM,SAAU3vB,EAAQwJ,EAAStJ,GAEjC,YoBhxFAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAC9C+I,EAAA2mB,iBAAA,IACA3mB,EAAA4mB,cAAA,IACA5mB,EAAA6mB,wBAAA,IACA7mB,EAAA8mB,cAAA,IACA9mB,EAAA+mB,UAAA,IACA/mB,EAAAgnB,aAAA,iBACAhnB,EAAAinB,mBAAA,KACAjnB,EAAAknB,UAAA,YACAlnB,EAAAmnB,aAAA,gBpBwyFM,SAAU3wB,EAAQwJ,EAAStJ,GAEjC,YqBnzFAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6Y,GAAApZ,EAAA,KACAwN,EAAAxN,EAAA,KAKA4a,EAAA,WACA,QAAAA,MA6BA,MAvBAA,GAAAzZ,UAAA2tB,WAAA,WACA,MAAAzqB,MAAAoV,QAAAjK,KAAAnL,OAUAuW,EAAAzZ,UAAA8Y,oBAAA,SAAAC,EAAAC,GACA,GAAAuW,GAAA,GAAAtX,GAAAiB,UAAA7M,EAAAgE,SAAA0I,GACAyW,EAAA,GAAAvX,GAAAiB,UAAA7M,EAAAgE,SAAA2I,EACA,YAAA9V,KAAAoV,QAAAiX,EAAAC,IAMA/V,EAAAzZ,UAAAiZ,QAAA,WACA,MAAAhB,GAAAiB,UAAAC,KAEAM,IAEAtR,GAAAsR,SrB20FM,SAAU9a,EAAQwJ,EAAStJ,GAEjC,YsBp3FAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAGAggB,GAHA/S,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAgb,EAAAhb,EAAA,KAOAwa,EAAA,WAOA,QAAAA,GAAAoW,EAAArV,OACA,KAAAA,IAAuCA,EAAAf,EAAA+F,0BAAAzF,YACvCzW,KAAAusB,SACAvsB,KAAAkX,gBACAlX,KAAAoX,UAAA,KACAjO,EAAAhE,WAAA0e,KAAA7jB,KAAAusB,QAAA,OAAAvsB,KAAAusB,OAAA,4DACA5V,EAAAU,qBAAArX,KAAAkX,eA+NA,MA7NAnb,QAAAuB,eAAA6Y,EAAA,6BACA5K,IAAA,WACA,MAAA2Q,IAEA7Q,IAAA,SAAAmD,GACA0N,EAAA1N,GAEAvR,YAAA,EACAE,cAAA,IAGAgZ,EAAArZ,UAAA4a,WAAA,WACA,UAGAvB,EAAArZ,UAAAyY,YAAA,WACA,MAAAvV,MAAAkX,eAGAf,EAAArZ,UAAA6a,eAAA,SAAAC,GACA,UAAAzB,GAAAnW,KAAAusB,OAAA3U,IAGAzB,EAAArZ,UAAA+a,kBAAA,SAAAC,GAEA,oBAAAA,EACA9X,KAAAkX,cAGAf,EAAA+F,0BAAAzF,YAIAN,EAAArZ,UAAAib,SAAA,SAAApH,GACA,MAAAA,GAAA7I,UACA9H,KAEA,cAAA2Q,EAAAsB,WACAjS,KAAAkX,cAGAf,EAAA+F,0BAAAzF,YAMAN,EAAArZ,UAAAmb,SAAA,WACA,UAGA9B,EAAArZ,UAAA4c,wBAAA,SAAA5B,EAAAsB,GACA,aAGAjD,EAAArZ,UAAAob,qBAAA,SAAAJ,EAAAK,GACA,oBAAAL,EACA9X,KAAA2X,eAAAQ,GAEAA,EAAArQ,WAAA,cAAAgQ,EACA9X,KAGAmW,EAAA+F,0BAAAzF,WAAAyB,qBAAAJ,EAAAK,GAAAR,eAAA3X,KAAAkX,gBAIAf,EAAArZ,UAAA6b,YAAA,SAAAhI,EAAAwH,GACA,GAAAH,GAAArH,EAAAsB,UACA,eAAA+F,EACAG,EAEAA,EAAArQ,WAAA,cAAAkQ,EACAhY,MAGAmJ,EAAAhE,OAAA,cAAA6S,GAAA,IAAArH,EAAAuB,YAAA,8CACAlS,KAAAkY,qBAAAF,EAAA7B,EAAA+F,0BAAAzF,WAAAkC,YAAAhI,EAAAwB,WAAAgG,MAIAhC,EAAArZ,UAAAgL,QAAA,WACA,UAGAqO,EAAArZ,UAAA+b,YAAA,WACA,UAGA1C,EAAArZ,UAAAqc,aAAA,SAAAQ,EAAAW,GACA,UAKAnE,EAAArZ,UAAA0R,IAAA,SAAAuK,GACA,MAAAA,KAAA/Y,KAAAuV,cAAAzN,WAEA0kB,SAAAxsB,KAAAysB,WACA/B,YAAA1qB,KAAAuV,cAAA/G,OAGAxO,KAAAysB,YAGAtW,EAAArZ,UAAAwc,KAAA,WACA,UAAAtZ,KAAAoX,UAAA,CACA,GAAAsV,GAAA,EACA1sB,MAAAkX,cAAApP,YACA4kB,GACA,YACA/V,EAAA6C,iBAAAxZ,KAAAkX,cAAA1I,OACA,IACA,IAAAhL,SAAAxD,MAAAusB,MACAG,IAAAlpB,EAAA,IAEAkpB,GADA,WAAAlpB,EACA4F,EAAAwF,sBAAA5O,KAAAusB,QAGAvsB,KAAAusB,OAEAvsB,KAAAoX,UAAAhO,EAAAW,KAAA2iB,GAEA,MAAA1sB,MAAAoX,WAMAjB,EAAArZ,UAAA2vB,SAAA,WACA,MAAAzsB,MAAAusB,QAKApW,EAAArZ,UAAA4Y,UAAA,SAAA9B,GACA,MAAAA,KAAAuC,EAAA+F,0BAAAzF,WACA,EAEA7C,YAAAuC,GAAA+F,2BACA,GAGA/S,EAAAhE,OAAAyO,EAAA8D,aAAA,qBACA1X,KAAA2sB,mBAAA/Y,KASAuC,EAAArZ,UAAA6vB,mBAAA,SAAAC,GACA,GAAAC,SAAAD,GAAAL,OACAO,QAAA9sB,MAAAusB,OACAQ,EAAA5W,EAAA6W,iBAAAjhB,QAAA8gB,GACAI,EAAA9W,EAAA6W,iBAAAjhB,QAAA+gB,EAGA,OAFA3jB,GAAAhE,OAAA4nB,GAAA,wBAAAF,GACA1jB,EAAAhE,OAAA8nB,GAAA,wBAAAH,GACAC,IAAAE,EAEA,WAAAH,EAEA,EAIA9sB,KAAAusB,OAAAK,EAAAL,QACA,EAEAvsB,KAAAusB,SAAAK,EAAAL,OACA,EAGA,EAKAU,EAAAF,GAMA5W,EAAArZ,UAAAse,UAAA,WACA,MAAApb,OAKAmW,EAAArZ,UAAA0e,UAAA,WACA,UAKArF,EAAArZ,UAAA6W,OAAA,SAAAC,GAIA,GAAAA,IAAA5T,KACA,QAEA,IAAA4T,EAAA8D,aAAA,CACA,GAAAkV,GAAAhZ,CACA,OAAA5T,MAAAusB,SAAAK,EAAAL,QACAvsB,KAAAkX,cAAAvD,OAAAiZ,EAAA1V,eAGA,UASAf,EAAA6W,kBAAA,sCACA7W,IAEAlR,GAAAkR,YtB44FM,SAAU1a,EAAQwJ,EAAStJ,GAEjC,YuBtoGAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAI9C,IAAAgxB,GAAA,WASA,QAAAA,GAAA5X,EAAA6X,EAAAC,EAAAC,EAAAC,OACA,KAAAA,IAA0CA,EAAA,MAC1CttB,KAAAqtB,aACArtB,KAAAstB,mBAIAttB,KAAAutB,aAEA,KADA,GAAA7Z,GAAA,GACA4B,EAAAxN,WAMA,GALAwN,IACA5B,EAAAyZ,EAAAC,EAAA9X,EAAA7W,IAAA0uB,GAAA,EAEAE,IACA3Z,IAAA,GACAA,EAAA,EAGA4B,EADAtV,KAAAqtB,WACA/X,EAAAhC,KAGAgC,EAAA/B,UAGA,QAAAG,EAAA,CAEA1T,KAAAutB,WAAAlsB,KAAAiU,EACA,OAIAtV,KAAAutB,WAAAlsB,KAAAiU,GAEAA,EADAtV,KAAAqtB,WACA/X,EAAA/B,MAGA+B,EAAAhC,MA4CA,MAvCA4Z,GAAApwB,UAAAke,QAAA,WACA,OAAAhb,KAAAutB,WAAAhvB,OACA,WACA,IACA4f,GADA7I,EAAAtV,KAAAutB,WAAAnZ,KAMA,IAHA+J,EADAne,KAAAstB,iBACAttB,KAAAstB,iBAAAhY,EAAA7W,IAAA6W,EAAApZ,QAEsBuC,IAAA6W,EAAA7W,IAAAvC,MAAAoZ,EAAApZ,OACtB8D,KAAAqtB,WAEA,IADA/X,IAAAhC,MACAgC,EAAAxN,WACA9H,KAAAutB,WAAAlsB,KAAAiU,GACAA,IAAA/B,UAKA,KADA+B,IAAA/B,OACA+B,EAAAxN,WACA9H,KAAAutB,WAAAlsB,KAAAiU,GACAA,IAAAhC,IAGA,OAAA6K,IAEA+O,EAAApwB,UAAA0wB,QAAA,WACA,MAAAxtB,MAAAutB,WAAAhvB,OAAA,GAEA2uB,EAAApwB,UAAAie,KAAA,WACA,OAAA/a,KAAAutB,WAAAhvB,OACA,WACA,IAAA+W,GAAAtV,KAAAutB,WAAAvtB,KAAAutB,WAAAhvB,OAAA,EACA,OAAAyB,MAAAstB,iBACAttB,KAAAstB,iBAAAhY,EAAA7W,IAAA6W,EAAApZ,QAGoBuC,IAAA6W,EAAA7W,IAAAvC,MAAAoZ,EAAApZ,QAGpBgxB,IAEAjoB,GAAAioB,mBAIA,IAAAO,GAAA,WASA,QAAAA,GAAAhvB,EAAAvC,EAAA0lB,EAAAtO,EAAAC,GACAvT,KAAAvB,MACAuB,KAAA9D,QACA8D,KAAA4hB,MAAA,MAAAA,IAAA6L,EAAAC,IACA1tB,KAAAsT,KACA,MAAAA,IAAAgE,EAAAb,WACAzW,KAAAuT,MACA,MAAAA,IAAA+D,EAAAb,WA+PA,MAnPAgX,GAAA3wB,UAAA6wB,KAAA,SAAAlvB,EAAAvC,EAAA0lB,EAAAtO,EAAAC,GACA,UAAAka,GAAA,MAAAhvB,IAAAuB,KAAAvB,IAAA,MAAAvC,IAAA8D,KAAA9D,MAAA,MAAA0lB,IAAA5hB,KAAA4hB,MAAA,MAAAtO,IAAAtT,KAAAsT,KAAA,MAAAC,IAAAvT,KAAAuT,QAKAka,EAAA3wB,UAAAgc,MAAA,WACA,MAAA9Y,MAAAsT,KAAAwF,QAAA,EAAA9Y,KAAAuT,MAAAuF,SAKA2U,EAAA3wB,UAAAgL,QAAA,WACA,UAWA2lB,EAAA3wB,UAAAyd,iBAAA,SAAAD,GACA,MAAAta,MAAAsT,KAAAiH,iBAAAD,IACAA,EAAAta,KAAAvB,IAAAuB,KAAA9D,QACA8D,KAAAuT,MAAAgH,iBAAAD,IAUAmT,EAAA3wB,UAAA8wB,iBAAA,SAAAtT,GACA,MAAAta,MAAAuT,MAAAqa,iBAAAtT,IACAA,EAAAta,KAAAvB,IAAAuB,KAAA9D,QACA8D,KAAAsT,KAAAsa,iBAAAtT,IAMAmT,EAAA3wB,UAAA+wB,KAAA,WACA,MAAA7tB,MAAAsT,KAAAxL,UACA9H,KAGAA,KAAAsT,KAAAua,QAMAJ,EAAA3wB,UAAAod,OAAA,WACA,MAAAla,MAAA6tB,OAAApvB,KAKAgvB,EAAA3wB,UAAAmc,OAAA,WACA,MAAAjZ,MAAAuT,MAAAzL,UACA9H,KAAAvB,IAGAuB,KAAAuT,MAAA0F,UAUAwU,EAAA3wB,UAAA2b,OAAA,SAAAha,EAAAvC,EAAAkxB,GACA,GAAA1Z,GAAAjW,CAYA,OAXAA,GAAAuC,KACA0T,EAAA0Z,EAAA3uB,EAAAhB,EAAAgB,KAEAhB,EADAiW,EAAA,EACAjW,EAAAkwB,KAAA,eAAAlwB,EAAA6V,KAAAmF,OAAAha,EAAAvC,EAAAkxB,GAAA,MAEA,IAAA1Z,EACAjW,EAAAkwB,KAAA,KAAAzxB,EAAA,gBAGAuB,EAAAkwB,KAAA,oBAAAlwB,EAAA8V,MAAAkF,OAAAha,EAAAvC,EAAAkxB,IAEA3vB,EAAAqwB,UAMAL,EAAA3wB,UAAAixB,WAAA,WACA,GAAA/tB,KAAAsT,KAAAxL,UACA,MAAAwP,GAAAb,UAEA,IAAAhZ,GAAAuC,IAIA,OAHAvC,GAAA6V,KAAA0a,UAAAvwB,EAAA6V,UAAA0a,WACAvwB,IAAAwwB,gBACAxwB,IAAAkwB,KAAA,eAAAlwB,EAAA6V,KAAAya,aAAA,MACAtwB,EAAAqwB,UAOAL,EAAA3wB,UAAAwO,OAAA,SAAA7M,EAAA2uB,GACA,GAAA3vB,GAAAywB,CAEA,IADAzwB,EAAAuC,KACAotB,EAAA3uB,EAAAhB,EAAAgB,KAAA,EACAhB,EAAA6V,KAAAxL,WAAArK,EAAA6V,KAAA0a,UAAAvwB,EAAA6V,UAAA0a,WACAvwB,IAAAwwB,gBAEAxwB,IAAAkwB,KAAA,eAAAlwB,EAAA6V,KAAAhI,OAAA7M,EAAA2uB,GAAA,UAEA,CAMA,GALA3vB,EAAA6V,KAAA0a,WACAvwB,IAAA0wB,gBACA1wB,EAAA8V,MAAAzL,WAAArK,EAAA8V,MAAAya,UAAAvwB,EAAA8V,MAAAD,KAAA0a,WACAvwB,IAAA2wB,iBAEA,IAAAhB,EAAA3uB,EAAAhB,EAAAgB,KAAA,CACA,GAAAhB,EAAA8V,MAAAzL,UACA,MAAAwP,GAAAb,UAGAyX,GAAAzwB,EAAA8V,MAAAsa,OACApwB,IAAAkwB,KAAAO,EAAAzvB,IAAAyvB,EAAAhyB,MAAA,UAAAuB,EAAA8V,MAAAwa,cAGAtwB,IAAAkwB,KAAA,oBAAAlwB,EAAA8V,MAAAjI,OAAA7M,EAAA2uB,IAEA,MAAA3vB,GAAAqwB,UAMAL,EAAA3wB,UAAAkxB,OAAA,WACA,MAAAhuB,MAAA4hB,OAMA6L,EAAA3wB,UAAAgxB,OAAA,WACA,GAAArwB,GAAAuC,IAOA,OANAvC,GAAA8V,MAAAya,WAAAvwB,EAAA6V,KAAA0a,WACAvwB,IAAA4wB,eACA5wB,EAAA6V,KAAA0a,UAAAvwB,EAAA6V,UAAA0a,WACAvwB,IAAA0wB,gBACA1wB,EAAA6V,KAAA0a,UAAAvwB,EAAA8V,MAAAya,WACAvwB,IAAA6wB,cACA7wB,GAMAgwB,EAAA3wB,UAAAmxB,aAAA,WACA,GAAAxwB,GAAAuC,KAAAsuB,YAMA,OALA7wB,GAAA8V,MAAAD,KAAA0a,WACAvwB,IAAAkwB,KAAA,oBAAAlwB,EAAA8V,MAAA4a,gBACA1wB,IAAA4wB,cACA5wB,IAAA6wB,cAEA7wB,GAMAgwB,EAAA3wB,UAAAsxB,cAAA,WACA,GAAA3wB,GAAAuC,KAAAsuB,YAKA,OAJA7wB,GAAA6V,UAAA0a,WACAvwB,IAAA0wB,eACA1wB,IAAA6wB,cAEA7wB,GAMAgwB,EAAA3wB,UAAAuxB,YAAA,WACA,GAAAE,GAAAvuB,KAAA2tB,KAAA,UAAAF,EAAAC,IAAA,KAAA1tB,KAAAuT,MAAAD,KACA,OAAAtT,MAAAuT,MAAAoa,KAAA,UAAA3tB,KAAA4hB,MAAA2M,EAAA,OAMAd,EAAA3wB,UAAAqxB,aAAA,WACA,GAAAK,GAAAxuB,KAAA2tB,KAAA,UAAAF,EAAAC,IAAA1tB,KAAAsT,KAAAC,MAAA,KACA,OAAAvT,MAAAsT,KAAAqa,KAAA,UAAA3tB,KAAA4hB,MAAA,KAAA4M,IAMAf,EAAA3wB,UAAAwxB,WAAA,WACA,GAAAhb,GAAAtT,KAAAsT,KAAAqa,KAAA,WAAA3tB,KAAAsT,KAAAsO,MAAA,WACArO,EAAAvT,KAAAuT,MAAAoa,KAAA,WAAA3tB,KAAAuT,MAAAqO,MAAA,UACA,OAAA5hB,MAAA2tB,KAAA,WAAA3tB,KAAA4hB,MAAAtO,EAAAC,IAQAka,EAAA3wB,UAAA2xB,eAAA,WACA,GAAAC,GAAA1uB,KAAA2uB,QACA,OAAA5hB,MAAAsC,IAAA,EAAAqf,IAAA1uB,KAAA8Y,QAAA,GAMA2U,EAAA3wB,UAAA6xB,OAAA,WACA,GAAAD,EACA,IAAA1uB,KAAAguB,UAAAhuB,KAAAsT,KAAA0a,SACA,SAAAriB,OAAA,0BAAA3L,KAAAvB,IAAA,IAAAuB,KAAA9D,MAAA,IAEA,IAAA8D,KAAAuT,MAAAya,SACA,SAAAriB,OAAA,mBAAA3L,KAAAvB,IAAA,IAAAuB,KAAA9D,MAAA,WAGA,KADAwyB,EAAA1uB,KAAAsT,KAAAqb,YACA3uB,KAAAuT,MAAAob,SACA,SAAAhjB,OAAA,sBAGA,OAAA+iB,IAAA1uB,KAAAguB,SAAA,MAGAP,EAAAC,KAAA,EACAD,EAAAmB,OAAA,EACAnB,IAEAxoB,GAAAwoB,UAIA,IAAAoB,GAAA,WACA,QAAAA,MA2FA,MApFAA,GAAA/xB,UAAA6wB,KAAA,SAAAlvB,EAAAvC,EAAA0lB,EAAAtO,EAAAC,GACA,MAAAvT,OAUA6uB,EAAA/xB,UAAA2b,OAAA,SAAAha,EAAAvC,EAAAkxB,GACA,UAAAK,GAAAhvB,EAAAvC,EAAA,OASA2yB,EAAA/xB,UAAAwO,OAAA,SAAA7M,EAAA2uB,GACA,MAAAptB,OAKA6uB,EAAA/xB,UAAAgc,MAAA,WACA,UAKA+V,EAAA/xB,UAAAgL,QAAA,WACA,UAUA+mB,EAAA/xB,UAAAyd,iBAAA,SAAAD,GACA,UAUAuU,EAAA/xB,UAAA8wB,iBAAA,SAAAtT,GACA,UAKAuU,EAAA/xB,UAAAod,OAAA,WACA,aAKA2U,EAAA/xB,UAAAmc,OAAA,WACA,aAMA4V,EAAA/xB,UAAA6xB,OAAA,WACA,UAMAE,EAAA/xB,UAAAkxB,OAAA,WACA,UAEAa,IAEA5pB,GAAA4pB,eAKA,IAAAvX,GAAA,WAMA,QAAAA,GAAAwX,EAAAC,OACA,KAAAA,IAA+BA,EAAAzX,EAAAb,YAC/BzW,KAAA8uB,cACA9uB,KAAA+uB,QAyJA,MA/IAzX,GAAAxa,UAAA2b,OAAA,SAAAha,EAAAvC,GACA,UAAAob,GAAAtX,KAAA8uB,YAAA9uB,KAAA+uB,MACAtW,OAAAha,EAAAvC,EAAA8D,KAAA8uB,aACAnB,KAAA,UAAAF,EAAAmB,MAAA,aAQAtX,EAAAxa,UAAAwO,OAAA,SAAA7M,GACA,UAAA6Y,GAAAtX,KAAA8uB,YAAA9uB,KAAA+uB,MACAzjB,OAAA7M,EAAAuB,KAAA8uB,aACAnB,KAAA,UAAAF,EAAAmB,MAAA,aASAtX,EAAAxa,UAAAyO,IAAA,SAAA9M,GAGA,IAFA,GAAAiV,GACA4B,EAAAtV,KAAA+uB,OACAzZ,EAAAxN,WAAA,CAEA,QADA4L,EAAA1T,KAAA8uB,YAAArwB,EAAA6W,EAAA7W,MAEA,MAAA6W,GAAApZ,KAEAwX,GAAA,EACA4B,IAAAhC,KAEAI,EAAA,IACA4B,IAAA/B,OAGA,aAOA+D,EAAAxa,UAAAid,kBAAA,SAAAtb,GAEA,IADA,GAAAiV,GAAA4B,EAAAtV,KAAA+uB,MAAAC,EAAA,MACA1Z,EAAAxN,WAAA,CAEA,QADA4L,EAAA1T,KAAA8uB,YAAArwB,EAAA6W,EAAA7W,MACA,CACA,GAAA6W,EAAAhC,KAAAxL,UAMA,MAAAknB,GACAA,EAAAvwB,IAGA,IARA,KADA6W,IAAAhC,MACAgC,EAAA/B,MAAAzL,WACAwN,IAAA/B,KACA,OAAA+B,GAAA7W,IASAiV,EAAA,EACA4B,IAAAhC,KAEAI,EAAA,IACAsb,EAAA1Z,EACAA,IAAA/B,OAGA,SAAA5H,OAAA,0EAKA2L,EAAAxa,UAAAgL,QAAA,WACA,MAAA9H,MAAA+uB,MAAAjnB,WAKAwP,EAAAxa,UAAAgc,MAAA,WACA,MAAA9Y,MAAA+uB,MAAAjW,SAKAxB,EAAAxa,UAAAod,OAAA,WACA,MAAAla,MAAA+uB,MAAA7U,UAKA5C,EAAAxa,UAAAmc,OAAA,WACA,MAAAjZ,MAAA+uB,MAAA9V,UAWA3B,EAAAxa,UAAAyd,iBAAA,SAAAD,GACA,MAAAta,MAAA+uB,MAAAxU,iBAAAD,IAUAhD,EAAAxa,UAAA8wB,iBAAA,SAAAtT,GACA,MAAAta,MAAA+uB,MAAAnB,iBAAAtT,IAQAhD,EAAAxa,UAAA2d,YAAA,SAAAwU,GACA,UAAA/B,GAAAltB,KAAA+uB,MAAA,KAAA/uB,KAAA8uB,aAAA,EAAAG,IAEA3X,EAAAxa,UAAA4d,gBAAA,SAAAjc,EAAAwwB,GACA,UAAA/B,GAAAltB,KAAA+uB,MAAAtwB,EAAAuB,KAAA8uB,aAAA,EAAAG,IAEA3X,EAAAxa,UAAAoe,uBAAA,SAAAzc,EAAAwwB,GACA,UAAA/B,GAAAltB,KAAA+uB,MAAAtwB,EAAAuB,KAAA8uB,aAAA,EAAAG,IAEA3X,EAAAxa,UAAAme,mBAAA,SAAAgU,GACA,UAAA/B,GAAAltB,KAAA+uB,MAAA,KAAA/uB,KAAA8uB,aAAA,EAAAG,IAMA3X,EAAAb,WAAA,GAAAoY,GACAvX,IAEArS,GAAAqS,avB8pGM,SAAU7b,EAAQwJ,EAAStJ,GAEjC,YwB/xHAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgzB,GAAAvzB,EAAA,KACAwzB,EAAAxzB,EAAA,KACAonB,EAAApnB,EAAA,KACAyzB,EAAAzzB,EAAA,KACA0zB,EAAA1zB,EAAA,KACA2zB,EAAA3zB,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACA4zB,EAAA5zB,EAAA,KACA6zB,EAAA7zB,EAAA,KACA8zB,EAAA9zB,EAAA,KACA+zB,EAAA/zB,EAAA,KACAg0B,EAAAh0B,EAAA,KACAi0B,EAAAj0B,EAAA,KACAk0B,EAAAl0B,EAAA,KACAm0B,EAAAn0B,EAAA,KAKAo0B,EAAA,WAMA,QAAAA,GAAAC,EAAAC,EAAAC,GACA,GAAApwB,GAAAE,IACAA,MAAAgwB,YACAhwB,KAAAkwB,MACAlwB,KAAAmwB,gBAAA,EACAnwB,KAAAowB,eAAA,KACApwB,KAAAqwB,YAAA,GAAAV,GAAAW,WACAtwB,KAAAuwB,aAAA,EACAvwB,KAAAwwB,6BAAA,KAEAxwB,KAAAywB,cAAA,GAAArB,GAAAsB,mBAKA1wB,KAAA2wB,sBAAA,IAEA,IAAAC,GAAA,GAAArB,GAAAsB,kBAAAX,EAEA,IADAlwB,KAAA8wB,OAAAtB,EAAAuB,aAAAC,cAAAhB,GACAC,GAAA7mB,EAAA+H,eACAnR,KAAAixB,QAAA,GAAApB,GAAAqB,mBAAAlxB,KAAAgwB,UAAAhwB,KAAAmxB,cAAAhmB,KAAAnL,MAAA4wB,GAEA9jB,WAAA9M,KAAAoxB,iBAAAjmB,KAAAnL,MAAA,UAEA,CACA,GAAAqxB,GAAAnB,EAAAoB,QAAA,4BAEA,wBAAAD,IAAA,OAAAA,EAAA,CACA,oBAAAA,GACA,SAAA1lB,OAAA,qEAEA,KACAxC,EAAAvC,UAAAyqB,GAEA,MAAAtiB,GACA,SAAApD,OAAA,kCAAAoD,IAGA/O,KAAA2wB,sBAAA,GAAAf,GAAA2B,qBAAAvxB,KAAAgwB,UAAAhwB,KAAAmxB,cAAAhmB,KAAAnL,WAAAoxB,iBAAAjmB,KAAAnL,WAAAwxB,oBAAArmB,KAAAnL,MAAA4wB,EAAAS,GACArxB,KAAAixB,QAAAjxB,KAAA2wB,sBAEAC,EAAAa,uBAAA,SAAAC,GACA5xB,EAAAmxB,QAAAU,iBAAAD,KAIA1xB,KAAA4xB,eAAApC,EAAAuB,aAAAc,oBAAA7B,EAAA,WAAsG,UAAAP,GAAAqC,cAAAhyB,EAAAgxB,OAAAhxB,EAAAmxB,WACtGjxB,KAAA+xB,qBAEA/xB,KAAAgyB,UAAA,GAAA1C,GAAA2C,eACAjyB,KAAAkyB,cAAA,GAAA7C,GAAA8C,UACAC,eAAA,SAAA3hB,EAAA4hB,EAAAC,EAAAC,GACA,GAAAC,MACAld,EAAAxV,EAAAkyB,UAAAS,QAAAhiB,EAAAE,KASA,OANA2E,GAAAxN,YACA0qB,EAAA1yB,EAAAoyB,cAAAQ,qBAAAjiB,EAAAE,KAAA2E,GACAxI,WAAA,WACAylB,EAAA,OACqB,IAErBC,GAEAG,cAAA,eAEA3yB,KAAA4yB,YAAA,gBACA5yB,KAAA6yB,gBAAA,GAAAxD,GAAA8C,UACAC,eAAA,SAAA3hB,EAAA4hB,EAAAC,EAAAC,GAMA,MALAzyB,GAAAmxB,QAAA6B,OAAAriB,EAAA6hB,EAAAD,EAAA,SAAAxwB,EAAAsK,GACA,GAAA4mB,GAAAR,EAAA1wB,EAAAsK,EACArM,GAAAuwB,YAAA2C,0BAAAviB,EAAAE,KAAAoiB,SAKAJ,cAAA,SAAAliB,EAAA4hB,GACAvyB,EAAAmxB,QAAAgC,SAAAxiB,EAAA4hB,MAkZA,MA3YAtC,GAAAjzB,UAAAiT,SAAA,WACA,OAAA/P,KAAAgwB,UAAAkD,OAAA,sBAAAlzB,KAAAgwB,UAAA/K,MAKA8K,EAAAjzB,UAAAoF,KAAA,WACA,MAAAlC,MAAAgwB,UAAA9K,WAKA6K,EAAAjzB,UAAAq2B,WAAA,WACA,GAAAC,GAAApzB,KAAAgyB,UAAAS,QAAA,GAAA1P,GAAArR,KAAA,2BACAxO,EAAAkwB,EAAA5kB,OAAA,CACA,WAAA+X,OAAA8M,UAAAnwB,GAMA6sB,EAAAjzB,UAAAw2B,qBAAA,WACA,MAAApE,GAAAqE,oBACAC,UAAAxzB,KAAAmzB,gBAYApD,EAAAjzB,UAAAq0B,cAAA,SAAA9e,EAAAlG,EAAAsnB,EAAApB,GAEAryB,KAAAmwB,iBACA,IAAAxf,GAAA,GAAAoS,GAAArR,KAAAW,EACAlG,GAAAnM,KAAAwwB,6BACAxwB,KAAAwwB,6BAAAne,EAAAlG,GACAA,CACA,IAAA4mB,KACA,IAAAV,EACA,GAAAoB,EAAA,CACA,GAAAC,GAAArqB,EAAArB,IAAAmE,EAAA,SAAArQ,GACA,MAAAqzB,GAAAza,aAAA5Y,IAEAi3B,GAAA/yB,KAAA6yB,gBAAAc,sBAAAhjB,EAAA+iB,EAAArB,OAEA,CACA,GAAAuB,GAAAzE,EAAAza,aAAAvI,EACA4mB,GAAA/yB,KAAA6yB,gBAAAgB,0BAAAljB,EAAAijB,EAAAvB,OAGA,IAAAoB,EAAA,CACA,GAAAK,GAAAzqB,EAAArB,IAAAmE,EAAA,SAAArQ,GACA,MAAAqzB,GAAAza,aAAA5Y,IAEAi3B,GAAA/yB,KAAA6yB,gBAAAkB,iBAAApjB,EAAAmjB,OAEA,CACA,GAAAE,GAAA7E,EAAAza,aAAAvI,EACA4mB,GAAA/yB,KAAA6yB,gBAAAH,qBAAA/hB,EAAAqjB,GAEA,GAAAC,GAAAtjB,CACAoiB,GAAAx0B,OAAA,IAGA01B,EAAAj0B,KAAAk0B,mBAAAvjB,IAEA3Q,KAAAqwB,YAAA2C,0BAAAiB,EAAAlB,IAOAhD,EAAAjzB,UAAAq3B,qBAAA,SAAAzlB,GACA1O,KAAAwwB,6BAAA9hB,GAMAqhB,EAAAjzB,UAAAs0B,iBAAA,SAAAgD,GACAp0B,KAAA4yB,YAAA,YAAAwB,IACA,IAAAA,GACAp0B,KAAAq0B,0BAOAtE,EAAAjzB,UAAA00B,oBAAA,SAAA8C,GACA,GAAAx0B,GAAAE,IACAoJ,GAAAmF,KAAA+lB,EAAA,SAAAp4B,EAAAuC,GACAqB,EAAA8yB,YAAAn0B,EAAAvC,MASA6zB,EAAAjzB,UAAA81B,YAAA,SAAAvgB,EAAAnW,GACA,GAAAyU,GAAA,GAAAoS,GAAArR,KAAA,UAAAW,GACAyD,EAAAqZ,EAAAza,aAAAxY,EACA8D,MAAAgyB,UAAAuC,eAAA5jB,EAAAmF,EACA,IAAAid,GAAA/yB,KAAAkyB,cAAAQ,qBAAA/hB,EAAAmF,EACA9V,MAAAqwB,YAAA2C,0BAAAriB,EAAAoiB,IAMAhD,EAAAjzB,UAAA03B,gBAAA,WACA,MAAAx0B,MAAAuwB,gBAQAR,EAAAjzB,UAAA23B,gBAAA,SAAA9jB,EAAA+jB,EAAAnc,EAAAga,GACA,GAAAzyB,GAAAE,IACAA,MAAA20B,KAAA,OACAhkB,OAAAZ,WACA7T,MAAAw4B,EACAlR,SAAAjL,GAIA,IAAAqc,GAAA50B,KAAAszB,uBACAuB,EAAA1F,EAAAza,aAAAggB,EAAAnc,GACAzC,EAAAoZ,EAAA4F,6BAAAD,EAAAD,GACAG,EAAA/0B,KAAAw0B,kBACAzB,EAAA/yB,KAAA6yB,gBAAAmC,mBAAArkB,EAAAmF,EAAAif,GAAA,EACA/0B,MAAAqwB,YAAA4E,YAAAlC,GACA/yB,KAAAixB,QAAAiE,IAAAvkB,EAAAZ,WAAA8kB,EAAArmB,KAAA,YAAA3M,EAAAszB,GACA,GAAAC,GAAA,OAAAvzB,CACAuzB,IACAhsB,EAAAwC,KAAA,UAAA+E,EAAA,YAAA9O,EAEA,IAAAwzB,GAAAv1B,EAAA+yB,gBAAAyC,aAAAP,GAAAK,EACAt1B,GAAAuwB,YAAA2C,0BAAAriB,EAAA0kB,GACAv1B,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,IAEA,IAAAlB,GAAAj0B,KAAAw1B,mBAAA7kB,EACA3Q,MAAAk0B,mBAAAD,GAEAj0B,KAAAqwB,YAAA2C,0BAAAiB,OAOAlE,EAAAjzB,UAAAoN,OAAA,SAAAyG,EAAA8kB,EAAAlD,GACA,GAAAzyB,GAAAE,IACAA,MAAA20B,KAAA,UAA6BhkB,OAAAZ,WAAA7T,MAAAu5B,GAE7B,IAAAC,IAAA,EACAd,EAAA50B,KAAAszB,uBACAQ,IAMA,IALAzqB,EAAA3B,QAAA+tB,EAAA,SAAAE,EAAAC,GACAF,GAAA,CACA,IAAAb,GAAA1F,EAAAza,aAAAkhB,EACA9B,GAAA6B,GAAAzG,EAAA4F,6BAAAD,EAAAD,KAEAc,EAsBAtsB,EAAA8B,IAAA,wDACAlL,KAAAu1B,uBAAAhD,EAAA,UAvBA,CACA,GAAAsD,GAAA71B,KAAAw0B,kBACAzB,EAAA/yB,KAAA6yB,gBAAAiD,eAAAnlB,EAAAmjB,EAAA+B,EACA71B,MAAAqwB,YAAA4E,YAAAlC,GACA/yB,KAAAixB,QAAA8E,MAAAplB,EAAAZ,WAAA0lB,EAAA,SAAA5zB,EAAAszB,GACA,GAAAC,GAAA,OAAAvzB,CACAuzB,IACAhsB,EAAAwC,KAAA,aAAA+E,EAAA,YAAA9O,EAEA,IAAAwzB,GAAAv1B,EAAA+yB,gBAAAyC,aAAAO,GAAAT,GACAnB,EAAAoB,EAAA92B,OAAA,EAAAuB,EAAAo0B,mBAAAvjB,IACA7Q,GAAAuwB,YAAA2C,0BAAAiB,EAAAoB,GACAv1B,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,KAEA9rB,EAAA3B,QAAA+tB,EAAA,SAAAO,GACA,GAAA/B,GAAAn0B,EAAA01B,mBAAA7kB,EAAAkC,MAAAmjB,GACAl2B,GAAAo0B,mBAAAD,KAGAj0B,KAAAqwB,YAAA2C,0BAAAriB,QAWAof,EAAAjzB,UAAAu3B,uBAAA,WACA,GAAAv0B,GAAAE,IACAA,MAAA20B,KAAA,qBACA,IAAAC,GAAA50B,KAAAszB,uBACA2C,EAAA/G,EAAAgH,yBAAAl2B,KAAAywB,cAAAmE,GACA7B,IACAkD,GAAAE,YAAApT,EAAArR,KAAA0kB,MAAA,SAAAzlB,EAAAqjB,GACAjB,IAAAv3B,OAAAsE,EAAA+yB,gBAAAH,qBAAA/hB,EAAAqjB,GACA,IAAAC,GAAAn0B,EAAA01B,mBAAA7kB,EACA7Q,GAAAo0B,mBAAAD,KAEAj0B,KAAAywB,cAAA,GAAArB,GAAAsB,mBACA1wB,KAAAqwB,YAAA2C,0BAAAjQ,EAAArR,KAAA0kB,MAAArD,IAMAhD,EAAAjzB,UAAAu5B,mBAAA,SAAA1lB,EAAA4hB,GACA,GAAAzyB,GAAAE,IACAA,MAAAixB,QAAAoF,mBAAA1lB,EAAAZ,WAAA,SAAAlO,EAAAszB,GACA,OAAAtzB,GACA/B,EAAA2wB,cAAA6F,OAAA3lB,GAEA7Q,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,MAQApF,EAAAjzB,UAAAy5B,gBAAA,SAAA5lB,EAAAzU,EAAAq2B,GACA,GAAAzyB,GAAAE,KACA8V,EAAAqZ,EAAAza,aAAAxY,EACA8D,MAAAixB,QAAAuF,gBAAA7lB,EAAAZ,WAAA+F,EAAAtH,KAAA,YAAA3M,EAAAszB,GACA,OAAAtzB,GACA/B,EAAA2wB,cAAAgG,SAAA9lB,EAAAmF,GAEAhW,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,MASApF,EAAAjzB,UAAA45B,4BAAA,SAAA/lB,EAAAzU,EAAAsnB,EAAA+O,GACA,GAAAzyB,GAAAE,KACA8V,EAAAqZ,EAAAza,aAAAxY,EAAAsnB,EACAxjB,MAAAixB,QAAAuF,gBAAA7lB,EAAAZ,WAAA+F,EAAAtH,KAAA,YAAA3M,EAAAszB,GACA,OAAAtzB,GACA/B,EAAA2wB,cAAAgG,SAAA9lB,EAAAmF,GAEAhW,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,MAQApF,EAAAjzB,UAAA65B,mBAAA,SAAAhmB,EAAA8kB,EAAAlD,GACA,GAAAzyB,GAAAE,IACA,IAAAqJ,EAAAvB,QAAA2tB,GAGA,MAFArsB,GAAA8B,IAAA,2EACAlL,MAAAu1B,uBAAAhD,EAAA,KAGAvyB,MAAAixB,QAAA2F,kBAAAjmB,EAAAZ,WAAA0lB,EAAA,SAAA5zB,EAAAszB,GACA,OAAAtzB,GACAwH,EAAA3B,QAAA+tB,EAAA,SAAA3d,EAAAsB,GACA,GAAAjB,GAAAgX,EAAAza,aAAA0E,EACAtZ,GAAA2wB,cAAAgG,SAAA9lB,EAAAkC,MAAAiF,GAAAK,KAGArY,EAAAy1B,uBAAAhD,EAAA1wB,EAAAszB,MAOApF,EAAAjzB,UAAA+5B,yBAAA,SAAApmB,EAAAqmB,GACA,GAAA/D,EAEAA,GADA,UAAAtiB,EAAAE,KAAAsB,WACAjS,KAAAkyB,cAAA6E,qBAAAtmB,EAAAqmB,GAGA92B,KAAA6yB,gBAAAkE,qBAAAtmB,EAAAqmB,GAEA92B,KAAAqwB,YAAA2G,kBAAAvmB,EAAAE,KAAAoiB,IAMAhD,EAAAjzB,UAAAm6B,4BAAA,SAAAxmB,EAAAqmB,GAGA,GAAA/D,EAEAA,GADA,UAAAtiB,EAAAE,KAAAsB,WACAjS,KAAAkyB,cAAAgF,wBAAAzmB,EAAAqmB,GAGA92B,KAAA6yB,gBAAAqE,wBAAAzmB,EAAAqmB,GAEA92B,KAAAqwB,YAAA2G,kBAAAvmB,EAAAE,KAAAoiB,IAEAhD,EAAAjzB,UAAAq6B,UAAA,WACAn3B,KAAA2wB,uBACA3wB,KAAA2wB,sBAAAwG,UAzZA,mBA4ZApH,EAAAjzB,UAAA6iB,OAAA,WACA3f,KAAA2wB,uBACA3wB,KAAA2wB,sBAAAhR,OA9ZA,mBAiaAoQ,EAAAjzB,UAAAs6B,MAAA,SAAAC,GAEA,OADA,KAAAA,IAAmCA,GAAA,GACnC,oBAAAC,SAAA,CAEA,GAAAF,EACAC,IACAr3B,KAAAowB,iBACApwB,KAAAowB,eAAA,GAAAV,GAAA6H,cAAAv3B,KAAA8wB,SACAsG,EAAAp3B,KAAAowB,eAAA7kB,OAGA6rB,EAAAp3B,KAAA8wB,OAAAvlB,KAEA,IAAAisB,GAAAz7B,OAAA+R,KAAAspB,GAAAK,OAAA,SAAAC,EAAAC,GACA,MAAA5qB,MAAAmH,IAAAyjB,EAAAp5B,OAAAm5B,IACS,EACTruB,GAAA3B,QAAA0vB,EAAA,SAAAQ,EAAA17B,GAEA,OAAAoC,GAAAs5B,EAAAr5B,OAAqCD,EAAAk5B,EAAA,EAAqBl5B,IAC1Ds5B,GAAA,GACAN,SAAApsB,IAAA0sB,EAAA17B,OAGA6zB,EAAAjzB,UAAA+6B,sBAAA,SAAAC,GACA93B,KAAA8wB,OAAAiH,iBAAAD,GACA93B,KAAA4xB,eAAAoG,YAAAF,IAMA/H,EAAAjzB,UAAA63B,KAAA,WAEA,OADApqB,MACAC,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CD,EAAAC,GAAAtK,UAAAsK,EAEA,IAAAiB,GAAA,EACAzL,MAAA2wB,wBACAllB,EAAAzL,KAAA2wB,sBAAAptB,GAAA,KAEA6F,EAAA8B,IAAA5K,UAAA,IAAAmL,GAAAjQ,OAAA+O,KAOAwlB,EAAAjzB,UAAAy4B,uBAAA,SAAA7mB,EAAA7M,EAAAszB,GACAzmB,GACAtF,EAAA4H,eAAA,WACA,SAAAnP,EACA6M,EAAA,UAEA,CACA,GAAA8B,IAAA3O,GAAA,SAAA+O,cACArP,EAAAiP,CACA2kB,KACA5zB,GAAA,KAAA4zB,EACA,IAAAzzB,GAAA,GAAAiK,OAAApK,EACAG,GAAA8O,OACA9B,EAAAhN,OAKA3F,OAAAuB,eAAAyyB,EAAAjzB,UAAA,YACAyO,IAAA,WACA,MAAAvL,MAAAi4B,aAAAj4B,KAAAi4B,WAAA,GAAAnI,GAAAoI,SAAAl4B,QAEA/C,YAAA,EACAE,cAAA,IAEA4yB,IAEA9qB,GAAA8qB,QxBuzHM,SAAUt0B,EAAQwJ,EAAStJ,GAEjC,YyBtzIAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAO9C,IAAAi8B,GAAA,WAMA,QAAAA,GAAAC,EAAAC,EAAAC,GACAt4B,KAAAo4B,QACAp4B,KAAAq4B,oBACAr4B,KAAAs4B,YAwCA,MAlCAH,GAAAr7B,UAAAy7B,mBAAA,WACA,MAAAv4B,MAAAq4B,mBAMAF,EAAAr7B,UAAA07B,WAAA,WACA,MAAAx4B,MAAAs4B,WAMAH,EAAAr7B,UAAA27B,kBAAA,SAAA9nB,GACA,GAAAA,EAAA7I,UACA,MAAA9H,MAAAu4B,uBAAAv4B,KAAAs4B,SAEA,IAAAtP,GAAArY,EAAAsB,UACA,OAAAjS,MAAA04B,mBAAA1P,IAMAmP,EAAAr7B,UAAA47B,mBAAA,SAAAj6B,GACA,MAAAuB,MAAAu4B,uBAAAv4B,KAAAs4B,WAAAt4B,KAAAo4B,MAAAngB,SAAAxZ,IAKA05B,EAAAr7B,UAAA21B,QAAA,WACA,MAAAzyB,MAAAo4B,OAEAD,IAEAlzB,GAAAkzB,azB80IM,SAAU18B,EAAQwJ,EAAStJ,GAEjC,Y0B14IAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAI9C+I,EAAAS,WAIAizB,aAAA,EAIAC,YAAA,EAIAC,YAAA,sB1Bm6IM,SAAUp9B,EAAQwJ,EAAStJ,GAEjC,Y2Br7IAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAm9B,EAAAn9B,EAAA,KACAo9B,EAAAp9B,EAAA,KACAwN,EAAAxN,EAAA,KACAq9B,EAAAr9B,EAAA,KACAs9B,EAAAt9B,EAAA,KACAu9B,EAAAv9B,EAAA,KACAonB,EAAApnB,EAAA,KACAw9B,EAAAx9B,EAAA,KACA+M,EAAA/M,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACAy9B,EAAAz9B,EAAA,KACA09B,EAAA,SAAAnkB,GAaA,QAAAmkB,GAAAC,EAAA3oB,GAEA,KAAA2oB,YAAAJ,GAAAnJ,MACA,SAAApkB,OAAA,4DAIA,OADAuJ,GAAAzY,KAAAuD,KAAAs5B,EAAA3oB,EAAAwoB,EAAAI,YAAAC,SAAA,IAAAx5B,KA6OA,MA/PA6U,GAAAM,UAAAkkB,EAAAnkB,GAsBAmkB,EAAAv8B,UAAA28B,OAAA,WAEA,MADArwB,GAAAR,iBAAA,oBAAA1I,UAAA3B,QACAyB,KAAA2Q,KAAA7I,UACA,KAEA9H,KAAA2Q,KAAAyB,WAMAinB,EAAAv8B,UAAA+V,MAAA,SAAAR,GAWA,MAVAjJ,GAAAR,iBAAA,sBAAA1I,UAAA3B,QACA,iBAAA8T,GACAA,EAAAG,OAAAH,GAEAA,YAAA0Q,GAAArR,OACA,OAAA1R,KAAA2Q,KAAAsB,WACAvJ,EAAAkc,uBAAA,oBAAAvS,GAAA,GAEA3J,EAAAic,mBAAA,oBAAAtS,GAAA,IAEA,GAAAgnB,GAAAr5B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAkC,MAAAR,KAGAgnB,EAAAv8B,UAAA48B,UAAA,WACAtwB,EAAAR,iBAAA,uBAAA1I,UAAA3B,OACA,IAAAo7B,GAAA35B,KAAA2Q,KAAAgC,QACA,eAAAgnB,EAAA,QAAAN,GAAAr5B,KAAAs5B,KAAAK,IAGAN,EAAAv8B,UAAA88B,QAAA,WACAxwB,EAAAR,iBAAA,qBAAA1I,UAAA3B,OAEA,KADA,GAAA6C,GAAApB,KACA,OAAAoB,EAAAs4B,aACAt4B,IAAAs4B,WAEA,OAAAt4B,IAGAi4B,EAAAv8B,UAAA+8B,aAAA,WACA,MAAA75B,MAAAs5B,KAAAn4B,UAOAk4B,EAAAv8B,UAAAuO,IAAA,SAAAqpB,EAAAnC,GACAnpB,EAAAR,iBAAA,oBAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,gBAAA7kB,KAAA2Q,MACAjI,EAAA+a,wBAAA,kBAAAiR,EAAA10B,KAAA2Q,MAAA,GACAvH,EAAAP,iBAAA,kBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAGA,OAFAhG,MAAAs5B,KAAA7E,gBAAAz0B,KAAA2Q,KAAA+jB,EACA,KAAAoF,EAAAC,aAAAxH,IACAuH,EAAAE,SAOAX,EAAAv8B,UAAAoN,OAAA,SAAA+vB,EAAA1H,GAGA,GAFAnpB,EAAAR,iBAAA,uBAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,mBAAA7kB,KAAA2Q,MACApV,MAAAkP,QAAAwvB,GAAA,CAEA,OADAC,MACA57B,EAAA,EAA2BA,EAAA27B,EAAA17B,SAA0BD,EACrD47B,EAAA,GAAA57B,GAAA27B,EAAA37B,EAEA27B,GAAAC,EACA/wB,EAAAyC,KAAA,wMAKAlD,EAAA4b,6BAAA,qBAAA2V,EAAAj6B,KAAA2Q,MAAA,GACAvH,EAAAP,iBAAA,qBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAs5B,KAAApvB,OAAAlK,KAAA2Q,KAAAspB,EAAAH,EAAAC,aAAAxH,IACAuH,EAAAE,SAQAX,EAAAv8B,UAAA23B,gBAAA,SAAAC,EAAAnc,EAAAga,GAMA,GALAnpB,EAAAR,iBAAA,gCAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,4BAAA7kB,KAAA2Q,MACAjI,EAAA+a,wBAAA,8BAAAiR,EAAA10B,KAAA2Q,MAAA,GACAjI,EAAA6b,iBAAA,8BAAAhM,GAAA,GACAnP,EAAAP,iBAAA,8BAAA0pB,GAAA,GACA,YAAAvyB,KAAAy5B,UAAA,UAAAz5B,KAAAy5B,SACA,0CACAz5B,KAAAy5B,SACA,yBACA,IAAAK,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAs5B,KAAA7E,gBAAAz0B,KAAA2Q,KAAA+jB,EAAAnc,EAAAuhB,EAAAC,aAAAxH,IACAuH,EAAAE,SAMAX,EAAAv8B,UAAAwO,OAAA,SAAAinB,GAIA,MAHAnpB,GAAAR,iBAAA,uBAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,mBAAA7kB,KAAA2Q,MACAvH,EAAAP,iBAAA,qBAAA0pB,GAAA,GACAvyB,KAAAqL,IAAA,KAAAknB,IAQA8G,EAAAv8B,UAAAq9B,YAAA,SAAAC,EAAA7H,EAAA8H,GAQA,GAPAjxB,EAAAR,iBAAA,4BAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,wBAAA7kB,KAAA2Q,MACAvH,EAAAP,iBAAA,0BAAAuxB,GAAA,GACAhxB,EAAAP,iBAAA,0BAAA0pB,GAAA,GAGA7pB,EAAA2c,gBAAA,0BAAAgV,GAAA,GACA,YAAAr6B,KAAAy5B,UAAA,UAAAz5B,KAAAy5B,SACA,sCACAz5B,KAAAy5B,SACA,8BACA5V,KAAAwW,IACAA,GAAA,EACA,IAAAP,GAAA,GAAAzwB,GAAArD,QACA,oBAAAusB,IACAuH,EAAAE,QAAAv4B,MAAA,aAEA,IAAA64B,GAAA,SAAA54B,EAAA64B,EAAA1R,GACAnnB,EACAo4B,EAAA/b,OAAArc,GAGAo4B,EAAAhc,QAAA,GAAAib,GAAAyB,kBAAAD,EAAA1R,IAEA,mBAAA0J,IACAA,EAAA7wB,EAAA64B,EAAA1R,GAIA,OADA7oB,MAAAs5B,KAAAmB,iBAAAz6B,KAAA2Q,KAAAypB,EAAAE,EAAAD,GACAP,EAAAE,SAOAX,EAAAv8B,UAAA49B,YAAA,SAAAlX,EAAA+O,GACAnpB,EAAAR,iBAAA,4BAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,wBAAA7kB,KAAA2Q,MACAjI,EAAA6b,iBAAA,0BAAAf,GAAA,GACApa,EAAAP,iBAAA,0BAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAs5B,KAAA7E,gBAAAz0B,KAAA2Q,KAAAkC,MAAA,aAAA2Q,EAAA,KAAAsW,EAAAC,aAAAxH,IACAuH,EAAAE,SAOAX,EAAAv8B,UAAAuE,KAAA,SAAAnF,EAAAq2B,GACAnpB,EAAAR,iBAAA,qBAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,iBAAA7kB,KAAA2Q,MACAjI,EAAA+a,wBAAA,mBAAAvnB,EAAA8D,KAAA2Q,MAAA,GACAvH,EAAAP,iBAAA,mBAAA0pB,GAAA,EACA,IASAyH,GATAxT,EAAAxmB,KAAAs5B,KAAAnG,aACAjxB,EAAA82B,EAAA2B,WAAAnU,GAMAoU,EAAA56B,KAAA6S,MAAA3Q,GACA24B,EAAA76B,KAAA6S,MAAA3Q,EAaA,OAVA83B,GADA,MAAA99B,EACA0+B,EAAAvvB,IAAAnP,EAAAq2B,GAAA/wB,KAAA,WAAgF,MAAAq5B,KAGhFhd,QAAAC,QAAA+c,GAEAD,EAAAp5B,KAAAw4B,EAAAx4B,KAAA2J,KAAA6uB,GACAY,EAAAn5B,MAAAu4B,EAAAx4B,KAAA2J,KAAA6uB,MAAAnW,IACA,mBAAA0O,IACAyH,EAAAv4B,MAAA,cAEAm5B,GAKAvB,EAAAv8B,UAAAg+B,aAAA,WAEA,MADApyB,GAAAmc,qBAAA,yBAAA7kB,KAAA2Q,MACA,GAAAmoB,GAAAiC,aAAA/6B,KAAAs5B,KAAAt5B,KAAA2Q,OAEA5U,OAAAuB,eAAA+7B,EAAAv8B,UAAA,YACAyO,IAAA,WACA,MAAAvL,MAAA65B,gBAEA58B,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAA+7B,EAAAv8B,UAAA,OACAyO,IAAA,WACA,MAAAvL,MAAAy5B,UAEAx8B,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAA+7B,EAAAv8B,UAAA,UACAyO,IAAA,WACA,MAAAvL,MAAA05B,aAEAz8B,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAA+7B,EAAAv8B,UAAA,QACAyO,IAAA,WACA,MAAAvL,MAAA45B,WAEA38B,YAAA,EACAE,cAAA,IAEAk8B,GACCJ,EAAA+B,MACD/1B,GAAAo0B,YAOAJ,EAAA+B,MAAAC,uBAAA5B,EACAD,EAAA8B,UAAAD,uBAAA5B,G3B68IM,SAAU59B,EAAQwJ,EAAStJ,GAEjC,Y4BvuJAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACA+M,EAAA/M,EAAA,KACAonB,EAAApnB,EAAA,KACAib,EAAAjb,EAAA,KAKAw/B,EAAA,WAMA,QAAAA,GAAA/C,EAAAgD,EAAAC,GACAr7B,KAAAo4B,QACAp4B,KAAAo7B,OACAp7B,KAAAq7B,SAsIA,MA9HAF,GAAAr+B,UAAA0R,IAAA,WAEA,MADArF,GAAAP,iBAAA,uBAAA1I,UAAA3B,QACAyB,KAAAo4B,MAAA5pB,OAOA2sB,EAAAr+B,UAAAw+B,UAAA,WAEA,MADAnyB,GAAAP,iBAAA,6BAAA1I,UAAA3B,QACAyB,KAAAo4B,MAAA5pB,KAAA,IAIA2sB,EAAAr+B,UAAAy+B,OAAA,WAGA,MADApyB,GAAAP,iBAAA,0BAAA1I,UAAA3B,QACAyB,KAAAs7B,aAOAH,EAAAr+B,UAAA0+B,OAAA,WAEA,MADAryB,GAAAP,iBAAA,0BAAA1I,UAAA3B,SACAyB,KAAAo4B,MAAAtwB,WAQAqzB,EAAAr+B,UAAA+V,MAAA,SAAA4oB,GACAtyB,EAAAP,iBAAA,yBAAA1I,UAAA3B,QAEAk9B,EAAAjpB,OAAAipB,GACA/yB,EAAAic,mBAAA,uBAAA8W,GAAA,EACA,IAAAC,GAAA,GAAA3Y,GAAArR,KAAA+pB,GACAE,EAAA37B,KAAAo7B,KAAAvoB,MAAA6oB,EACA,WAAAP,GAAAn7B,KAAAo4B,MAAArgB,SAAA2jB,GAAAC,EAAA/kB,EAAAJ,iBAQA2kB,EAAAr+B,UAAAmb,SAAA,SAAAwjB,GACAtyB,EAAAP,iBAAA,4BAAA1I,UAAA3B,QACAmK,EAAAic,mBAAA,0BAAA8W,GAAA,EACA,IAAAC,GAAA,GAAA3Y,GAAArR,KAAA+pB,EACA,QAAAz7B,KAAAo4B,MAAArgB,SAAA2jB,GAAA5zB,WAOAqzB,EAAAr+B,UAAAyY,YAAA,WAGA,MAFApM,GAAAP,iBAAA,+BAAA1I,UAAA3B,QAEAyB,KAAAo4B,MAAA7iB,cAAA/G,OAUA2sB,EAAAr+B,UAAA4K,QAAA,SAAA4S,GACA,GAAAxa,GAAAE,IAGA,OAFAmJ,GAAAP,iBAAA,2BAAA1I,UAAA3B,QACA4K,EAAAN,iBAAA,yBAAAyR,GAAA,IACAta,KAAAo4B,MAAA1gB,gBAEA1X,KAAAo4B,MAEAjf,aAAAnZ,KAAAq7B,OAAA,SAAA58B,EAAA6W,GACA,MAAAgF,GAAA,GAAA6gB,GAAA7lB,EAAAxV,EAAAs7B,KAAAvoB,MAAApU,GAAAmY,EAAAJ,oBAOA2kB,EAAAr+B,UAAA8+B,YAAA,WAEA,MADAzyB,GAAAP,iBAAA,+BAAA1I,UAAA3B,SACAyB,KAAAo4B,MAAA1gB,eAGA1X,KAAAo4B,MAAAtwB,WAEA/L,OAAAuB,eAAA69B,EAAAr+B,UAAA,OACAyO,IAAA,WACA,MAAAvL,MAAAo7B,KAAA3B,UAEAx8B,YAAA,EACAE,cAAA,IAMAg+B,EAAAr+B,UAAA+b,YAAA,WAEA,MADA1P,GAAAP,iBAAA,+BAAA1I,UAAA3B,QACAyB,KAAAo4B,MAAAvf,eAKAsiB,EAAAr+B,UAAA++B,OAAA,WAEA,MADA1yB,GAAAP,iBAAA,uBAAA1I,UAAA3B,QACAyB,KAAAo7B,MAEAr/B,OAAAuB,eAAA69B,EAAAr+B,UAAA,OACAyO,IAAA,WACA,MAAAvL,MAAA67B,UAEA5+B,YAAA,EACAE,cAAA,IAEAg+B,IAEAl2B,GAAAk2B,gB5B+vJM,SAAU1/B,EAAQwJ,EAAStJ,GAEjC,Y6B35JAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAIA4/B,GAJAplB,EAAA/a,EAAA,KACAonB,EAAApnB,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KAQAogC,EAAA,WAIA,MAHAD,KACAA,EAAA,GAAAplB,GAAAY,UAAAnO,EAAAuE,gBAEAouB,GAKAE,EAAA,WAMA,QAAAA,GAAA9/B,EAAAmlB,OACA,KAAAA,IAAkCA,EAAA0a,KAClC/7B,KAAA9D,QACA8D,KAAAqhB,WAkTA,MA3SA2a,GAAAC,WAAA,SAAAruB,GACA,GAAAsuB,GAAAF,EAAA5F,KAIA,OAHAhtB,GAAA1B,QAAAkG,EAAA,SAAA8tB,EAAAS,GACAD,IAAA7wB,IAAA,GAAA0X,GAAArR,KAAAgqB,GAAAS,KAEAD,GAMAF,EAAAl/B,UAAAgL,QAAA,WACA,cAAA9H,KAAA9D,OAAA8D,KAAAqhB,SAAAvZ,WAcAk0B,EAAAl/B,UAAAs/B,iCAAA,SAAAppB,EAAAqpB,GACA,SAAAr8B,KAAA9D,OAAAmgC,EAAAr8B,KAAA9D,OACA,OAAoByU,KAAAoS,EAAArR,KAAA0kB,MAAAl6B,MAAA8D,KAAA9D,MAGpB,IAAA8W,EAAAlL,UACA,WAGA,IAAAkQ,GAAAhF,EAAAf,WACAY,EAAA7S,KAAAqhB,SAAA9V,IAAAyM,EACA,WAAAnF,EAAA,CACA,GAAAypB,GAAAzpB,EAAAupB,iCAAAppB,EAAAb,WAAAkqB,EACA,UAAAC,EAAA,CAEA,OAAgC3rB,KADhC,GAAAoS,GAAArR,KAAAsG,GAAAnF,MAAAypB,EAAA3rB,MACgCzU,MAAAogC,EAAApgC,OAGhC,YAIA,aAWA8/B,EAAAl/B,UAAAy/B,yBAAA,SAAAvpB,GACA,MAAAhT,MAAAo8B,iCAAAppB,EAAA,WAAgF,YAMhFgpB,EAAAl/B,UAAA0/B,QAAA,SAAAxpB,GACA,GAAAA,EAAAlL,UACA,MAAA9H,KAGA,IAAAgY,GAAAhF,EAAAf,WACAwqB,EAAAz8B,KAAAqhB,SAAA9V,IAAAyM,EACA,eAAAykB,EACAA,EAAAD,QAAAxpB,EAAAb,YAGA6pB,EAAA5F,OAWA4F,EAAAl/B,UAAAuO,IAAA,SAAA2H,EAAA0pB,GACA,GAAA1pB,EAAAlL,UACA,UAAAk0B,GAAAU,EAAA18B,KAAAqhB,SAGA,IAAArJ,GAAAhF,EAAAf,WACAY,EAAA7S,KAAAqhB,SAAA9V,IAAAyM,IAAAgkB,EAAA5F,MACAuG,EAAA9pB,EAAAxH,IAAA2H,EAAAb,WAAAuqB,GACArkB,EAAArY,KAAAqhB,SAAA5I,OAAAT,EAAA2kB,EACA,WAAAX,GAAAh8B,KAAA9D,MAAAmc,IASA2jB,EAAAl/B,UAAAwO,OAAA,SAAA0H,GACA,GAAAA,EAAAlL,UACA,MAAA9H,MAAAqhB,SAAAvZ,UACAk0B,EAAA5F,MAGA,GAAA4F,GAAA,KAAAh8B,KAAAqhB,SAIA,IAAArJ,GAAAhF,EAAAf,WACAY,EAAA7S,KAAAqhB,SAAA9V,IAAAyM,EACA,IAAAnF,EAAA,CACA,GAAA8pB,GAAA9pB,EAAAvH,OAAA0H,EAAAb,YACAkG,MAAA,EAOA,OALAA,GADAskB,EAAA70B,UACA9H,KAAAqhB,SAAA/V,OAAA0M,GAGAhY,KAAAqhB,SAAA5I,OAAAT,EAAA2kB,GAEA,OAAA38B,KAAA9D,OAAAmc,EAAAvQ,UACAk0B,EAAA5F,MAGA,GAAA4F,GAAAh8B,KAAA9D,MAAAmc,GAIA,MAAArY,OAUAg8B,EAAAl/B,UAAAyO,IAAA,SAAAyH,GACA,GAAAA,EAAAlL,UACA,MAAA9H,MAAA9D,KAGA,IAAA8b,GAAAhF,EAAAf,WACAY,EAAA7S,KAAAqhB,SAAA9V,IAAAyM,EACA,OAAAnF,GACAA,EAAAtH,IAAAyH,EAAAb,YAGA,MAWA6pB,EAAAl/B,UAAA8/B,QAAA,SAAA5pB,EAAA6pB,GACA,GAAA7pB,EAAAlL,UACA,MAAA+0B,EAGA,IAAA7kB,GAAAhF,EAAAf,WACAY,EAAA7S,KAAAqhB,SAAA9V,IAAAyM,IAAAgkB,EAAA5F,MACAuG,EAAA9pB,EAAA+pB,QAAA5pB,EAAAb,WAAA0qB,GACAxkB,MAAA,EAOA,OALAA,GADAskB,EAAA70B,UACA9H,KAAAqhB,SAAA/V,OAAA0M,GAGAhY,KAAAqhB,SAAA5I,OAAAT,EAAA2kB,GAEA,GAAAX,GAAAh8B,KAAA9D,MAAAmc,IAWA2jB,EAAAl/B,UAAAggC,KAAA,SAAAtwB,GACA,MAAAxM,MAAA+8B,MAAAha,EAAArR,KAAA0kB,MAAA5pB,IAUAwvB,EAAAl/B,UAAAigC,MAAA,SAAAC,EAAAxwB,GACA,GAAAywB,KAIA,OAHAj9B,MAAAqhB,SAAA9G,iBAAA,SAAAyO,EAAAyT,GACAQ,EAAAjU,GAAAyT,EAAAM,MAAAC,EAAAnqB,MAAAmW,GAAAxc,KAEAA,EAAAwwB,EAAAh9B,KAAA9D,MAAA+gC,IASAjB,EAAAl/B,UAAAogC,WAAA,SAAAvsB,EAAA3B,GACA,MAAAhP,MAAAm9B,YAAAxsB,EAAAoS,EAAArR,KAAA0kB,MAAApnB,IAEAgtB,EAAAl/B,UAAAqgC,YAAA,SAAAC,EAAAJ,EAAAhuB,GACA,GAAAmP,KAAAne,KAAA9D,OAAA8S,EAAAguB,EAAAh9B,KAAA9D,MACA,IAAAiiB,EACA,MAAAA,EAGA,IAAAif,EAAAt1B,UACA,WAGA,IAAAkQ,GAAAolB,EAAAnrB,WACAorB,EAAAr9B,KAAAqhB,SAAA9V,IAAAyM,EACA,OAAAqlB,GACAA,EAAAF,YAAAC,EAAAjrB,WAAA6qB,EAAAnqB,MAAAmF,GAAAhJ,GAGA,MAWAgtB,EAAAl/B,UAAAwgC,cAAA,SAAA3sB,EAAA3B,GACA,MAAAhP,MAAAu9B,eAAA5sB,EAAAoS,EAAArR,KAAA0kB,MAAApnB,IAEAgtB,EAAAl/B,UAAAygC,eAAA,SAAAH,EAAAI,EAAAxuB,GACA,GAAAouB,EAAAt1B,UACA,MAAA9H,KAGAA,MAAA9D,OACA8S,EAAAwuB,EAAAx9B,KAAA9D,MAEA,IAAA8b,GAAAolB,EAAAnrB,WACAorB,EAAAr9B,KAAAqhB,SAAA9V,IAAAyM,EACA,OAAAqlB,GACAA,EAAAE,eAAAH,EAAAjrB,WAAAqrB,EAAA3qB,MAAAmF,GAAAhJ,GAGAgtB,EAAA5F,OAWA4F,EAAAl/B,UAAA2gC,QAAA,SAAAzuB,GACAhP,KAAA09B,SAAA3a,EAAArR,KAAA0kB,MAAApnB,IAEAgtB,EAAAl/B,UAAA4gC,SAAA,SAAAF,EAAAxuB,GACAhP,KAAAqhB,SAAA9G,iBAAA,SAAAzC,EAAA2kB,GACAA,EAAAiB,SAAAF,EAAA3qB,MAAAiF,GAAA9I,KAEAhP,KAAA9D,OACA8S,EAAAwuB,EAAAx9B,KAAA9D,QAOA8/B,EAAAl/B,UAAA6gC,aAAA,SAAA3uB,GACAhP,KAAAqhB,SAAA9G,iBAAA,SAAAzC,EAAA2kB,GACAA,EAAAvgC,OACA8S,EAAA8I,EAAA2kB,EAAAvgC,UAIA8/B,EAAA5F,MAAA,GAAA4F,GAAA,MACAA,IAEA/2B,GAAA+2B,iB7Bm7JM,SAAUvgC,EAAQwJ,EAAStJ,GAEjC,Y8BvwKAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAiiC,EAAAjiC,EAAA,KACAguB,EAAAhuB,EAAA,KACAib,EAAAjb,EAAA,KAQAkiC,EAAA,WACA,QAAAA,GAAAxC,GACAr7B,KAAAq7B,SAkGA,MAhGAwC,GAAA/gC,UAAA6b,YAAA,SAAAqb,EAAAv1B,EAAAk+B,EAAA1I,EAAA6J,EAAAC,GACA50B,EAAAhE,OAAA6uB,EAAAxY,UAAAxb,KAAAq7B,QAAA,oDACA,IAAA2C,GAAAhK,EAAAnc,kBAAApZ,EAEA,OAAAu/B,GAAAjmB,SAAAkc,GAAAtgB,OAAAgpB,EAAA5kB,SAAAkc,KAIA+J,EAAAl2B,WAAA60B,EAAA70B,UAIAksB,GAGA,MAAA+J,IACApB,EAAA70B,UACAksB,EAAA/b,SAAAxZ,GACAs/B,EAAAE,iBAAAL,EAAApV,OAAAU,mBAAAzqB,EAAAu/B,IAGA70B,EAAAhE,OAAA6uB,EAAAtc,aAAA,uEAGAsmB,EAAAl2B,UACAi2B,EAAAE,iBAAAL,EAAApV,OAAAO,iBAAAtqB,EAAAk+B,IAGAoB,EAAAE,iBAAAL,EAAApV,OAAAY,mBAAA3qB,EAAAk+B,EAAAqB,KAGAhK,EAAAtc,cAAAilB,EAAA70B,UACAksB,EAIAA,EAAA9b,qBAAAzZ,EAAAk+B,GAAAvhB,UAAApb,KAAAq7B,UAMAwC,EAAA/gC,UAAAohC,eAAA,SAAAxV,EAAAyV,EAAAJ,GAuBA,MAtBA,OAAAA,IACArV,EAAAhR,cACAgR,EAAAvP,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACA+kB,EAAAlmB,SAAAxZ,IACAs/B,EAAAE,iBAAAL,EAAApV,OAAAU,mBAAAzqB,EAAA2a,MAIA+kB,EAAAzmB,cACAymB,EAAAhlB,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACA,GAAAsP,EAAAzQ,SAAAxZ,GAAA,CACA,GAAAu/B,GAAAtV,EAAA7Q,kBAAApZ,EACAu/B,GAAArqB,OAAAyF,IACA2kB,EAAAE,iBAAAL,EAAApV,OAAAY,mBAAA3qB,EAAA2a,EAAA4kB,QAIAD,GAAAE,iBAAAL,EAAApV,OAAAO,iBAAAtqB,EAAA2a,OAKA+kB,EAAA/iB,UAAApb,KAAAq7B,SAKAwC,EAAA/gC,UAAA6a,eAAA,SAAA+Q,EAAAnQ,GACA,MAAAmQ,GAAA5gB,UACA6hB,EAAA3S,aAAAP,WAGAiS,EAAA/Q,eAAAY,IAMAslB,EAAA/gC,UAAAshC,aAAA,WACA,UAKAP,EAAA/gC,UAAAuhC,iBAAA,WACA,MAAAr+B,OAKA69B,EAAA/gC,UAAAwhC,SAAA,WACA,MAAAt+B,MAAAq7B,QAEAwC,IAEA54B,GAAA44B,iB9B+xKM,SAAUpiC,EAAQwJ,EAAStJ,GAEjC,Y+Bn5KAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAqiC,GAAA5iC,EAAA,KACAo1B,EAAA,WACA,QAAAA,MAkBA,MAhBAA,GAAAC,cAAA,SAAAhM,GACA,GAAAwZ,GAAAxZ,EAAAjV,UAIA,OAHA/P,MAAAy+B,aAAAD,KACAx+B,KAAAy+B,aAAAD,GAAA,GAAAD,GAAAG,iBAEA1+B,KAAAy+B,aAAAD,IAEAzN,EAAAc,oBAAA,SAAA7M,EAAA2Z,GACA,GAAAH,GAAAxZ,EAAAjV,UAIA,OAHA/P,MAAA4+B,WAAAJ,KACAx+B,KAAA4+B,WAAAJ,GAAAG,KAEA3+B,KAAA4+B,WAAAJ,IAEAzN,EAAA0N,gBACA1N,EAAA6N,cACA7N,IAEA9rB,GAAA8rB,gB/B26KM,SAAUt1B,EAAQwJ,EAAStJ,GAEjC,YgCp8KAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAu9B,EAAAv9B,EAAA,KACAyN,EAAAzN,EAAA,KACAkjC,EAAAljC,EAAA,KACA+M,EAAA/M,EAAA,IACAA,GAAA,IAEA,IACAmjC,GAIAC,EAAA,WACA,QAAAA,KAIA/+B,KAAAg/B,UAKAh/B,KAAAi/B,gBAAA,EAyFA,MAvFAF,GAAAG,YAAA,WAIA,MAHAJ,KACAA,EAAA,GAAAC,IAEAD,GAGAC,EAAAjiC,UAAAq6B,UAAA,WACA,OAAAgI,KAAAn/B,MAAAg/B,OACA,OAAAI,KAAAp/B,MAAAg/B,OAAAG,GACAn/B,KAAAg/B,OAAAG,GAAAC,GAAAjI,aAIA4H,EAAAjiC,UAAA6iB,OAAA,WACA,OAAAwf,KAAAn/B,MAAAg/B,OACA,OAAAI,KAAAp/B,MAAAg/B,OAAAG,GACAn/B,KAAAg/B,OAAAG,GAAAC,GAAAzf,UAUAof,EAAAjiC,UAAAuiC,gBAAA,SAAAnP,EAAAoP,GACA,GAAAF,GAAAE,GAAApP,EAAAoB,QAAA,gBACAzN,KAAAub,GACAh2B,EAAAsC,MAAA,uHAIA,IAAAqZ,GAAA8Z,EAAAU,cAAAH,GACApa,EAAAD,EAAAC,QAOA,OANAtc,GAAAoc,YAAA,kCAAAC,GACAA,EAAApU,KAAA7I,WACAsB,EAAAsC,MAAA,4FAGA1L,KAAAw/B,WAAAxa,EAAAkL,GACA/uB,UAOA49B,EAAAjiC,UAAA2iC,WAAA,SAAAnG,GACA,GAAAoG,GAAAv2B,EAAAlB,QAAAjI,KAAAg/B,OAAA1F,EAAApJ,IAAAhuB,KAEAw9B,IAAAv2B,EAAAlB,QAAAy3B,EAAApG,EAAAtJ,UAAA2P,iBAAArG,GACAlwB,EAAAsC,MAAA,YAAA4tB,EAAApJ,IAAAhuB,KAAA,IAAAo3B,EAAAtJ,UAAA,+BAEAsJ,EAAAnC,kBACAuI,GAAApG,EAAAtJ,UAAA2P,gBAUAZ,EAAAjiC,UAAA0iC,WAAA,SAAAxa,EAAAkL,GACA,GAAAwP,GAAAv2B,EAAAlB,QAAAjI,KAAAg/B,OAAA9O,EAAAhuB,KACAw9B,KACAA,KACA1/B,KAAAg/B,OAAA9O,EAAAhuB,MAAAw9B,EAEA,IAAApG,GAAAnwB,EAAAlB,QAAAy3B,EAAA1a,EAAA2a,cAMA,OALArG,IACAlwB,EAAAsC,MAAA,2HAEA4tB,EAAA,GAAAJ,GAAAnJ,KAAA/K,EAAAhlB,KAAAi/B,eAAA/O,GACAwP,EAAA1a,EAAA2a,eAAArG,EACAA,GAMAyF,EAAAjiC,UAAAmzB,gBAAA,SAAAA,GACAjwB,KAAAi/B,eAAAhP,GAEA8O,IAEA95B,GAAA85B,ehC29KS,CACA,CAEH,SAAUtjC,EAAQwJ,EAAStJ,GAEjC,YiCllLAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAuJ,GAAA9J,EAAA,IAMAsJ,GAAAE,OAAA,SAAAy6B,EAAAr+B,GACA,IAAAq+B,EACA,KAAA36B,GAAAG,eAAA7D,IAQA0D,EAAAG,eAAA,SAAA7D,GACA,UAAAoK,OAAA,sBACAlG,EAAAC,UAAAmzB,YACA,6BACAt3B,KjC2mLM,SAAU9F,EAAQwJ,EAAStJ,GAEjC,YkCloLAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgN,GAAA,SAAAc,GAGA,OADA61B,MAAA76B,EAAA,EACA1G,EAAA,EAAmBA,EAAA0L,EAAAzL,OAAgBD,IAAA,CACnC,GAAA+P,GAAArE,EAAA81B,WAAAxhC,EACA+P,GAAA,IACAwxB,EAAA76B,KAAAqJ,EAEAA,EAAA,MACAwxB,EAAA76B,KAAAqJ,GAAA,MACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,KAEA,cAAAA,IACA/P,EAAA,EAAA0L,EAAAzL,QACA,cAAAyL,EAAA81B,WAAAxhC,EAAA,KAEA+P,EAAA,aAAAA,IAAA,UAAArE,EAAA81B,aAAAxhC,IACAuhC,EAAA76B,KAAAqJ,GAAA,OACAwxB,EAAA76B,KAAAqJ,GAAA,UACAwxB,EAAA76B,KAAAqJ,GAAA,SACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,MAGAwxB,EAAA76B,KAAAqJ,GAAA,OACAwxB,EAAA76B,KAAAqJ,GAAA,SACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,KAGA,MAAAwxB,IAQAE,EAAA,SAAAC,GAGA,IADA,GAAAH,MAAAI,EAAA,EAAA5xB,EAAA,EACA4xB,EAAAD,EAAAzhC,QAAA,CACA,GAAA2hC,GAAAF,EAAAC,IACA,IAAAC,EAAA,IACAL,EAAAxxB,KAAAmE,OAAA2tB,aAAAD,OAEA,IAAAA,EAAA,KAAAA,EAAA,KACA,GAAAE,GAAAJ,EAAAC,IACAJ,GAAAxxB,KAAAmE,OAAA2tB,cAAA,GAAAD,IAAA,KAAAE,OAEA,IAAAF,EAAA,KAAAA,EAAA,KAEA,GAAAE,GAAAJ,EAAAC,KACAI,EAAAL,EAAAC,KACAK,EAAAN,EAAAC,KACAM,IAAA,EAAAL,IAAA,OAAAE,IAAA,OAAAC,IAAA,KAAAC,GACA,KACAT,GAAAxxB,KAAAmE,OAAA2tB,aAAA,OAAAI,GAAA,KACAV,EAAAxxB,KAAAmE,OAAA2tB,aAAA,YAAAI,QAEA,CACA,GAAAH,GAAAJ,EAAAC,KACAI,EAAAL,EAAAC,IACAJ,GAAAxxB,KAAAmE,OAAA2tB,cAAA,GAAAD,IAAA,OAAAE,IAAA,KAAAC,IAGA,MAAAR,GAAAnwB,KAAA,IAGAzK,GAAAK,QAMAk7B,eAAA,KAMAC,eAAA,KAMAC,sBAAA,KAMAC,sBAAA,KAMAC,kBAAA,iEAKAC,mBACA,MAAA7gC,MAAA4gC,kBAAA,OAMAE,2BACA,MAAA9gC,MAAA4gC,kBAAA,OAUAG,mBAAA,mBAAAC,MAUA32B,gBAAA,SAAA42B,EAAAC,GACA,IAAA3lC,MAAAkP,QAAAw2B,GACA,KAAAt1B,OAAA,gDAEA3L,MAAAmhC,OAKA,QAJAC,GAAAF,EACAlhC,KAAA0gC,sBACA1gC,KAAAwgC,eACAnZ,KACA/oB,EAAA,EAAuBA,EAAA2iC,EAAA1iC,OAAkBD,GAAA,GACzC,GAAA+iC,GAAAJ,EAAA3iC,GACAgjC,EAAAhjC,EAAA,EAAA2iC,EAAA1iC,OACAgjC,EAAAD,EAAAL,EAAA3iC,EAAA,KACAkjC,EAAAljC,EAAA,EAAA2iC,EAAA1iC,OACAkjC,EAAAD,EAAAP,EAAA3iC,EAAA,KACAojC,EAAAL,GAAA,EACAM,GAAA,EAAAN,IAAA,EAAAE,GAAA,EACAK,GAAA,GAAAL,IAAA,EAAAE,GAAA,EACAI,EAAA,GAAAJ,CACAD,KACAK,EAAA,GACAP,IACAM,EAAA,KAGAva,EAAAhmB,KAAA+/B,EAAAM,GAAAN,EAAAO,GAAAP,EAAAQ,GAAAR,EAAAS,IAEA,MAAAxa,GAAA3X,KAAA,KAUAoyB,aAAA,SAAAb,EAAAC,GAGA,MAAAlhC,MAAA+gC,qBAAAG,EACAa,KAAAd,GAEAjhC,KAAAqK,gBAAAnB,EAAA+3B,GAAAC,IAUAc,aAAA,SAAAf,EAAAC,GAGA,MAAAlhC,MAAA+gC,qBAAAG,EACAF,KAAAC,GAEAlB,EAAA//B,KAAAiiC,wBAAAhB,EAAAC,KAiBAe,wBAAA,SAAAhB,EAAAC,GACAlhC,KAAAmhC,OAKA,QAJAe,GAAAhB,EACAlhC,KAAA2gC,sBACA3gC,KAAAygC,eACApZ,KACA/oB,EAAA,EAAuBA,EAAA2iC,EAAA1iC,QAAkB,CACzC,GAAA8iC,GAAAa,EAAAjB,EAAAkB,OAAA7jC,MACAgjC,EAAAhjC,EAAA2iC,EAAA1iC,OACAgjC,EAAAD,EAAAY,EAAAjB,EAAAkB,OAAA7jC,IAAA,IACAA,CACA,IAAAkjC,GAAAljC,EAAA2iC,EAAA1iC,OACAkjC,EAAAD,EAAAU,EAAAjB,EAAAkB,OAAA7jC,IAAA,KACAA,CACA,IAAA8jC,GAAA9jC,EAAA2iC,EAAA1iC,OACA8jC,EAAAD,EAAAF,EAAAjB,EAAAkB,OAAA7jC,IAAA,EAEA,MADAA,EACA,MAAA+iC,GAAA,MAAAE,GAAA,MAAAE,GAAA,MAAAY,EACA,KAAA12B,QAEA,IAAA+1B,GAAAL,GAAA,EAAAE,GAAA,CAEA,IADAla,EAAAhmB,KAAAqgC,GACA,IAAAD,EAAA,CACA,GAAAE,GAAAJ,GAAA,MAAAE,GAAA,CAEA,IADApa,EAAAhmB,KAAAsgC,GACA,IAAAU,EAAA,CACA,GAAAT,GAAAH,GAAA,MAAAY,CACAhb,GAAAhmB,KAAAugC,KAIA,MAAAva,IAOA8Z,MAAA,WACA,IAAAnhC,KAAAwgC,eAAA,CACAxgC,KAAAwgC,kBACAxgC,KAAAygC,kBACAzgC,KAAA0gC,yBACA1gC,KAAA2gC,wBAEA,QAAAriC,GAAA,EAA2BA,EAAA0B,KAAA6gC,aAAAtiC,OAA8BD,IACzD0B,KAAAwgC,eAAAliC,GAAA0B,KAAA6gC,aAAAsB,OAAA7jC,GACA0B,KAAAygC,eAAAzgC,KAAAwgC,eAAAliC,MACA0B,KAAA0gC,sBAAApiC,GAAA0B,KAAA8gC,qBAAAqB,OAAA7jC,GACA0B,KAAA2gC,sBAAA3gC,KAAA0gC,sBAAApiC,MAEAA,GAAA0B,KAAA4gC,kBAAAriC,SACAyB,KAAAygC,eAAAzgC,KAAA8gC,qBAAAqB,OAAA7jC,MACA0B,KAAA2gC,sBAAA3gC,KAAA6gC,aAAAsB,OAAA7jC,UAWA2G,EAAAO,aAAA,SAAAwE,GACA,GAAAC,GAAAf,EAAAc,EACA,OAAA/E,GAAAK,OAAA+E,gBAAAJ,GAAA,IAWAhF,EAAAM,aAAA,SAAAyE,GACA,IACA,MAAA/E,GAAAK,OAAA08B,aAAAh4B,GAAA,GAEA,MAAA+E,GACAuoB,QAAA51B,MAAA,wBAAAqN,GAEA,clC2pLM,SAAUtT,EAAQwJ,EAAStJ,GAEjC,YmCz7LA,SAAAgL,GAAAqD,GACA,MAAAs4B,MAAAC,MAAAv4B,GAQA,QAAApD,GAAAuF,GACA,MAAAm2B,MAAA17B,UAAAuF,GAjBApQ,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAU9C+I,EAAA0B,WASA1B,EAAA2B,anCw9LM,SAAUnL,EAAQwJ,EAAStJ,GAEjC,YoC7+LAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAE9C+I,EAAAoC,SAAA,SAAAuG,EAAAnP,GACA,MAAA1C,QAAAe,UAAA0f,eAAA/f,KAAAmR,EAAAnP,IAEAwG,EAAAgD,QAAA,SAAA2F,EAAAnP,GACA,GAAA1C,OAAAe,UAAA0f,eAAA/f,KAAAmR,EAAAnP,GACA,MAAAmP,GAAAnP,IAUAwG,EAAAyC,QAAA,SAAAkG,EAAApB,GACA,OAAA/N,KAAAmP,GACA7R,OAAAe,UAAA0f,eAAA/f,KAAAmR,EAAAnP,IACA+N,EAAA/N,EAAAmP,EAAAnP,KAUAwG,EAAAsC,OAAA,SAAAi7B,EAAAC,GAIA,MAHAx9B,GAAAyC,QAAA+6B,EAAA,SAAAhkC,EAAAvC,GACAsmC,EAAA/jC,GAAAvC,IAEAsmC,GAOAv9B,EAAAmC,MAAA,SAAAwG,GACA,MAAA3I,GAAAsC,UAA4BqG,IAS5B3I,EAAA8C,gBAAA,SAAA6F,GACA,uBAAAA,IAAA,OAAAA,GAEA3I,EAAA6C,QAAA,SAAA8F,GACA,OAAAnP,KAAAmP,GACA,QAEA,WAEA3I,EAAA2C,SAAA,SAAAgG,GACA,GAAA80B,GAAA,CACA,QAAAjkC,KAAAmP,GACA80B,GAEA,OAAAA,IAEAz9B,EAAA+C,IAAA,SAAA4F,EAAAoB,EAAA2zB,GACA,GAAAC,KACA,QAAAnkC,KAAAmP,GACAg1B,EAAAnkC,GAAAuQ,EAAAvS,KAAAkmC,EAAA/0B,EAAAnP,KAAAmP,EAEA,OAAAg1B,IAEA39B,EAAAuC,QAAA,SAAAoG,EAAApB,EAAAq2B,GACA,OAAApkC,KAAAmP,GACA,GAAApB,EAAA/P,KAAAomC,EAAAj1B,EAAAnP,KAAAmP,GACA,MAAAnP,IAKAwG,EAAAwC,UAAA,SAAAmG,EAAApB,EAAAq2B,GACA,GAAApkC,GAAAwG,EAAAuC,QAAAoG,EAAApB,EAAAq2B,EACA,OAAApkC,IAAAmP,EAAAnP,IAEAwG,EAAA0C,UAAA,SAAAiG,GACA,OAAAnP,KAAAmP,GACA,MAAAnP,IAGAwG,EAAA4C,UAAA,SAAA+F,GACA,GAAAg1B,MACAtkC,EAAA,CACA,QAAAG,KAAAmP,GACAg1B,EAAAtkC,KAAAsP,EAAAnP,EAEA,OAAAmkC,IAUA39B,EAAAqC,MAAA,SAAAsG,EAAApB,GACA,OAAA/N,KAAAmP,GACA,GAAA7R,OAAAe,UAAA0f,eAAA/f,KAAAmR,EAAAnP,KACA+N,EAAA/N,EAAAmP,EAAAnP,IACA,QAIA,YpCsgMM,SAAUhD,EAAQwJ,EAAStJ,GAEjC,YqC3nMAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAwN,EAAAxN,EAAA,KACAkjC,EAAAljC,EAAA,KACAonB,EAAApnB,EAAA,KACAmnC,EAAAnnC,EAAA,KACAu9B,EAAAv9B,EAAA,KACAonC,EAAApnC,EAAA,KACAyN,EAAAzN,EAAA,KACA+M,EAAA/M,EAAA,KAKAu8B,EAAA,WAKA,QAAAA,GAAA8K,GACAhjC,KAAAgjC,QACAA,YAAA9J,GAAAnJ,MACA5mB,EAAAuC,MAAA,wEAGA1L,KAAA+uB,MAAA,GAAA+T,GAAAzJ,UAAA2J,EAAAjgB,EAAArR,KAAA0kB,OACAp2B,KAAAijC,SAAA,GAAAC,GAAAljC,MAmEA,MAjEAjE,QAAAuB,eAAA46B,EAAAp7B,UAAA,OACAyO,IAAA,WACA,MAAAvL,MAAAgjC,MAAA9S,KAEAjzB,YAAA,EACAE,cAAA,IAEA+6B,EAAAp7B,UAAAsE,IAAA,SAAAuP,GAGA,MAFA3Q,MAAAmjC,cAAA,OACA/5B,EAAAR,iBAAA,mBAAA1I,UAAA3B,QACAoS,YAAAmyB,GAAAzJ,UACAr5B,KAAAojC,WAAAzyB,EAAAZ,gBAEA8T,KAAAlT,EAAA3Q,KAAA+uB,MAAAlc,MAAAlC,GAAA3Q,KAAA+uB,OASAmJ,EAAAp7B,UAAAsmC,WAAA,SAAA9D,GAEA,GAAA+D,GAAA,qBACArjC,MAAAmjC,cAAAE,GACAj6B,EAAAR,iBAAAy6B,EAAA,IAAAnjC,UAAA3B,OACA,IAAA+kC,GAAAzE,EAAAU,cAAAD,EACA52B,GAAAoc,YAAAue,EAAA,EAAAC,EACA,IAAAte,GAAAse,EAAAte,QAUA,OATAA,GAAAC,OAAAjlB,KAAAgjC,MAAAhT,UAAA/K,MACA9b,EAAAuC,MAAA23B,EACA,2DAEAre,EAAAC,KACA,iBACAjlB,KAAAgjC,MAAAhT,UAAA/K,KACA,KAEAjlB,KAAAoB,IAAAkiC,EAAA3yB,KAAAZ,aAKAmoB,EAAAp7B,UAAAqmC,cAAA,SAAAE,GACA,OAAArjC,KAAAgjC,OACA75B,EAAAuC,MAAA,eAAA23B,EAAA,4BAIAnL,EAAAp7B,UAAAymC,UAAA,WACAn6B,EAAAR,iBAAA,yBAAA1I,UAAA3B,QACAyB,KAAAmjC,cAAA,aACAnjC,KAAAgjC,MAAA7L,aAEAe,EAAAp7B,UAAA0mC,SAAA,WACAp6B,EAAAR,iBAAA,wBAAA1I,UAAA3B,QACAyB,KAAAmjC,cAAA,YACAnjC,KAAAgjC,MAAArjB,UAEAuY,EAAAuL,aACAC,WACAC,MAAA,cAGAzL,IAEAjzB,GAAAizB,UACA,IAAAgL,GAAA,WAEA,QAAAA,GAAA/hC,GACAnB,KAAAmB,WAgBA,MAbA+hC,GAAApmC,UAAA8mC,OAAA,WACA,MAAA/uB,GAAA2I,UAAAxd,SAAA,qBACA,MAAA6U,GAAAwJ,YAAAre,KAAA,SAAA6jC,GAOA,MANA7jC,MAAAmB,SAAAgiC,cAAA,UACAJ,EAAAhE,YAAAG,cAAAO,WAAAz/B,KAAAmB,SAAA6hC,OACAhjC,KAAAmB,SAAA6hC,MAAA,KACAhjC,KAAAmB,SAAA4tB,MAAA,KACA/uB,KAAAmB,SAAA8hC,SAAA,KACAjjC,KAAAmB,SAAA,MACA,QAIA+hC,IAEAj+B,GAAAi+B,qBrCmpMM,SAAUznC,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBwgB,EAAEzgB,EAAqB,IAAK,WAAa,MAAOooC,KACpEnoC,EAAoBwgB,EAAEzgB,EAAqB,IAAK,WAAa,MAAOsP,KsC5xMnGrP,EAAAwgB,EAAAzgB,EAAA,qBAAAmO,IAkBA,IAYAmB,GAZA84B,MAaA,SAAA94B,GACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,oBACCA,UAID,IAAA+4B,GAAA/4B,EAAAg5B,KAMAC,EAAA,SAAA7nC,EAAA8nC,GAEA,OADA/jC,MACAqK,EAAA,EAAoBA,EAAAtK,UAAA3B,OAAuBiM,IAC3CrK,EAAAqK,EAAA,GAAAtK,UAAAsK,EAEA,MAAA05B,EAAA9nC,EAAA2O,UAAA,CAEA,GAAAyb,IAAA,GAAAD,OAAA4d,aACA,QAAAD,GAOA,IAAAl5B,GAAAo5B,MAGA,IAAAp5B,GAAAC,QACAqsB,QAAApsB,IAAA5K,MAAAg3B,SAAA,IAAA9Q,EAAA,MAAApqB,EAAA8F,KAAA,KAAA1G,OAAA2E,GACA,MACA,KAAA6K,GAAAg5B,KACA1M,QAAA+M,KAAA/jC,MAAAg3B,SAAA,IAAA9Q,EAAA,MAAApqB,EAAA8F,KAAA,KAAA1G,OAAA2E,GACA,MACA,KAAA6K,GAAAs5B,KACAhN,QAAA1rB,KAAAtL,MAAAg3B,SAAA,IAAA9Q,EAAA,MAAApqB,EAAA8F,KAAA,KAAA1G,OAAA2E,GACA,MACA,KAAA6K,GAAAu5B,MACAjN,QAAA51B,MAAApB,MAAAg3B,SAAA,IAAA9Q,EAAA,MAAApqB,EAAA8F,KAAA,KAAA1G,OAAA2E,GACA,MACA,SACA,SAAAwL,OAAA,8DAAAu4B,EAAA,QAGAr6B,EAAA,WAOA,QAAAA,GAAA3H,GACAlC,KAAAkC,OAIAlC,KAAAwkC,UAAAT,EAIA/jC,KAAAykC,YAAAR,EAIAH,EAAAziC,KAAArB,MAkEA,MAhEAjE,QAAAuB,eAAAuM,EAAA/M,UAAA,YACAyO,IAAA,WACA,MAAAvL,MAAAwkC,WAEAn5B,IAAA,SAAAmD,GACA,KAAAA,IAAAxD,IACA,SAAA1O,WAAA,uCAEA0D,MAAAwkC,UAAAh2B,GAEAvR,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAAuM,EAAA/M,UAAA,cACAyO,IAAA,WACA,MAAAvL,MAAAykC,aAEAp5B,IAAA,SAAAmD,GACA,sBAAAA,GACA,SAAAlS,WAAA,oDAEA0D,MAAAykC,YAAAj2B,GAEAvR,YAAA,EACAE,cAAA,IAKA0M,EAAA/M,UAAA4nC,MAAA,WAEA,OADAvkC,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAxK,MAAAykC,YAAAnkC,MAAAN,WAAAgL,EAAAo5B,OAAA5oC,OAAA2E,KAEA0J,EAAA/M,UAAAoO,IAAA,WAEA,OADA/K,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAxK,MAAAykC,YAAAnkC,MAAAN,WAAAgL,EAAAC,SAAAzP,OAAA2E,KAEA0J,EAAA/M,UAAAunC,KAAA,WAEA,OADAlkC,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAxK,MAAAykC,YAAAnkC,MAAAN,WAAAgL,EAAAg5B,MAAAxoC,OAAA2E,KAEA0J,EAAA/M,UAAA8O,KAAA,WAEA,OADAzL,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAxK,MAAAykC,YAAAnkC,MAAAN,WAAAgL,EAAAs5B,MAAA9oC,OAAA2E,KAEA0J,EAAA/M,UAAA4E,MAAA,WAEA,OADAvB,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAxK,MAAAykC,YAAAnkC,MAAAN,WAAAgL,EAAAu5B,OAAA/oC,OAAA2E,KAEA0J,MtCuyMM,SAAUpO,EAAQwJ,EAAStJ,GAEjC,YuCz7MA,SAAAgpC,GAAAtyB,GAGA,OAFAuyB,GAAA,GACAhyB,EAAAP,EAAAP,MAAA,KACAxT,EAAA,EAAmBA,EAAAsU,EAAArU,OAAmBD,IACtC,GAAAsU,EAAAtU,GAAAC,OAAA,GACA,GAAAsmC,GAAAjyB,EAAAtU,EACA,KACAumC,EAAAC,mBAAAD,EAAAvhB,QAAA,YAEA,MAAAvU,IACA61B,GAAA,IAAAC,EAGA,MAAAD,GAMA,QAAAG,GAAAC,GACA,GAAAC,KACAD,GAAAE,WAAA,OACAF,IAAA12B,UAAA,GAEA,QAAA9D,GAAA,EAAAq5B,EAAAmB,EAAAlzB,MAAA,KAAiDtH,EAAAq5B,EAAAtlC,OAAgBiM,IAAA,CACjE,GAAA26B,GAAAtB,EAAAr5B,EACA,QAAA26B,EAAA5mC,OAAA,CAGA,GAAA6mC,GAAAD,EAAArzB,MAAA,IACA,KAAAszB,EAAA7mC,OACA0mC,EAAAH,mBAAAM,EAAA,KAAAN,mBAAAM,EAAA,IAGAj8B,EAAAyC,KAAA,0BAAAu5B,EAAA,eAAAH,EAAA,MAGA,MAAAC,GA7CAlpC,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6mB,GAAApnB,EAAA,KACA0pC,EAAA1pC,EAAA,KACAwN,EAAAxN,EAAA,IAiDAsJ,GAAAs6B,cAAA,SAAA+F,GACA,GAAAvgB,GAAA9f,EAAAsgC,SAAAD,GAAApgB,EAAAH,EAAAygB,SACA,cAAAzgB,EAAA0gB,QACAt8B,EAAAuC,MAAAqZ,EAAAE,KACA,8EAIAC,GAAA,aAAAA,GACA,cAAAH,EAAA0gB,QACAt8B,EAAAuC,MAAA,gFAEAqZ,EAAAmO,QACA/pB,EAAA0C,oBAEA,IAAA65B,GAAA,OAAA3gB,EAAA4gB,QAAA,QAAA5gB,EAAA4gB,MACA,QACA3gB,SAAA,GAAAqgB,GAAAO,SAAA7gB,EAAAE,KAAAF,EAAAmO,OAAAhO,EAAAwgB,GACA/0B,KAAA,GAAAoS,GAAArR,KAAAqT,EAAA1S,cAQApN,EAAAsgC,SAAA,SAAAD,GAEA,GAAArgB,GAAA,GAAAwgB,EAAA,GAAAD,EAAA,GAAAnzB,EAAA,GAEA6gB,GAAA,EAAAyS,EAAA,QAAAlmC,EAAA,GAEA,qBAAA6lC,GAAA,CAEA,GAAAO,GAAAP,EAAAv5B,QAAA,KACA85B,IAAA,IACAF,EAAAL,EAAAh3B,UAAA,EAAAu3B,EAAA,GACAP,IAAAh3B,UAAAu3B,EAAA,GAGA,IAAAC,GAAAR,EAAAv5B,QAAA,MACA,IAAA+5B,IACAA,EAAAR,EAAA/mC,OAEA,IAAAwnC,GAAAT,EAAAv5B,QAAA,MACA,IAAAg6B,IACAA,EAAAT,EAAA/mC,QAEA0mB,EAAAqgB,EAAAh3B,UAAA,EAAAvB,KAAAuC,IAAAw2B,EAAAC,IACAD,EAAAC,IAEA1zB,EAAAsyB,EAAAW,EAAAh3B,UAAAw3B,EAAAC,IAEA,IAAAC,GAAAjB,EAAAO,EAAAh3B,UAAAvB,KAAAuC,IAAAg2B,EAAA/mC,OAAAwnC,IAEAF,GAAA5gB,EAAAlZ,QAAA,KACA85B,GAAA,GACA3S,EAAA,UAAAyS,GAAA,QAAAA,EACAlmC,EAAAoQ,SAAAoV,EAAA3W,UAAAu3B,EAAA,QAGAA,EAAAP,EAAA/mC,MAEA,IAAA0nC,GAAAhhB,EAAAnT,MAAA,IACA,KAAAm0B,EAAA1nC,QAEAknC,EAAAQ,EAAA,GACAT,EAAAS,EAAA,GAAAj2B,eAEA,IAAAi2B,EAAA1nC,OACAknC,EAAAQ,EAAA,GAEA,cAAAA,EAAA,GAAAxzB,MAAA,EAAAozB,GAAA71B,gBACAy1B,EAAA,aAGA,KAAAD,GAAA,MAAAQ,KACAR,EAAAQ,EAAA,IAGA,OACA/gB,OACAxlB,OACAgmC,SACAD,YACAtS,SACAyS,SACAtzB,gBvC29MM,SAAU5W,EAAQwJ,EAAStJ,GAEjC,YwCxmNAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA8N,EAAA9N,EAAA,KACAuqC,EAAAvqC,EAAA,KAMAiqC,EAAA,WAQA,QAAAA,GAAA3gB,EAAAiO,EAAAhO,EAAAwgB,EAAAS,OACA,KAAAA,IAAwCA,EAAA,IACxCnmC,KAAAkzB,SACAlzB,KAAAklB,YACAllB,KAAA0lC,gBACA1lC,KAAAmmC,iBACAnmC,KAAAilB,OAAAjV,cACAhQ,KAAAylC,OAAAzlC,KAAAilB,KAAAnV,OAAA9P,KAAAilB,KAAAlZ,QAAA,QACA/L,KAAAomC,aAAA38B,EAAAkiB,kBAAApgB,IAAA,QAAA0Z,IAAAjlB,KAAAilB,KAgEA,MA9DA2gB,GAAA9oC,UAAAupC,gBAAA,WACA,MAAArmC,MAAAilB,OAAAjlB,KAAAomC,cAAApmC,KAAAsmC,gBAEAV,EAAA9oC,UAAAypC,gBAAA,WACA,aAAAvmC,KAAAomC,aAAAt2B,OAAA,MAEA81B,EAAA9oC,UAAA0pC,WAAA,WACA,8BAAAxmC,KAAAylC,QAEAG,EAAA9oC,UAAAwpC,aAAA,WACA,yBAAAtmC,KAAAylC,QAAA,wBAAAzlC,KAAAylC,QAEAG,EAAA9oC,UAAA2pC,WAAA,SAAAC,GACAA,IAAA1mC,KAAAomC,eACApmC,KAAAomC,aAAAM,EACA1mC,KAAAumC,mBACA98B,EAAAkiB,kBAAAtgB,IAAA,QAAArL,KAAAilB,KAAAjlB,KAAAomC,gBAUAR,EAAA9oC,UAAA6pC,cAAA,SAAAnjC,EAAAojC,GACAz9B,EAAAhE,OAAA,iBAAA3B,GAAA,8BACA2F,EAAAhE,OAAA,iBAAAyhC,GAAA,+BACA,IAAAC,EACA,IAAArjC,IAAA0iC,EAAA/Z,UACA0a,GACA7mC,KAAAkzB,OAAA,kBAAAlzB,KAAAomC,aAAA,YAEA,IAAA5iC,IAAA0iC,EAAA9Z,aAKA,SAAAzgB,OAAA,4BAAAnI,EAJAqjC,IACA7mC,KAAAkzB,OAAA,sBAAAlzB,KAAAomC,aAAA,QAKApmC,KAAAqmC,oBACAO,EAAA,GAAA5mC,KAAAklB,UAEA,IAAA4hB,KAIA,OAHA19B,GAAA1B,QAAAk/B,EAAA,SAAAnoC,EAAAvC,GACA4qC,EAAAzlC,KAAA5C,EAAA,IAAAvC,KAEA2qC,EAAAC,EAAAp3B,KAAA,MAGAk2B,EAAA9oC,UAAAiT,SAAA,WACA,GAAA/F,GAAAhK,KAAA2/B,aAIA,OAHA3/B,MAAAmmC,iBACAn8B,GAAA,IAAAhK,KAAAmmC,eAAA,KAEAn8B,GAGA47B,EAAA9oC,UAAA6iC,YAAA,WACA,OAAA3/B,KAAAkzB,OAAA,sBAAAlzB,KAAAilB,MAEA2gB,IAEA3gC,GAAA2gC,YxCgoNM,SAAUnqC,EAAQwJ,EAAStJ,GAEjC,YyC9tNAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACA+M,EAAA/M,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KAIAo/B,EAAA,WAKA,QAAAA,GAAAiI,EAAAjf,GACA/jB,KAAAgjC,QACAhjC,KAAA+jB,QA8EA,MAxEAgX,GAAAj+B,UAAAiqC,OAAA,SAAAxU,GACAppB,EAAAP,iBAAA,0BAAA1I,UAAA3B,QACA4K,EAAAN,iBAAA,wBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAgjC,MAAA3M,mBAAAr2B,KAAA+jB,MAAA+V,EAAAC,aAAAxH,IACAuH,EAAAE,SAMAe,EAAAj+B,UAAAwO,OAAA,SAAAinB,GACAppB,EAAAP,iBAAA,0BAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,sBAAA7kB,KAAA+jB,OACA5a,EAAAN,iBAAA,wBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAgjC,MAAAzM,gBAAAv2B,KAAA+jB,MAAA,KAAA+V,EAAAC,aAAAxH,IACAuH,EAAAE,SAOAe,EAAAj+B,UAAAuO,IAAA,SAAAnP,EAAAq2B,GACAppB,EAAAP,iBAAA,uBAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,mBAAA7kB,KAAA+jB,OACArb,EAAA+a,wBAAA,qBAAAvnB,EAAA8D,KAAA+jB,OAAA,GACA5a,EAAAN,iBAAA,qBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAgjC,MAAAzM,gBAAAv2B,KAAA+jB,MAAA7nB,EAAA49B,EAAAC,aAAAxH,IACAuH,EAAAE,SAQAe,EAAAj+B,UAAA23B,gBAAA,SAAAv4B,EAAAsnB,EAAA+O,GACAppB,EAAAP,iBAAA,mCAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,+BAAA7kB,KAAA+jB,OACArb,EAAA+a,wBAAA,iCAAAvnB,EAAA8D,KAAA+jB,OAAA,GACArb,EAAA6b,iBAAA,iCAAAf,GAAA,GACAra,EAAAN,iBAAA,iCAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAgjC,MAAAtM,4BAAA12B,KAAA+jB,MAAA7nB,EAAAsnB,EAAAsW,EAAAC,aAAAxH,IACAuH,EAAAE,SAOAe,EAAAj+B,UAAAoN,OAAA,SAAA+vB,EAAA1H,GAGA,GAFAppB,EAAAP,iBAAA,0BAAA1I,UAAA3B,QACAmK,EAAAmc,qBAAA,sBAAA7kB,KAAA+jB,OACAxoB,MAAAkP,QAAAwvB,GAAA,CAEA,OADAC,MACA57B,EAAA,EAA2BA,EAAA27B,EAAA17B,SAA0BD,EACrD47B,EAAA,GAAA57B,GAAA27B,EAAA37B,EAEA27B,GAAAC,EACA9wB,EAAAwC,KAAA,gOAGAlD,EAAA4b,6BAAA,wBAAA2V,EAAAj6B,KAAA+jB,OAAA,GACA5a,EAAAN,iBAAA,wBAAA0pB,GAAA,EACA,IAAAuH,GAAA,GAAAzwB,GAAArD,QAEA,OADAhG,MAAAgjC,MAAArM,mBAAA32B,KAAA+jB,MAAAkW,EAAAH,EAAAC,aAAAxH,IACAuH,EAAAE,SAEAe,IAEA91B,GAAA81B,gBzCsvNM,SAAUt/B,EAAQwJ,EAAStJ,GAEjC,Y0Cv1NAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAWA++B,GAXA9xB,EAAAxN,EAAA,KACAkb,EAAAlb,EAAA,KACAib,EAAAjb,EAAA,KACAqrC,EAAArrC,EAAA,KACAsrC,EAAAtrC,EAAA,KACAyN,EAAAzN,EAAA,KACAonB,EAAApnB,EAAA,KACA+M,EAAA/M,EAAA,KACA0N,EAAA1N,EAAA,KACAurC,EAAAvrC,EAAA,KACA2N,EAAA3N,EAAA,KAQAq/B,EAAA,WACA,QAAAA,GAAA1B,EAAA3oB,EAAAw2B,EAAAC,GACApnC,KAAAs5B,OACAt5B,KAAA2Q,OACA3Q,KAAAmnC,eACAnnC,KAAAonC,iBA6cA,MA3cArrC,QAAAuB,eAAA09B,EAAA,0BACAzvB,IAAA,WAEA,MADApC,GAAAhE,OAAA81B,EAAA,oCACAA,GAEA5vB,IAAA,SAAAmD,GACAysB,EAAAzsB,GAEAvR,YAAA,EACAE,cAAA,IAOA69B,EAAAqM,wBAAA,SAAAT,GACA,GAAAU,GAAA,KACAC,EAAA,IAOA,IANAX,EAAAY,aACAF,EAAAV,EAAAa,sBAEAb,EAAAc,WACAH,EAAAX,EAAAe,oBAEAf,EAAAtI,aAAAznB,EAAAwE,UAAA,CACA,GAAAusB,GAAA,mGAEAC,EAAA,uGAEA,IAAAjB,EAAAY,WAAA,CAEA,GADAZ,EAAAkB,qBACA1+B,EAAA+D,SACA,SAAAxB,OAAAi8B,EAEA,qBAAAN,GACA,SAAA37B,OAAAk8B,GAGA,GAAAjB,EAAAc,SAAA,CAEA,GADAd,EAAAmB,mBACA3+B,EAAAgE,SACA,SAAAzB,OAAAi8B,EAEA,qBAAAL,GACA,SAAA57B,OAAAk8B,QAIA,IAAAjB,EAAAtI,aAAA1nB,EAAAJ,gBACA,SAAA8wB,IAAA5+B,EAAA6a,gBAAA+jB,IACA,MAAAC,IAAA7+B,EAAA6a,gBAAAgkB,GACA,SAAA57B,OAAA,qKAOA,IAFAxC,EAAAhE,OAAAyhC,EAAAtI,oBAAA2I,GAAAe,WACApB,EAAAtI,aAAA0I,EAAAiB,YAAA,uBACA,MAAAX,GAAA,iBAAAA,IACA,MAAAC,GAAA,iBAAAA,GACA,SAAA57B,OAAA,0FAUAqvB,EAAAkN,eAAA,SAAAtB,GACA,GAAAA,EAAAY,YACAZ,EAAAc,UACAd,EAAAuB,aACAvB,EAAAwB,mBACA,SAAAz8B,OAAA,uGAQAqvB,EAAAl+B,UAAAurC,+BAAA,SAAA3kB,GACA,QAAA1jB,KAAAonC,eACA,SAAAz7B,OAAA+X,EAAA,gDAMAsX,EAAAl+B,UAAAwrC,eAAA,WACA,MAAAtoC,MAAAmnC,cAKAnM,EAAAl+B,UAAA++B,OAAA,WAKA,MAJAxyB,GAAAT,iBAAA,gBAAA1I,UAAA3B,QAIA,GAAAy8B,GAAAC,uBAAAj7B,KAAAs5B,KAAAt5B,KAAA2Q,OASAqqB,EAAAl+B,UAAAyrC,GAAA,SAAA9jB,EAAA/V,EAAA85B,EAAA75B,GACAtF,EAAAT,iBAAA,eAAA1I,UAAA3B,QACAmK,EAAA8b,kBAAA,aAAAC,GAAA,GACApb,EAAAR,iBAAA,aAAA6F,GAAA,EACA,IAAA+5B,GAAAzN,EAAA0N,yBAAA,WAAAF,EAAA75B,EACA,cAAA8V,EACAzkB,KAAA2oC,aAAAj6B,EAAA+5B,EAAA1B,OAAA0B,EAAA95B,aAEA,CACA,GAAAi6B,KACAA,GAAAnkB,GAAA/V,EACA1O,KAAA6oC,aAAAD,EAAAH,EAAA1B,OAAA0B,EAAA95B,SAEA,MAAAD,IAQAssB,EAAAl+B,UAAA6rC,aAAA,SAAAj6B,EAAAo6B,EAAAn6B,GACA,GAAAo6B,GAAA,GAAA7B,GAAA8B,uBAAAt6B,EAAAo6B,GAAA,KAAAn6B,GAAA,KACA3O,MAAAs5B,KAAAzC,yBAAA72B,KAAA+oC,IAQA/N,EAAAl+B,UAAA+rC,aAAA,SAAAD,EAAAE,EAAAn6B,GACA,GAAAo6B,GAAA,GAAA7B,GAAA+B,uBAAAL,EAAAE,EAAAn6B,EACA3O,MAAAs5B,KAAAzC,yBAAA72B,KAAA+oC,IAOA/N,EAAAl+B,UAAAosC,IAAA,SAAAzkB,EAAA/V,EAAAC,GACAtF,EAAAT,iBAAA,gBAAA1I,UAAA3B,QACAmK,EAAA8b,kBAAA,cAAAC,GAAA,GACApb,EAAAR,iBAAA,cAAA6F,GAAA,GACArF,EAAAP,sBAAA,cAAA6F,GAAA,EACA,IAAAo6B,GAAA,KACAH,EAAA,IACA,cAAAnkB,EAAA,CACA,GAAA0kB,GAAAz6B,GAAA,IACAq6B,GAAA,GAAA7B,GAAA8B,uBAAAG,EAAA,KAAAx6B,GAAA,UAEA8V,KACA/V,IACAk6B,KACAA,EAAAnkB,GAAA/V,GAEAq6B,EAAA,GAAA7B,GAAA+B,uBAAAL,EAAA,KAAAj6B,GAAA,MAEA3O,MAAAs5B,KAAArC,4BAAAj3B,KAAA+oC,IAUA/N,EAAAl+B,UAAAssC,KAAA,SAAA3kB,EAAA4kB,EAAAC,EAAA36B,GACA,GAAA7O,GAAAE,IACAqJ,GAAAT,iBAAA,iBAAA1I,UAAA3B,QACAmK,EAAA8b,kBAAA,eAAAC,GAAA,GACApb,EAAAR,iBAAA,eAAAwgC,GAAA,EACA,IAAAZ,GAAAzN,EAAA0N,yBAAA,aAAAY,EAAA36B,GAKA46B,GAAA,EACAzP,EAAA,GAAAxwB,GAAAtD,QAEA8zB,GAAAE,QAAAv4B,MAAA,aACA,IAAA+nC,GAAA,SAAA3gB,GAGA0gB,IACAA,GAAA,EACAzpC,EAAAopC,IAAAzkB,EAAA+kB,GACAH,GACAA,EAAAl+B,KAAAs9B,EAAA95B,SAAAka,GAEAiR,EAAAhc,QAAA+K,IAUA,OAPA7oB,MAAAuoC,GAAA9jB,EAAA+kB,EACA,SAAAC,GACA3pC,EAAAopC,IAAAzkB,EAAA+kB,GACAf,EAAA1B,QACA0B,EAAA1B,OAAA57B,KAAAs9B,EAAA95B,SAAA86B,GACA3P,EAAA/b,OAAA0rB,KAEA3P,EAAAE,SAOAgB,EAAAl+B,UAAA4sC,aAAA,SAAAC,GAEA,GADAtgC,EAAAT,iBAAA,yBAAA1I,UAAA3B,QACA,iBAAAorC,IACA58B,KAAAC,MAAA28B,QACAA,GAAA,EACA,SAAAh+B,OAAA,iEAEA,IAAA3L,KAAAmnC,aAAAgB,WACA,SAAAx8B,OAAA,sGAGA,WAAAqvB,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAA3Q,KAAAmnC,aAAAuC,aAAAC,GAAA3pC,KAAAonC,iBAOApM,EAAAl+B,UAAA8sC,YAAA,SAAAD,GAEA,GADAtgC,EAAAT,iBAAA,wBAAA1I,UAAA3B,QACA,iBAAAorC,IACA58B,KAAAC,MAAA28B,QACAA,GAAA,EACA,SAAAh+B,OAAA,gEAEA,IAAA3L,KAAAmnC,aAAAgB,WACA,SAAAx8B,OAAA,qGAGA,WAAAqvB,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAA3Q,KAAAmnC,aAAAyC,YAAAD,GAAA3pC,KAAAonC,iBAOApM,EAAAl+B,UAAA+sC,aAAA,SAAAl5B,GAEA,GADAtH,EAAAT,iBAAA,yBAAA1I,UAAA3B,QACA,SAAAoS,EACA,SAAAhF,OAAA,0EAEA,kBAAAgF,EACA,SAAAhF,OAAA,oFAEA,eAAAgF,EACA,SAAAhF,OAAA,8EAEAjD,GAAAic,mBAAA,uBAAAhU,GAAA,GACA3Q,KAAAqoC,+BAAA,qBACA,IAAAyB,GAAA,GAAA/mB,GAAArR,KAAAf,EACA,IAAAm5B,EAAAhiC,UACA,SAAA6D,OAAA,oFAEA,IAAAgO,GAAA,GAAAstB,GAAAe,UAAA8B,GACAC,EAAA/pC,KAAAmnC,aAAA6C,QAAArwB,EAEA,OADAqhB,GAAAqM,wBAAA0C,GACA,GAAA/O,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,GAAA,IAMA/O,EAAAl+B,UAAAmtC,WAAA,WACA5gC,EAAAT,iBAAA,uBAAA1I,UAAA3B,QACAyB,KAAAqoC,+BAAA,mBACA,IAAA0B,GAAA/pC,KAAAmnC,aAAA6C,QAAAnzB,EAAAwE,UAEA,OADA2f,GAAAqM,wBAAA0C,GACA,GAAA/O,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,GAAA,IAMA/O,EAAAl+B,UAAAotC,gBAAA,WACA7gC,EAAAT,iBAAA,4BAAA1I,UAAA3B,QACAyB,KAAAqoC,+BAAA,wBACA,IAAA0B,GAAA/pC,KAAAmnC,aAAA6C,QAAApzB,EAAAJ,eAEA,OADAwkB,GAAAqM,wBAAA0C,GACA,GAAA/O,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,GAAA,IAMA/O,EAAAl+B,UAAAqtC,aAAA,WACA9gC,EAAAT,iBAAA,yBAAA1I,UAAA3B,QACAyB,KAAAqoC,+BAAA,qBACA,IAAA0B,GAAA/pC,KAAAmnC,aAAA6C,QAAAhD,EAAAiB,YAEA,OADAjN,GAAAqM,wBAAA0C,GACA,GAAA/O,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,GAAA,IAOA/O,EAAAl+B,UAAAstC,QAAA,SAAAluC,EAAAgG,OACA,KAAAhG,IAA+BA,EAAA,MAC/BmN,EAAAT,iBAAA,oBAAA1I,UAAA3B,QACAmK,EAAA+a,wBAAA,kBAAAvnB,EAAA8D,KAAA2Q,MAAA,GACAjI,EAAAgc,YAAA,kBAAAxiB,GAAA,EACA,IAAA6nC,GAAA/pC,KAAAmnC,aAAAiD,QAAAluC,EAAAgG,EAGA,IAFA84B,EAAAkN,eAAA6B,GACA/O,EAAAqM,wBAAA0C,GACA/pC,KAAAmnC,aAAAK,WACA,SAAA77B,OAAA,yFAQA,YAJAkY,KAAA3nB,IACAA,EAAA,KACAgG,EAAA,MAEA,GAAA84B,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,EAAA/pC,KAAAonC,iBAOApM,EAAAl+B,UAAAutC,MAAA,SAAAnuC,EAAAgG,OACA,KAAAhG,IAA+BA,EAAA,MAC/BmN,EAAAT,iBAAA,kBAAA1I,UAAA3B,QACAmK,EAAA+a,wBAAA,gBAAAvnB,EAAA8D,KAAA2Q,MAAA,GACAjI,EAAAgc,YAAA,gBAAAxiB,GAAA,EACA,IAAA6nC,GAAA/pC,KAAAmnC,aAAAkD,MAAAnuC,EAAAgG,EAGA,IAFA84B,EAAAkN,eAAA6B,GACA/O,EAAAqM,wBAAA0C,GACA/pC,KAAAmnC,aAAAO,SACA,SAAA/7B,OAAA,mFAGA,WAAAqvB,GAAAh7B,KAAAs5B,KAAAt5B,KAAA2Q,KAAAo5B,EAAA/pC,KAAAonC,iBASApM,EAAAl+B,UAAAwtC,QAAA,SAAApuC,EAAAgG,GAIA,GAHAmH,EAAAT,iBAAA,oBAAA1I,UAAA3B,QACAmK,EAAA+a,wBAAA,kBAAAvnB,EAAA8D,KAAA2Q,MAAA,GACAjI,EAAAgc,YAAA,kBAAAxiB,GAAA,GACAlC,KAAAmnC,aAAAK,WACA,SAAA77B,OAAA,yFAGA,IAAA3L,KAAAmnC,aAAAO,SACA,SAAA/7B,OAAA,qFAGA,OAAA3L,MAAAoqC,QAAAluC,EAAAgG,GAAAmoC,MAAAnuC,EAAAgG,IAKA84B,EAAAl+B,UAAAiT,SAAA,WAEA,MADA1G,GAAAT,iBAAA,qBAAA1I,UAAA3B,QACAyB,KAAAs5B,KAAAvpB,WAAA/P,KAAA2Q,KAAA2B,sBAIA0oB,EAAAl+B,UAAAy+B,OAAA,WAGA,MADAlyB,GAAAT,iBAAA,mBAAA1I,UAAA3B,QACAyB,KAAA+P,YAMAirB,EAAAl+B,UAAAytC,YAAA,WACA,MAAAvqC,MAAAmnC,aAAAqD,kBAKAxP,EAAAl+B,UAAA2tC,gBAAA,WACA,GAAA78B,GAAA5N,KAAAuqC,cACAhnC,EAAA6F,EAAAyE,kBAAAD,EACA,cAAArK,EAAyB,UAAAA,GAOzBy3B,EAAAl+B,UAAA4tC,QAAA,SAAA92B,GAEA,GADAvK,EAAAT,iBAAA,oBAAA1I,UAAA3B,UACAqV,YAAAonB,IAAA,CAEA,SAAArvB,OADA,wFAGA,GAAAg/B,GAAA3qC,KAAAs5B,OAAA1lB,EAAA0lB,KACAsR,EAAA5qC,KAAA2Q,KAAAgD,OAAAC,EAAAjD,MACAk6B,EAAA7qC,KAAAyqC,oBAAA72B,EAAA62B,iBACA,OAAAE,IAAAC,GAAAC,GAUA7P,EAAA0N,yBAAA,SAAAhlB,EAAA4lB,EAAA36B,GACA,GAAA85B,IAAmB1B,OAAA,KAAAp4B,QAAA,KACnB,IAAA26B,GAAA36B,EACA85B,EAAA1B,OAAAuC,EACAjgC,EAAAR,iBAAA6a,EAAA,EAAA+kB,EAAA1B,QAAA,GACA0B,EAAA95B,UACAtF,EAAAP,sBAAA4a,EAAA,EAAA+kB,EAAA95B,SAAA,OAEA,IAAA26B,EAEA,oBAAAA,IAAA,OAAAA,EAEAb,EAAA95B,QAAA26B,MAEA,uBAAAA,GAIA,SAAA39B,OAAAtC,EAAAV,YAAA+a,EAAA,MACA,yDAJA+kB,GAAA1B,OAAAuC,EAOA,MAAAb,IAEA1sC,OAAAuB,eAAA09B,EAAAl+B,UAAA,OACAyO,IAAA,WACA,MAAAvL,MAAA67B,UAEA5+B,YAAA,EACAE,cAAA,IAEA69B,IAEA/1B,GAAA+1B,S1C+2NM,SAAUv/B,EAAQwJ,EAAStJ,GAEjC,Y2Cn1OA,SAAAgZ,GAAAnG,GACAoG,EAAApG,EANAzS,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAGA0Y,GAHAzL,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,IAKAsJ,GAAA0P,aAKA1P,EAAAuU,iBAAA,SAAAgK,GACA,uBAAAA,GACA,UAAApa,EAAAwF,sBAAA4U,GAEA,UAAAA,GAOAve,EAAAoS,qBAAA,SAAAf,GACA,GAAAA,EAAAoB,aAAA,CACA,GAAAlJ,GAAA8H,EAAA9H,KACArF,GAAAhE,OAAA,iBAAAqJ,IACA,iBAAAA,IACA,iBAAAA,IAAAnF,EAAAhC,SAAAmH,EAAA,mDAGArF,GAAAhE,OAAAmR,IAAA1B,GAAA0B,EAAAxO,UAAA,+BAGAqB,GAAAhE,OAAAmR,IAAA1B,GAAA0B,EAAAf,cAAAzN,UAAA,wD3Ci3OM,SAAUrM,EAAQwJ,EAAStJ,GAEjC,Y4Ct5OAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAmZ,EAAAnZ,EAAA,KACAoZ,EAAApZ,EAAA,KACAwN,EAAAxN,EAAA,KACAwzB,EAAAxzB,EAAA,KAMAmvC,EAAA,SAAA51B,GAEA,QAAA41B,KACA,cAAA51B,KAAA5U,MAAAN,KAAAE,YAAAF,KAqDA,MAvDA6U,GAAAM,UAAA21B,EAAA51B,GAOA41B,EAAAhuC,UAAAsY,QAAA,SAAArT,EAAAuL,GACA,GAAAmI,GAAA1T,EAAAuT,KAAAI,UAAApI,EAAAgI,KACA,YAAAG,EACAtM,EAAAkE,YAAAtL,EAAAG,KAAAoL,EAAApL,MAGAuT,GAMAq1B,EAAAhuC,UAAA6Y,YAAA,SAAAL,GACA,UAKAw1B,EAAAhuC,UAAA8Y,oBAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAlC,OAAAmC,IAKAg1B,EAAAhuC,UAAAiZ,QAAA,WACA,MAAAhB,GAAAiB,UAAAC,KAKA60B,EAAAhuC,UAAAoZ,QAAA,WACA,MAAAnB,GAAAiB,UAAA+F,KAOA+uB,EAAAhuC,UAAAsZ,SAAA,SAAAC,EAAAnU,GACA,GAAA6oC,GAAA5b,EAAAza,aAAA2B,EACA,WAAAtB,GAAAiB,UAAA9T,EAAA6oC,IAKAD,EAAAhuC,UAAAiT,SAAA,WACA,gBAEA+6B,GACCh2B,EAAAyB,MACDtR,GAAA6lC,aACA7lC,EAAAgjC,YAAA,GAAA6C,I5C86OM,SAAUrvC,EAAQwJ,EAAStJ,GAEjC,Y6Ct/OAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAMA8uC,GANA7hC,EAAAxN,EAAA,KACA0uB,EAAA1uB,EAAA,KACAyN,EAAAzN,EAAA,KACAoZ,EAAApZ,EAAA,KACAib,EAAAjb,EAAA,KACAkb,EAAAlb,EAAA,KAEAsvC,KAOAzzB,EAAA,WACA,QAAAA,GAAA0zB,EAAAC,GACAnrC,KAAAkrC,WACAlrC,KAAAmrC,YA8IA,MA5IApvC,QAAAuB,eAAAka,EAAA,WAMAjM,IAAA,WAKA,MAJApC,GAAAhE,OAAA8lC,GAAAr0B,EAAAJ,eAAA,uCACAw0B,EACAA,GACA,GAAAxzB,IAAkCkT,YAAAugB,IAAiCvgB,YAAA9T,EAAAJ,kBAGnEvZ,YAAA,EACAE,cAAA,IAOAqa,EAAA1a,UAAAyO,IAAA,SAAA6/B,GACA,GAAAC,GAAAjiC,EAAAnB,QAAAjI,KAAAkrC,SAAAE,EACA,KAAAC,EACA,SAAA1/B,OAAA,wBAAAy/B,EACA,OAAAC,KAAAJ,EAGA,KAGAI,GAOA7zB,EAAA1a,UAAAwe,SAAA,SAAArB,GACA,MAAA7Q,GAAA/B,SAAArH,KAAAmrC,UAAAlxB,EAAAlK,aAOAyH,EAAA1a,UAAAye,SAAA,SAAAtB,EAAAqxB,GACAniC,EAAAhE,OAAA8U,IAAApD,EAAAwE,UAAA,sEAKA,KAJA,GAAAkwB,MACAC,GAAA,EACAC,EAAAH,EAAA7wB,YAAA1F,EAAAiB,UAAA6E,MACAC,EAAA2wB,EAAAzwB,UACAF,GACA0wB,EACAA,GAAAvxB,EAAAtE,YAAAmF,EAAAxF,MACAi2B,EAAAlqC,KAAAyZ,GACAA,EAAA2wB,EAAAzwB,SAEA,IAAA0wB,EAEAA,GADAF,EACAnhB,EAAAC,cAAAihB,EAAAtxB,EAAAwQ,cAGAwgB,CAEA,IAAAU,GAAA1xB,EAAAlK,WACA67B,EAAAxiC,EAAAhC,MAAApH,KAAAmrC,UACAS,GAAAD,GAAA1xB,CACA,IAAA4xB,GAAAziC,EAAAhC,MAAApH,KAAAkrC,SAEA,OADAW,GAAAF,GAAAD,EACA,GAAAl0B,GAAAq0B,EAAAD,IAQAp0B,EAAA1a,UAAA4b,aAAA,SAAAN,EAAAkzB,GACA,GAAAxrC,GAAAE,IAkCA,WAAAwX,GAjCApO,EAAApB,IAAAhI,KAAAkrC,SAAA,SAAAY,EAAAH,GACA,GAAAhyB,GAAAvQ,EAAAnB,QAAAnI,EAAAqrC,UAAAQ,EAEA,IADAxiC,EAAAhE,OAAAwU,EAAA,oCAAAgyB,GACAG,IAAAb,EAAA,CAEA,GAAAtxB,EAAAhE,YAAAyC,EAAA9C,MAAA,CAKA,IAHA,GAAAi2B,MACAE,EAAAH,EAAA7wB,YAAA1F,EAAAiB,UAAA6E,MACAC,EAAA2wB,EAAAzwB,UACAF,GACAA,EAAA5Y,MAAAkW,EAAAlW,MACAqpC,EAAAlqC,KAAAyZ,GAEAA,EAAA2wB,EAAAzwB,SAGA,OADAuwB,GAAAlqC,KAAA+W,GACAiS,EAAAC,cAAAihB,EAAA5xB,EAAA8Q,cAIA,MAAAwgB,GAIA,GAAAc,GAAAT,EAAA//B,IAAA6M,EAAAlW,MACAmW,EAAAyzB,CAIA,OAHAC,KACA1zB,IAAA/M,OAAA,GAAAyJ,GAAAiB,UAAAoC,EAAAlW,KAAA6pC,KAEA1zB,EAAAI,OAAAL,IAAA9C,QAGAtV,KAAAmrC,YAQA3zB,EAAA1a,UAAA0b,kBAAA,SAAAJ,EAAAkzB,GAiBA,UAAA9zB,GAhBApO,EAAApB,IAAAhI,KAAAkrC,SAAA,SAAAY,GACA,GAAAA,IAAAb,EAEA,MAAAa,EAGA,IAAAC,GAAAT,EAAA//B,IAAA6M,EAAAlW,KACA,OAAA6pC,GACAD,EAAAxgC,OAAA,GAAAyJ,GAAAiB,UAAAoC,EAAAlW,KAAA6pC,IAIAD,IAIA9rC,KAAAmrC,YAEA3zB,IAEAvS,GAAAuS,Y7C8gPM,SAAU/b,EAAQwJ,EAAStJ,GAEjC,Y8ClrPAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAwa,GAAA/a,EAAA,KACAqwC,EAAArwC,EAAA,KACAswC,EAAAl/B,KAAA7B,IAAA,GAIAghC,EAAA,WAIA,QAAAA,GAAA3tC,GAKAyB,KAAA8Y,MAJA,SAAAqzB,GACA,MAAAt8B,UAAA9C,KAAA7B,IAAAihC,GAAAF,EAAA,KAGA1tC,EAAA,GACAyB,KAAAosC,SAAApsC,KAAA8Y,MAAA,CACA,IAAAuzB,GAHA,SAAAn9B,GAAuC,MAAAW,UAAAtU,MAAA2T,EAAA,GAAAQ,KAAA,SAGvC1P,KAAA8Y,MACA9Y,MAAAssC,MAAA/tC,EAAA,EAAA8tC,EAWA,MANAH,GAAApvC,UAAAyvC,aAAA,WAEA,GAAApuB,KAAAne,KAAAssC,MAAA,GAAAtsC,KAAAosC,SAEA,OADApsC,MAAAosC,WACAjuB,GAEA+tB,IAiBAjnC,GAAAqlB,cAAA,SAAAihB,EAAA73B,EAAA84B,EAAAC,GACAlB,EAAAv9B,KAAA0F,EACA,IAAAg5B,GAAA,SAAAC,EAAAC,GACA,GACAx0B,GACA3Z,EAFAF,EAAAquC,EAAAD,CAGA,OAAApuC,EACA,WAEA,OAAAA,EAGA,MAFA6Z,GAAAmzB,EAAAoB,GACAluC,EAAA+tC,IAAAp0B,KACA,GAAA1B,GAAA+W,SAAAhvB,EAAA2Z,EAAA9C,KAAAoB,EAAA+W,SAAAmB,MAAA,UAGA,IAAAie,GAAAh9B,SAAAtR,EAAA,MAAAouC,EACAr5B,EAAAo5B,EAAAC,EAAAE,GACAt5B,EAAAm5B,EAAAG,EAAA,EAAAD,EAGA,OAFAx0B,GAAAmzB,EAAAsB,GACApuC,EAAA+tC,IAAAp0B,KACA,GAAA1B,GAAA+W,SAAAhvB,EAAA2Z,EAAA9C,KAAAoB,EAAA+W,SAAAmB,MAAAtb,EAAAC,IAyCAu5B,EAAA,GAAAZ,GAAAX,EAAAhtC,QACAwuC,EAvCA,SAAAD,GAuBA,OAtBAx3B,GAAA,KACAy3B,EAAA,KACApzB,EAAA4xB,EAAAhtC,OACAyuC,EAAA,SAAAC,EAAArrB,GACA,GAAA+qB,GAAAhzB,EAAAszB,EACAL,EAAAjzB,CACAA,IAAAszB,CACA,IAAAxQ,GAAAiQ,EAAAC,EAAA,EAAAC,GACAx0B,EAAAmzB,EAAAoB,GACAluC,EAAA+tC,IAAAp0B,IACA80B,GAAA,GAAAx2B,GAAA+W,SAAAhvB,EAAA2Z,EAAA9C,KAAAsM,EAAA,KAAA6a,KAEAyQ,EAAA,SAAAC,GACA73B,GACAA,EAAAhC,KAAA65B,EACA73B,EAAA63B,IAGAJ,EAAAI,EACA73B,EAAA63B,IAGA7uC,EAAA,EAAuBA,EAAAwuC,EAAAh0B,QAAkBxa,EAAA,CACzC,GAAA8uC,GAAAN,EAAAP,eAEAU,EAAAlgC,KAAAsC,IAAA,EAAAy9B,EAAAh0B,OAAAxa,EAAA,GACA8uC,GACAJ,EAAAC,EAAAv2B,EAAA+W,SAAAmB,QAIAoe,EAAAC,EAAAv2B,EAAA+W,SAAAmB,OACAoe,EAAAC,EAAAv2B,EAAA+W,SAAAC,MAGA,MAAAqf,IAGAD,EACA,WAAAd,GAAA10B,UAAAm1B,GAAA/4B,EAAAq5B,K9C2sPM,SAAUtxC,EAAQwJ,EAAStJ,GAEjC,Y+CzzPA,SAAA4uB,GAAAjX,EAAAC,GACA,MAAApK,GAAAkE,YAAAiG,EAAApR,KAAAqR,EAAArR,MAGA,QAAAqV,GAAAjE,EAAAC,GACA,MAAApK,GAAAkE,YAAAiG,EAAAC,GAPAxX,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,IAIAsJ,GAAAslB,uBAIAtlB,EAAAsS,mB/Cm1PM,SAAU9b,EAAQwJ,EAAStJ,GAEjC,YgD91PAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAmZ,EAAAnZ,EAAA,KACAguB,EAAAhuB,EAAA,KACAoZ,EAAApZ,EAAA,KACAwzB,EAAAxzB,EAAA,KAMAqsC,EAAA,SAAA9yB,GAEA,QAAA8yB,GAAAqF,GACA,GAAAvtC,GAAAoV,EAAAzY,KAAAuD,WAGA,OAFAF,GAAAutC,aACAlkC,EAAAhE,QAAAkoC,EAAAvlC,WAAA,cAAAulC,EAAAp7B,WAAA,2DACAnS,EAmDA,MAxDA+U,GAAAM,UAAA6yB,EAAA9yB,GAYA8yB,EAAAlrC,UAAAwwC,aAAA,SAAAtZ,GACA,MAAAA,GAAAjc,SAAA/X,KAAAqtC,aAKArF,EAAAlrC,UAAA6Y,YAAA,SAAAL,GACA,OAAAA,EAAAyC,SAAA/X,KAAAqtC,YAAAvlC,WAKAkgC,EAAAlrC,UAAAsY,QAAA,SAAArT,EAAAuL,GACA,GAAAigC,GAAAvtC,KAAAstC,aAAAvrC,EAAAuT,MACAk4B,EAAAxtC,KAAAstC,aAAAhgC,EAAAgI,MACAG,EAAA83B,EAAA73B,UAAA83B,EACA,YAAA/3B,EACArM,EAAAiE,YAAAtL,EAAAG,KAAAoL,EAAApL,MAGAuT,GAMAuyB,EAAAlrC,UAAAsZ,SAAA,SAAAC,EAAAnU,GACA,GAAA6oC,GAAA5b,EAAAza,aAAA2B,GACAf,EAAAqU,EAAA3S,aAAAP,WAAAkC,YAAA3Y,KAAAqtC,WAAAtC,EACA,WAAAh2B,GAAAiB,UAAA9T,EAAAoT,IAKA0yB,EAAAlrC,UAAAoZ,QAAA,WACA,GAAAZ,GAAAqU,EAAA3S,aAAAP,WAAAkC,YAAA3Y,KAAAqtC,WAAA1jB,EAAA/U,SACA,WAAAG,GAAAiB,UAAA5M,EAAAgE,SAAAkI,IAKA0yB,EAAAlrC,UAAAiT,SAAA,WACA,MAAA/P,MAAAqtC,WAAA56B,QAAA/C,KAAA,MAEAs4B,GACClzB,EAAAyB,MACDtR,GAAA+iC,ahDs3PM,SAAUvsC,EAAQwJ,EAAStJ,GAEjC,YiDh8PAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAonB,EAAApnB,EAAA,KACAyzB,EAAAzzB,EAAA,KACAqZ,EAAArZ,EAAA,KACAwzB,EAAAxzB,EAAA,KACAib,EAAAjb,EAAA,IAMAsJ,GAAAsuB,mBAAA,SAAAka,GAGA,MAFAA,SACAA,EAAA,UAAAA,EAAA,eAAAlnB,OAAA8M,UACAoa,GASAxoC,EAAAyoC,qBAAA,SAAAxxC,EAAA04B,GACA,MAAA14B,IAAA,iBAAAA,IAIAiN,EAAAhE,OAAA,OAAAjJ,GAAA,6CACA04B,EAAA14B,EAAA,SAJAA,GAcA+I,EAAAixB,yBAAA,SAAAgG,EAAAtH,GACA,GAAA+Y,GAAA,GAAAve,GAAAsB,kBAIA,OAHAwL,GAAA/F,YAAA,GAAApT,GAAArR,KAAA,aAAAf,EAAA2E,GACAq4B,EAAAlX,SAAA9lB,EAAA1L,EAAA6vB,6BAAAxf,EAAAsf,MAEA+Y,GAUA1oC,EAAA6vB,6BAAA,SAAAxf,EAAAsf,GACA,GAEA9e,GAFA83B,EAAAt4B,EAAAC,cAAA/G,MACAgV,EAAAve,EAAAyoC,qBAAAE,EAAAhZ,EAEA,IAAAtf,EAAAoC,aAAA,CACA,GAAAm2B,GAAAv4B,EACApZ,EAAA+I,EAAAyoC,qBAAAG,EAAAphB,WAAAmI,EACA,OAAA14B,KAAA2xC,EAAAphB,YACAjJ,IAAAqqB,EAAAt4B,cAAA/G,MACA,GAAAwG,GAAAmB,SAAAja,EAAAizB,EAAAza,aAAA8O,IAGAlO,EAIA,GAAAw4B,GAAAx4B,CAWA,OAVAQ,GAAAg4B,EACAtqB,IAAAsqB,EAAAv4B,cAAA/G,QACAsH,IAAA6B,eAAA,GAAA3C,GAAAmB,SAAAqN,KAEAsqB,EAAA30B,aAAAvC,EAAAJ,eAAA,SAAAsB,EAAAsB,GACA,GAAAjB,GAAAlT,EAAA6vB,6BAAA1b,EAAAwb,EACAzc,KAAAiB,IACAtD,IAAAoC,qBAAAJ,EAAAK,MAGArC,IjD09PM,SAAUra,EAAQwJ,EAAStJ,GAEjC,YkD9iQAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6mB,GAAApnB,EAAA,KACAib,EAAAjb,EAAA,KACAoyC,EAAApyC,EAAA,KAMA+0B,EAAA,WACA,QAAAA,KAKA1wB,KAAAusB,OAAA,KAKAvsB,KAAAiX,UAAA,KAuIA,MA/HAyZ,GAAA5zB,UAAAkxC,KAAA,SAAAr9B,GACA,SAAA3Q,KAAAusB,OACA,MAAAvsB,MAAAusB,OAAAxU,SAAApH,EAEA,IAAAA,EAAA7I,WAAA,MAAA9H,KAAAiX,UAYA,WAXA,IAAA+R,GAAArY,EAAAsB,UAEA,IADAtB,IAAAwB,WACAnS,KAAAiX,UAAA5P,SAAA2hB,GAAA,CAEA,MADAhpB,MAAAiX,UAAA1L,IAAAyd,GACAglB,KAAAr9B,GAGA,aAcA+f,EAAA5zB,UAAA25B,SAAA,SAAA9lB,EAAAxE,GACA,GAAAwE,EAAA7I,UACA9H,KAAAusB,OAAApgB,EACAnM,KAAAiX,UAAA,SAEA,WAAAjX,KAAAusB,OACAvsB,KAAAusB,OAAAvsB,KAAAusB,OAAA5T,YAAAhI,EAAAxE,OAEA,CACA,MAAAnM,KAAAiX,YACAjX,KAAAiX,UAAA,GAAA82B,GAAAE,WAEA,IAAAjlB,GAAArY,EAAAsB,UACAjS,MAAAiX,UAAA5P,SAAA2hB,IACAhpB,KAAAiX,UAAAi3B,IAAAllB,EAAA,GAAA0H,GAEA,IAAA7d,GAAA7S,KAAAiX,UAAA1L,IAAAyd,EACArY,KAAAwB,WACAU,EAAA4jB,SAAA9lB,EAAAxE,KASAukB,EAAA5zB,UAAAw5B,OAAA,SAAA3lB,GACA,GAAAA,EAAA7I,UAGA,MAFA9H,MAAAusB,OAAA,KACAvsB,KAAAiX,UAAA,MACA,CAGA,WAAAjX,KAAAusB,OAAA,CACA,GAAAvsB,KAAAusB,OAAA7U,aAEA,QAGA,IAAAxb,GAAA8D,KAAAusB,MACAvsB,MAAAusB,OAAA,IACA,IAAA4hB,GAAAnuC,IAIA,OAHA9D,GAAAid,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAAy9B,GACAiS,EAAA1X,SAAA,GAAA1T,GAAArR,KAAAjT,GAAAy9B,KAEAl8B,KAAAs2B,OAAA3lB,GAGA,UAAA3Q,KAAAiX,UAAA,CACA,GAAA+R,GAAArY,EAAAsB,UAEA,IADAtB,IAAAwB,WACAnS,KAAAiX,UAAA5P,SAAA2hB,GAAA,CACAhpB,KAAAiX,UAAA1L,IAAAyd,GAAAsN,OAAA3lB,IAEA3Q,KAAAiX,UAAA3L,OAAA0d,GAGA,QAAAhpB,KAAAiX,UAAAnP,YACA9H,KAAAiX,UAAA,MACA,GAOA,UAWAyZ,EAAA5zB,UAAAq5B,YAAA,SAAAiY,EAAAC,GACA,OAAAruC,KAAAusB,OACA8hB,EAAAD,EAAApuC,KAAAusB,QAGAvsB,KAAAmZ,aAAA,SAAA1a,EAAAy9B,GACA,GAAAvrB,GAAA,GAAAoS,GAAArR,KAAA08B,EAAAr+B,WAAA,IAAAtR,EACAy9B,GAAA/F,YAAAxlB,EAAA09B,MASA3d,EAAA5zB,UAAAqc,aAAA,SAAAk1B,GACA,OAAAruC,KAAAiX,WACAjX,KAAAiX,UAAA1I,KAAA,SAAA9P,EAAAy9B,GACAmS,EAAA5vC,EAAAy9B,MAIAxL,IAEAzrB,GAAAyrB,sBlDskQM,SAAUj1B,EAAQwJ,EAAStJ,GAEjC,YmDruQAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAMAsyC,EAAA,WACA,QAAAA,KACAjuC,KAAAqL,OAkEA,MA5DA4iC,GAAAnxC,UAAAoxC,IAAA,SAAA7lB,EAAA7Z,GACAxO,KAAAqL,IAAAgd,GAAA,OAAA7Z,MAMAy/B,EAAAnxC,UAAAuK,SAAA,SAAA5I,GACA,MAAA0K,GAAA9B,SAAArH,KAAAqL,IAAA5M,IAMAwvC,EAAAnxC,UAAAyO,IAAA,SAAA8c,GACA,MAAAroB,MAAAqH,SAAAghB,GAAAroB,KAAAqL,IAAAgd,OAAAxE,IAKAoqB,EAAAnxC,UAAAwO,OAAA,SAAA+c,SACAroB,MAAAqL,IAAAgd,IAKA4lB,EAAAnxC,UAAAwxC,MAAA,WACAtuC,KAAAqL,QAMA4iC,EAAAnxC,UAAAgL,QAAA,WACA,MAAAqB,GAAArB,QAAA9H,KAAAqL,MAKA4iC,EAAAnxC,UAAAgc,MAAA,WACA,MAAA3P,GAAAvB,SAAA5H,KAAAqL,MAMA4iC,EAAAnxC,UAAAyR,KAAA,SAAA/B,GACArD,EAAAzB,QAAA1H,KAAAqL,IAAA,SAAA0C,EAAAc,GAAkD,MAAArC,GAAAuB,EAAAc,MAMlDo/B,EAAAnxC,UAAAgR,KAAA,WACA,GAAAA,KAIA,OAHA3E,GAAAzB,QAAA1H,KAAAqL,IAAA,SAAA0C,GACAD,EAAAzM,KAAA0M,KAEAD,GAEAmgC,IAEAhpC,GAAAgpC,cnD6vQM,SAAUxyC,EAAQwJ,EAAStJ,GAEjC,YoD50QAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAqyC,GAAA5yC,EAAA,KACAonB,EAAApnB,EAAA,KAQA6yC,EAAA,WACA,QAAAA,GAAA1Q,EAAAntB,EAAAqjB,GACAh0B,KAAA89B,SACA99B,KAAA2Q,OACA3Q,KAAAg0B,OAEAh0B,KAAAwD,KAAA+qC,EAAA3oB,cAAA6oB,UAUA,MARAD,GAAA1xC,UAAA4xC,kBAAA,SAAA52B,GACA,MAAA9X,MAAA2Q,KAAA7I,UACA,GAAA0mC,GAAAxuC,KAAA89B,OAAA/a,EAAArR,KAAA0kB,MAAAp2B,KAAAg0B,KAAAnc,kBAAAC,IAGA,GAAA02B,GAAAxuC,KAAA89B,OAAA99B,KAAA2Q,KAAAwB,WAAAnS,KAAAg0B,OAGAwa,IAEAvpC,GAAAupC,apDo2QM,SAAU/yC,EAAQwJ,EAAStJ,GAEjC,YqDl4QAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAMA++B,GANA0T,EAAAhzC,EAAA,KACAguB,EAAAhuB,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAizC,EAAAjzC,EAAA,KACAkzC,EAAAlzC,EAAA,KAYAu/B,EAAA,WACA,QAAAA,KAUAl7B,KAAA8uC,UAwMA,MAtMA/yC,QAAAuB,eAAA49B,EAAA,0BACA3vB,IAAA,WAEA,MADApC,GAAAhE,OAAA81B,EAAA,oCACAA,GAEA5vB,IAAA,SAAAmD,GACArF,EAAAhE,QAAA81B,EAAA,mDACAA,EAAAzsB,GAEAvR,YAAA,EACAE,cAAA,IAKA+9B,EAAAp+B,UAAAgL,QAAA,WACA,MAAAsB,GAAAtB,QAAA9H,KAAA8uC,SASA5T,EAAAp+B,UAAAiyC,eAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAlpB,GAAAgpB,EAAAlR,OAAA9X,OACA,WAAAA,EAAA,CACA,GAAAmpB,GAAA/lC,EAAAnB,QAAAjI,KAAA8uC,OAAA9oB,EAEA,OADA7c,GAAAhE,OAAA,MAAAgqC,EAAA,gDACAA,EAAAJ,eAAAC,EAAAC,EAAAC,GAGA,GAAAE,KAIA,OAHAhmC,GAAA1B,QAAA1H,KAAA8uC,OAAA,SAAArwC,EAAA0wC,GACAC,IAAA5zC,OAAA2zC,EAAAJ,eAAAC,EAAAC,EAAAC,MAEAE,GAaAlU,EAAAp+B,UAAAi6B,qBAAA,SAAAtmB,EAAAqmB,EAAAmY,EAAAI,EAAAC,GACA,GAAAtpB,GAAAvV,EAAAg6B,kBACA0E,EAAA/lC,EAAAnB,QAAAjI,KAAA8uC,OAAA9oB,EACA,KAAAmpB,EAAA,CAEA,GAAAI,GAAAN,EAAAO,uBAAAF,EAAAD,EAAA,MACAI,GAAA,CACAF,GACAE,GAAA,EAEAJ,YAAA1lB,GAAA3S,cACAu4B,EAAAN,EAAAS,0BAAAL,GACAI,GAAA,IAGAF,EAAA5lB,EAAA3S,aAAAP,WACAg5B,GAAA,EAEA,IAAAE,GAAA,GAAAf,GAAAgB,UAAA,GAAAjB,GAAAxW,UAC6B,EAAAsX,GAAA,MAAAd,GAAAxW,UACA,EAAAmX,GAAA,GAC7BH,GAAA,GAAAN,GAAAgB,KAAAp/B,EAAAk/B,GACA3vC,KAAA8uC,OAAA9oB,GAAAmpB,EAIA,MADAA,GAAApY,qBAAAD,GACAqY,EAAAW,iBAAAhZ,IAaAoE,EAAAp+B,UAAAo6B,wBAAA,SAAAzmB,EAAAqmB,EAAAiZ,GACA,GAAA/pB,GAAAvV,EAAAg6B,kBACAuF,KACAC,KACAC,EAAAlwC,KAAAmwC,iBACA,gBAAAnqB,EAAA,CAEA,GAAAmoB,GAAAnuC,IACAoJ,GAAA1B,QAAA1H,KAAA8uC,OAAA,SAAAsB,EAAAjB,GACAc,IAAAz0C,OAAA2zC,EAAAjY,wBAAAJ,EAAAiZ,IACAZ,EAAArnC,kBACAqmC,GAAAW,OAAAsB,GAEAjB,EACAkB,WACA/H,iBACAgI,gBACAN,EAAA3uC,KAAA8tC,EAAAkB,mBAKA,CAEA,GAAAlB,GAAA/lC,EAAAnB,QAAAjI,KAAA8uC,OAAA9oB,EACAmpB,KACAc,IAAAz0C,OAAA2zC,EAAAjY,wBAAAJ,EAAAiZ,IACAZ,EAAArnC,kBACA9H,MAAA8uC,OAAA9oB,GAEAmpB,EACAkB,WACA/H,iBACAgI,gBACAN,EAAA3uC,KAAA8tC,EAAAkB,cASA,MAJAH,KAAAlwC,KAAAmwC,mBAEAH,EAAA3uC,KAAA,GAAA65B,GAAAD,uBAAAxqB,EAAA6oB,KAAA7oB,EAAAE,QAEgBq/B,UAAAjd,OAAAkd,IAKhB/U,EAAAp+B,UAAAyzC,cAAA,WACA,GAAAzwC,GAAAE,IAEA,OADAjE,QAAA+R,KAAA9N,KAAA8uC,QAAA9mC,IAAA,SAAAvJ,GAAkE,MAAAqB,GAAAgvC,OAAArwC,KAClE+xC,OAAA,SAAArB,GACA,OAAAA,EACAkB,WACA/H,iBACAgI,kBAQApV,EAAAp+B,UAAA2zC,uBAAA,SAAA9/B,GACA,GAAA0+B,GAAA,IAIA,OAHAjmC,GAAA1B,QAAA1H,KAAA8uC,OAAA,SAAArwC,EAAA0wC,GACAE,KAAAF,EAAAsB,uBAAA9/B,KAEA0+B,GAMAnU,EAAAp+B,UAAA4zC,aAAA,SAAAjgC,GAEA,GADAA,EAAA63B,iBACAgI,eACA,MAAAtwC,MAAA2wC,iBAGA,IAAA3qB,GAAAvV,EAAAg6B,iBACA,OAAArhC,GAAAnB,QAAAjI,KAAA8uC,OAAA9oB,IAOAkV,EAAAp+B,UAAA8zC,mBAAA,SAAAngC,GACA,aAAAzQ,KAAA0wC,aAAAjgC,IAKAyqB,EAAAp+B,UAAAqzC,gBAAA,WACA,aAAAnwC,KAAA2wC,mBAKAzV,EAAAp+B,UAAA6zC,gBAAA,WAOA,MANAvnC,GAAA3B,UAAAzH,KAAA8uC,OAAA,SAAAK,GACA,MAAAA,GACAkB,WACA/H,iBACAgI,kBAEA,MAEApV,IAEAj2B,GAAAi2B,arD05QM,SAAUz/B,EAAQwJ,EAAStJ,GAEjC,YsDnoRAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAytB,GAAAhuB,EAAA,KACAgzC,EAAAhzC,EAAA,KAQAi0C,EAAA,WAMA,QAAAA,GAAAiB,EAAAC,GACA9wC,KAAA6wC,cACA7wC,KAAA8wC,eAyDA,MAjDAlB,GAAA9yC,UAAAi0C,gBAAA,SAAAC,EAAArwC,EAAAswC,GACA,UAAArB,GAAA,GAAAjB,GAAAxW,UAAA6Y,EAAArwC,EAAAswC,GAAAjxC,KAAA8wC,eAQAlB,EAAA9yC,UAAAo0C,iBAAA,SAAAC,EAAAxwC,EAAAswC,GACA,UAAArB,GAAA5vC,KAAA6wC,YAAA,GAAAlC,GAAAxW,UAAAgZ,EAAAxwC,EAAAswC,KAKArB,EAAA9yC,UAAAs0C,cAAA,WACA,MAAApxC,MAAA6wC,aAKAjB,EAAA9yC,UAAAu0C,qBAAA,WACA,MAAArxC,MAAA6wC,YAAAtY,qBACAv4B,KAAA6wC,YAAApe,UACA,MAKAmd,EAAA9yC,UAAAw0C,eAAA,WACA,MAAAtxC,MAAA8wC,cAKAlB,EAAA9yC,UAAAy0C,sBAAA,WACA,MAAAvxC,MAAA8wC,aAAAvY,qBACAv4B,KAAA8wC,aAAAre,UACA,MAMAmd,EAAAxZ,MAAA,GAAAwZ,GAAA,GAAAjB,GAAAxW,UAAAxO,EAAA3S,aAAAP,YACA,GACA,MAAAk4B,GAAAxW,UAAAxO,EAAA3S,aAAAP,YACA,GACA,IACAm5B,IAEA3qC,GAAA2qC,atD2pRM,SAAUn0C,EAAQwJ,EAAStJ,GAEjC,YuD1uRAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAOA47B,EAAA,WACA,QAAAA,GAAAia,GACAxxC,KAAAwxC,cACAxxC,KAAAyxC,MAAA,KAaA,MAXAla,GAAAz6B,UAAAyO,IAAA,WACA,GAAAmmC,GAAA1xC,KAAAwxC,YAAAjmC,MACAomC,EAAAxoC,EAAA/B,MAAAsqC,EAOA,OANA1xC,MAAAyxC,OACAtoC,EAAAzB,QAAA1H,KAAAyxC,MAAA,SAAA7Z,EAAA17B,GACAy1C,EAAA/Z,GAAA+Z,EAAA/Z,GAAA17B,IAGA8D,KAAAyxC,MAAAC,EACAC,GAEApa,IAEAtyB,GAAAsyB,iBvDkwRM,SAAU97B,EAAQwJ,EAAStJ,GAEjC,YwD9xRAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAi2C,EAAAj2C,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACA2N,EAAA3N,EAAA,KACAonB,EAAApnB,EAAA,KACAk2C,EAAAl2C,EAAA,KACAm2C,EAAAn2C,EAAA,KACA4N,EAAA5N,EAAA,KACAo2C,EAAAp2C,EAAA,KACA6N,EAAA7N,EAAA,KACA+N,EAAA/N,EAAA,KACAq2C,EAAAr2C,EAAA,KACAs2C,EAAA,IACAC,EAAA,IAaA3gB,EAAA,SAAArc,GAWA,QAAAqc,GAAAvB,EAAAmB,EAAAC,EAAAI,EAAA2gB,EAAAC,GACA,GAAAtyC,GAAAoV,EAAAzY,KAAAuD,WAwCA,IAvCAF,EAAAkwB,YACAlwB,EAAAqxB,gBACArxB,EAAAsxB,mBACAtxB,EAAA0xB,sBACA1xB,EAAAqyC,qBACAryC,EAAAsyC,gBAEAtyC,EAAAyD,GAAAguB,EAAA8gB,8BACAvyC,EAAA60B,KAAArrB,EAAAkC,WAAA,KAAA1L,EAAAyD,GAAA,KAEAzD,EAAAwyC,qBACAxyC,EAAAyyC,YACAzyC,EAAA0yC,oBACA1yC,EAAA2yC,qBAAA,EACA3yC,EAAA4yC,6BACA5yC,EAAA6yC,YAAA,EACA7yC,EAAA8yC,gBAAAX,EACAnyC,EAAA+yC,mBAAAX,EACApyC,EAAAgzC,uBAAA,KACAhzC,EAAAizC,cAAA,KAEAjzC,EAAAkzC,0BAAA,KAEAlzC,EAAAmzC,UAAA,EAEAnzC,EAAAozC,kBACApzC,EAAAqzC,eAAA,EAKArzC,EAAAszC,UAAA,KAEAtzC,EAAAuzC,WAAA,KACAvzC,EAAAwzC,oBAAA,EACAxzC,EAAAyzC,uBAAA,EACAzzC,EAAA0zC,kBAAA,EACA1zC,EAAA2zC,2BAAA,KACA3zC,EAAA4zC,+BAAA,KACAtB,IAAA1oC,EAAAtD,YACA,SAAAuF,OAAA,iFAOA,OALA7L,GAAA6zC,iBAAA,GACA9B,EAAA+B,kBAAA1U,cAAAqJ,GAAA,UAAAzoC,EAAA+zC,WAAA/zC,IACA,IAAAkwB,EAAA/K,KAAAlZ,QAAA,YACA+lC,EAAAgC,cAAA5U,cAAAqJ,GAAA,SAAAzoC,EAAAi0C,UAAAj0C,GAEAA,EAkrBA,MA7uBA+U,GAAAM,UAAAoc,EAAArc,GAmEAqc,EAAAz0B,UAAAk3C,YAAA,SAAA15B,EAAAzN,EAAAonC,GACA,GAAAC,KAAAl0C,KAAAmzC,eACAgB,GAAmBt3B,EAAAq3B,EAAAnyC,EAAAuY,EAAAhN,EAAAT,EACnB7M,MAAA20B,KAAAvrB,EAAAxC,UAAAutC,IACA9qC,EAAAlE,OAAAnF,KAAA2yC,WAAA,0DACA3yC,KAAAozC,UAAAY,YAAAG,GACAF,IACAj0C,KAAAkzC,eAAAgB,GAAAD,IAMA1iB,EAAAz0B,UAAAg2B,OAAA,SAAAriB,EAAA6hB,EAAAD,EAAAE,GACA,GAAAvM,GAAAvV,EAAAg6B,kBACAp4B,EAAA5B,EAAAE,KAAAZ,UACA/P,MAAA20B,KAAA,qBAAAtiB,EAAA,IAAA2T,GACAhmB,KAAAuyC,SAAAlgC,GAAArS,KAAAuyC,SAAAlgC,OACAhJ,EAAAlE,OAAAsL,EAAA63B,iBAAA8L,cACA3jC,EAAA63B,iBAAAgI,eAAA,sDACAjnC,EAAAlE,QAAAnF,KAAAuyC,SAAAlgC,GAAA2T,GAAA,+CACA,IAAAquB,IACA9hB,aACA+hB,OAAAhiB,EACA7hB,QACA4hB,MAEAryB,MAAAuyC,SAAAlgC,GAAA2T,GAAAquB,EACAr0C,KAAA2yC,YACA3yC,KAAAu0C,YAAAF,IAUA9iB,EAAAz0B,UAAAy3C,YAAA,SAAAF,GACA,GAAAv0C,GAAAE,KACAyQ,EAAA4jC,EAAA5jC,MACA4B,EAAA5B,EAAAE,KAAAZ,WACAiW,EAAAvV,EAAAg6B,iBACAzqC,MAAA20B,KAAA,aAAAtiB,EAAA,QAAA2T,EACA,IAAAwuB,IAAmBxvC,EAAAqN,EAGnBgiC,GAAAhiB,MACAmiB,EAAA,EAAA/jC,EAAA85B,cACAiK,EAAA,EAAAH,EAAAhiB,KAEAmiB,EAAA,EAAAH,EAAAC,SACAt0C,KAAAg0C,YAPA,IAOAQ,EAAA,SAAAjzC,GACA,GAAAkzC,GAAAlzC,EAAA,EACAM,EAAAN,EAAA,CAEAgwB,GAAAmjB,sBAAAD,EAAAhkC,IACA3Q,EAAAyyC,SAAAlgC,IAAAvS,EAAAyyC,SAAAlgC,GAAA2T,MAEAquB,IACAv0C,EAAA60B,KAAA,kBAAApzB,GACA,OAAAM,GACA/B,EAAA60C,cAAAtiC,EAAA2T,GAEAquB,EAAA9hB,YACA8hB,EAAA9hB,WAAA1wB,EAAA4yC,OAUAljB,EAAAmjB,sBAAA,SAAAD,EAAAhkC,GACA,GAAAgkC,GAAA,iBAAAA,IAAAtrC,EAAA9B,SAAAotC,EAAA,MACA,GAAAG,GAAAzrC,EAAAlB,QAAAwsC,EAAA,IACA,IAAAl5C,MAAAkP,QAAAmqC,OAAA7oC,QAAA,aACA,GAAA8oC,GAAA,gBACApkC,EACA63B,iBACAhK,WACAvuB,WACA,IACA+kC,EAAArkC,EAAAE,KAAAZ,UACAzG,GAAAsC,KAAA,wGACAipC,EAAA,OACAC,EAAA,sDAOAvjB,EAAAz0B,UAAA60B,iBAAA,SAAAD,GACA1xB,KAAAqzC,WAAA3hB,EACA1xB,KAAA20B,KAAA,wBACA30B,KAAAqzC,WACArzC,KAAA+0C,UAKA/0C,KAAA2yC,YACA3yC,KAAAg0C,YAAA,YAA6C,cAG7Ch0C,KAAAg1C,uCAAAtjB,IAMAH,EAAAz0B,UAAAk4C,uCAAA,SAAAC,IAGAA,GAAA,KAAAA,EAAA12C,QACAgL,EAAAxC,QAAAkuC,MACAj1C,KAAA20B,KAAA,iEACA30B,KAAA6yC,mBAzMA,MAgNAthB,EAAAz0B,UAAAi4C,QAAA,WACA,GAAAj1C,GAAAE,IACA,IAAAA,KAAA2yC,YAAA3yC,KAAAqzC,WAAA,CACA,GAAA6B,GAAAl1C,KAAAqzC,WACA8B,EAAA5rC,EAAAtC,cAAAiuC,GAAA,eACAE,GAA+BhwB,KAAA8vB,EAC/B,QAAAl1C,KAAAoyC,cACAgD,EAAA,UAEA,iBAAAp1C,MAAAoyC,gBACAgD,EAAA,QAAAp1C,KAAAoyC,eAEApyC,KAAAg0C,YAAAmB,EAAAC,EAAA,SAAAxS,GACA,GAAA/gC,GAAA+gC,EAAA,EACAz2B,EAAAy2B,EAAA,UACA9iC,GAAAuzC,aAAA6B,IACA,OAAArzC,EACA/B,EAAAyzC,uBAAA,EAIAzzC,EAAAu1C,eAAAxzC,EAAAsK,QASAolB,EAAAz0B,UAAAm2B,SAAA,SAAAxiB,EAAA4hB,GACA,GAAAhgB,GAAA5B,EAAAE,KAAAZ,WACAiW,EAAAvV,EAAAg6B,iBACAzqC,MAAA20B,KAAA,uBAAAtiB,EAAA,IAAA2T,GACA3c,EAAAlE,OAAAsL,EAAA63B,iBAAA8L,cACA3jC,EAAA63B,iBAAAgI,eAAA,wDACAtwC,KAAA20C,cAAAtiC,EAAA2T,IACAhmB,KAAA2yC,YACA3yC,KAAAs1C,cAAAjjC,EAAA2T,EAAAvV,EAAA85B,cAAAlY,IAGAd,EAAAz0B,UAAAw4C,cAAA,SAAAjjC,EAAA2T,EAAAuvB,EAAAljB,GACAryB,KAAA20B,KAAA,eAAAtiB,EAAA,QAAA2T,EACA,IAAAwuB,IAAmBxvC,EAAAqN,EAGnBggB,KACAmiB,EAAA,EAAAe,EACAf,EAAA,EAAAniB,GAEAryB,KAAAg0C,YANA,IAMAQ,IAKAjjB,EAAAz0B,UAAA05B,gBAAA,SAAAnkB,EAAAlG,EAAAomB,GACAvyB,KAAA2yC,WACA3yC,KAAAw1C,kBAAA,IAAAnjC,EAAAlG,EAAAomB,GAGAvyB,KAAA0yC,0BAAArxC,MACAgR,aACAiI,OAAA,IACAnO,OACAomB,gBAOAhB,EAAAz0B,UAAA85B,kBAAA,SAAAvkB,EAAAlG,EAAAomB,GACAvyB,KAAA2yC,WACA3yC,KAAAw1C,kBAAA,KAAAnjC,EAAAlG,EAAAomB,GAGAvyB,KAAA0yC,0BAAArxC,MACAgR,aACAiI,OAAA,KACAnO,OACAomB,gBAOAhB,EAAAz0B,UAAAu5B,mBAAA,SAAAhkB,EAAAkgB,GACAvyB,KAAA2yC,WACA3yC,KAAAw1C,kBAAA,KAAAnjC,EAAA,KAAAkgB,GAGAvyB,KAAA0yC,0BAAArxC,MACAgR,aACAiI,OAAA,KACAnO,KAAA,KACAomB,gBAIAhB,EAAAz0B,UAAA04C,kBAAA,SAAAl7B,EAAAjI,EAAAlG,EAAAomB,GACA,GAAAkjB,IAAuBzwC,EAAAqN,EAAA8J,EAAAhQ,EACvBnM,MAAA20B,KAAA,gBAAAra,EAAAm7B,GACAz1C,KAAAg0C,YAAA15B,EAAAm7B,EAAA,SAAAC,GACAnjB,GACAzlB,WAAA,WACAylB,EAAAmjB,EAAA,EAAAA,EAAA,IACiB3oC,KAAAC,MAAA,OAOjBukB,EAAAz0B,UAAAo4B,IAAA,SAAA7iB,EAAAlG,EAAAomB,EAAAjZ,GACAtZ,KAAA21C,YAAA,IAAAtjC,EAAAlG,EAAAomB,EAAAjZ,IAKAiY,EAAAz0B,UAAAi5B,MAAA,SAAA1jB,EAAAlG,EAAAomB,EAAAjZ,GACAtZ,KAAA21C,YAAA,IAAAtjC,EAAAlG,EAAAomB,EAAAjZ,IAEAiY,EAAAz0B,UAAA64C,YAAA,SAAAr7B,EAAAjI,EAAAlG,EAAAomB,EAAAjZ,GACA,GAAAm8B,IACAzwC,EAAAqN,EACA8J,EAAAhQ,OAEA0X,KAAAvK,IACAm8B,EAAA,EAAAn8B,GAEAtZ,KAAAwyC,iBAAAnxC,MACAiZ,SACAm7B,UACAljB,eAEAvyB,KAAAyyC,sBACA,IAAA94B,GAAA3Z,KAAAwyC,iBAAAj0C,OAAA,CACAyB,MAAA2yC,WACA3yC,KAAA41C,SAAAj8B,GAGA3Z,KAAA20B,KAAA,kBAAAtiB,IAGAkf,EAAAz0B,UAAA84C,SAAA,SAAAj8B,GACA,GAAA7Z,GAAAE,KACAsa,EAAAta,KAAAwyC,iBAAA74B,GAAAW,OACAm7B,EAAAz1C,KAAAwyC,iBAAA74B,GAAA87B,QACAljB,EAAAvyB,KAAAwyC,iBAAA74B,GAAA4Y,UACAvyB,MAAAwyC,iBAAA74B,GAAAk8B,OAAA71C,KAAA2yC,WACA3yC,KAAAg0C,YAAA15B,EAAAm7B,EAAA,SAAAl0C,GACAzB,EAAA60B,KAAAra,EAAA,YAAA/Y,SACAzB,GAAA0yC,iBAAA74B,GACA7Z,EAAA2yC,uBAEA,IAAA3yC,EAAA2yC,uBACA3yC,EAAA0yC,qBAEAjgB,GACAA,EAAAhxB,EAAA,EAAAA,EAAA,MAMAgwB,EAAAz0B,UAAAg5C,YAAA,SAAA1e,GACA,GAAAt3B,GAAAE,IAEA,IAAAA,KAAA2yC,WAAA,CACA,GAAA8C,IAA2BpnC,EAAA+oB,EAC3Bp3B,MAAA20B,KAAA,cAAA8gB,GACAz1C,KAAAg0C,YAAA,IAAAyB,EAAA,SAAAt3B,GAEA,UADAA,EAAA,EACA,CACA,GAAAgX,GAAAhX,EAAA,CACAre,GAAA60B,KAAA,sCAAAQ,QASA5D,EAAAz0B,UAAAi5C,eAAA,SAAAx0C,GACA,QAAAA,GAAA,CAEAvB,KAAA20B,KAAA,gBAAAvrB,EAAAxC,UAAArF,GACA,IAAAy0C,GAAAz0C,EAAA,EACA0yC,EAAAj0C,KAAAkzC,eAAA8C,EACA/B,WACAj0C,MAAAkzC,eAAA8C,GACA/B,EAAA1yC,EAAA,QAGA,aAAAA,GACA,0CAAAA,EAAA,KAEA,MAAAA,IAEAvB,KAAAi2C,YAAA10C,EAAA,EAAAA,EAAA,KAGAgwB,EAAAz0B,UAAAm5C,YAAA,SAAA37B,EAAAzN,GACA7M,KAAA20B,KAAA,sBAAAra,EAAAzN,GACA,MAAAyN,EACAta,KAAAmxB,cAAAtkB,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAAyN,EACAta,KAAAmxB,cAAAtkB,EAAA,EAAAA,EAAA,GACA,EAAAA,EAAA,GACA,MAAAyN,EACAta,KAAAk2C,iBAAArpC,EAAA,EAAAA,EAAA,GACA,OAAAyN,EACAta,KAAAq1C,eAAAxoC,EAAA,EAAAA,EAAA,GACA,OAAAyN,EACAta,KAAAm2C,uBAAAtpC,GAEAvD,EAAA5H,MAAA,6CACA0H,EAAAxC,UAAA0T,GACA,uCAEAiX,EAAAz0B,UAAAs5C,SAAA,SAAA5iB,EAAA6iB,GACAr2C,KAAA20B,KAAA,oBACA30B,KAAA2yC,YAAA,EACA3yC,KAAA0zC,gCAAA,GAAAntB,OAAA8M,UACArzB,KAAAs2C,iBAAA9iB,GACAxzB,KAAA+yC,cAAAsD,EACAr2C,KAAAwzC,kBACAxzC,KAAAu2C,oBAEAv2C,KAAAw2C,gBACAx2C,KAAAwzC,kBAAA,EACAxzC,KAAAoxB,kBAAA,IAEAG,EAAAz0B,UAAA62C,iBAAA,SAAApxC,GACA,GAAAzC,GAAAE,IACAqJ,GAAAlE,QAAAnF,KAAAozC,UAAA,0DACApzC,KAAAgzC,2BACA/qB,aAAAjoB,KAAAgzC,2BAIAhzC,KAAAgzC,0BAAAlmC,WAAA,WACAhN,EAAAkzC,0BAAA,KACAlzC,EAAA22C,wBACS1pC,KAAAC,MAAAzK,KAMTgvB,EAAAz0B,UAAA+2C,WAAA,SAAA6C,GAEAA,IACA12C,KAAAizC,UACAjzC,KAAA4yC,kBAAA5yC,KAAA6yC,qBACA7yC,KAAA20B,KAAA,2CACA30B,KAAA4yC,gBAAAX,EACAjyC,KAAAozC,WACApzC,KAAA2zC,iBAAA,IAGA3zC,KAAAizC,SAAAyD,GAEAnlB,EAAAz0B,UAAAi3C,UAAA,SAAA4C,GACAA,GACA32C,KAAA20B,KAAA,wBACA30B,KAAA4yC,gBAAAX,EACAjyC,KAAAozC,WACApzC,KAAA2zC,iBAAA,KAIA3zC,KAAA20B,KAAA,8CACA30B,KAAAozC,WACApzC,KAAAozC,UAAAwD,UAIArlB,EAAAz0B,UAAA+5C,sBAAA,WAQA,GAPA72C,KAAA20B,KAAA,4BACA30B,KAAA2yC,YAAA,EACA3yC,KAAAozC,UAAA,KAEApzC,KAAA82C,0BAEA92C,KAAAkzC,kBACAlzC,KAAA+2C,mBAAA,CACA,GAAA/2C,KAAAizC,UAKA,GAAAjzC,KAAA0zC,+BAAA,CAEA,GAAAsD,IAAA,GAAAzwB,OAAA8M,UAAArzB,KAAA0zC,8BACAsD,GAxfA,MAyfAh3C,KAAA4yC,gBAAAX,GACAjyC,KAAA0zC,+BAAA,UATA1zC,MAAA20B,KAAA,8CACA30B,KAAA4yC,gBAAA5yC,KAAA6yC,mBACA7yC,KAAAyzC,4BAAA,GAAAltB,OAAA8M,SASA,IAAA4jB,IAAA,GAAA1wB,OAAA8M,UAAArzB,KAAAyzC,2BACAyD,EAAAnqC,KAAAmH,IAAA,EAAAlU,KAAA4yC,gBAAAqE,EACAC,GAAAnqC,KAAA4a,SAAAuvB,EACAl3C,KAAA20B,KAAA,0BAAAuiB,EAAA,MACAl3C,KAAA2zC,iBAAAuD,GAEAl3C,KAAA4yC,gBAAA7lC,KAAAuC,IAAAtP,KAAA6yC,mBAngBA,IAmgBA7yC,KAAA4yC,iBAEA5yC,KAAAoxB,kBAAA,IAEAG,EAAAz0B,UAAA25C,qBAAA,WACA,GAAAz2C,KAAA+2C,mBAAA,CACA/2C,KAAA20B,KAAA,+BACA30B,KAAAyzC,4BAAA,GAAAltB,OAAA8M,UACArzB,KAAA0zC,+BAAA,IACA,IAAAyD,GAAAn3C,KAAA+1C,eAAA5qC,KAAAnL,MACAo3C,EAAAp3C,KAAAo2C,SAAAjrC,KAAAnL,MACA84B,EAAA94B,KAAA62C,sBAAA1rC,KAAAnL,MACAq3C,EAAAr3C,KAAAuD,GAAA,IAAAguB,EAAA+lB,oBACAnJ,EAAAnuC,KACAu3C,EAAAv3C,KAAA+yC,cACAyE,GAAA,EACAC,EAAA,KACAC,EAAA,WACAD,EACAA,EAAAb,SAGAY,GAAA,EACA1e,MAGA6e,EAAA,SAAAxD,GACA9qC,EAAAlE,OAAAsyC,EAAA,0DACAA,EAAAzD,YAAAG,GAEAn0C,MAAAozC,WACAwD,MAAAc,EACA1D,YAAA2D,EAEA,IAAAC,GAAA53C,KAAAszC,kBACAtzC,MAAAszC,oBAAA,EAEAtzC,KAAAmyC,mBACA0F,SAAAD,GACAp2C,KAAA,SAAA2c,GACAq5B,EAUAluC,EAAA4B,IAAA,0CATA5B,EAAA4B,IAAA,8CACAijC,EAAAkF,WAAAl1B,KAAA25B,YACAL,EAAA,GAAA1F,GAAAgG,WAAAV,EAAAlJ,EAAAne,UAAAmnB,EAAAC,EAAAte,EACA,SAAApoB,GACApH,EAAAsC,KAAA8E,EAAA,KAAAy9B,EAAAne,UAAAjgB,WAAA,KACAo+B,EAAAhX,UA/iBA,gBAgjBqBogB,MAMrB/1C,KAAA,cAAAE,GACAysC,EAAAxZ,KAAA,wBAAAjzB,GACA81C,IACAhuC,EAAA9D,UAAAkzB,YAIAtvB,EAAAsC,KAAAlK,GAEAg2C,SAQAnmB,EAAAz0B,UAAAq6B,UAAA,SAAAzmB,GACApH,EAAA4B,IAAA,uCAAAwF,GACA1Q,KAAAsyC,kBAAA5hC,IAAA,EACA1Q,KAAAozC,UACApzC,KAAAozC,UAAAwD,SAGA52C,KAAAgzC,4BACA/qB,aAAAjoB,KAAAgzC,2BACAhzC,KAAAgzC,0BAAA,MAEAhzC,KAAA2yC,YACA3yC,KAAA62C,0BAOAtlB,EAAAz0B,UAAA6iB,OAAA,SAAAjP,GACApH,EAAA4B,IAAA,mCAAAwF,SACA1Q,MAAAsyC,kBAAA5hC,GACAvH,EAAArB,QAAA9H,KAAAsyC,qBACAtyC,KAAA4yC,gBAAAX,EACAjyC,KAAAozC,WACApzC,KAAA2zC,iBAAA,KAIApiB,EAAAz0B,UAAAw5C,iBAAA,SAAA9iB,GACA,GAAAme,GAAAne,GAAA,GAAAjN,OAAA8M,SACArzB,MAAAwxB,qBAAkCwmB,iBAAArG,KAElCpgB,EAAAz0B,UAAAg6C,wBAAA,WACA,OAAAx4C,GAAA,EAAuBA,EAAA0B,KAAAwyC,iBAAAj0C,OAAkCD,IAAA,CACzD,GAAA42B,GAAAl1B,KAAAwyC,iBAAAl0C,EACA42B,IAAA,KAAAA,GAAAugB,SAAAvgB,EAAA2gB,SACA3gB,EAAA3C,YACA2C,EAAA3C,WAAA,oBACAvyB,MAAAwyC,iBAAAl0C,GACA0B,KAAAyyC,wBAIA,IAAAzyC,KAAAyyC,uBACAzyC,KAAAwyC,sBAOAjhB,EAAAz0B,UAAAo5C,iBAAA,SAAA7jC,EAAA5B,GAEA,GAAAuV,EAKAA,GAJAvV,EAIAA,EAAAzI,IAAA,SAAA0X,GAA8C,MAAApW,GAAAuE,kBAAA6R,KAAsChQ,KAAA,KAHpF,SAKA,IAAAojB,GAAA9yB,KAAA20C,cAAAtiC,EAAA2T,EACA8M,MAAAP,YACAO,EAAAP,WAAA,sBAQAhB,EAAAz0B,UAAA63C,cAAA,SAAAtiC,EAAA2T,GACA,GACA8M,GADAmlB,EAAA,GAAAl1B,GAAArR,KAAAW,GAAAtC,UAaA,YAXA8T,KAAA7jB,KAAAuyC,SAAA0F,IACAnlB,EAAA9yB,KAAAuyC,SAAA0F,GAAAjyB,SACAhmB,MAAAuyC,SAAA0F,GAAAjyB,GACA,IAAA7c,EAAAvB,SAAA5H,KAAAuyC,SAAA0F,WACAj4C,MAAAuyC,SAAA0F,IAKAnlB,MAAAjP,GAEAiP,GAEAvB,EAAAz0B,UAAAu4C,eAAA,SAAA6C,EAAAC,GACA7uC,EAAA4B,IAAA,uBAAAgtC,EAAA,IAAAC,GACAn4C,KAAAqzC,WAAA,KACArzC,KAAAszC,oBAAA,EACAtzC,KAAAozC,UAAAwD,QACA,kBAAAsB,GAAA,sBAAAA,KAIAl4C,KAAAuzC,wBArqBA,IAwqBAvzC,KAAA4yC,gBA7qBA,IAgrBA5yC,KAAAmyC,mBAAAiG,0BAIA7mB,EAAAz0B,UAAAq5C,uBAAA,SAAAtpC,GACA7M,KAAA8yC,uBACA9yC,KAAA8yC,uBAAAjmC,GAGA,OAAAA,IACAyqB,QAAApsB,IAAA,aAAA2B,EAAA,IAAAyW,QAAA,uBAIAiO,EAAAz0B,UAAA05C,cAAA,WACA,GAAA12C,GAAAE,IAEAA,MAAA+0C,UAGA5rC,EAAAzB,QAAA1H,KAAAuyC,SAAA,SAAAlgC,EAAAgmC,GACAlvC,EAAAzB,QAAA2wC,EAAA,SAAA55C,EAAA41C,GACAv0C,EAAAy0C,YAAAF,MAGA,QAAA/1C,GAAA,EAAuBA,EAAA0B,KAAAwyC,iBAAAj0C,OAAkCD,IACzD0B,KAAAwyC,iBAAAl0C,IACA0B,KAAA41C,SAAAt3C,EAEA,MAAA0B,KAAA0yC,0BAAAn0C,QAAA,CACA,GAAAk3C,GAAAz1C,KAAA0yC,0BAAA5yB,OACA9f,MAAAw1C,kBAAAC,EAAAn7B,OAAAm7B,EAAApjC,WAAAojC,EAAAtpC,KAAAspC,EAAAljB,cAOAhB,EAAAz0B,UAAAy5C,kBAAA,WACA,GAAAnf,MACAkhB,EAAA,IACA9uC,GAAA9D,UAAAkzB,WACA0f,EAAA,aAEA9uC,EAAA9D,UAAAizB,cACA2f,EAAA,QAEAlhB,EAAA,OAAAkhB,EAAA,IAAA1G,EAAArxB,QAAAsY,YAAAvV,QAAA,cACA5Z,EAAAvD,kBACAixB,EAAA,uBAEA1tB,EAAArD,kBACA+wB,EAAA,4BAEAp3B,KAAA81C,YAAA1e,IAMA7F,EAAAz0B,UAAAi6C,iBAAA,WACA,GAAAJ,GAAA7E,EAAAgC,cAAA5U,cAAAqZ,iBACA,OAAApvC,GAAArB,QAAA9H,KAAAsyC,oBAAAqE,GAKAplB,EAAA8gB,4BAAA,EAMA9gB,EAAA+lB,kBAAA,EACA/lB,GACCygB,EAAAwG,cACDvzC,GAAAssB,wBxDszRM,SAAU91B,EAAQwJ,EAAStJ,GAEjC,YyDrkTAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAKA88C,EAAA,WAIA,QAAAA,GAAAC,GACA14C,KAAA04C,iBACA14C,KAAA24C,cACAxvC,EAAAhE,OAAA5J,MAAAkP,QAAAiuC,MAAAn6C,OAAA,gCA6CA,MAtCAk6C,GAAA37C,UAAA87C,QAAA,SAAAn0B,GAEA,OADAla,MACAC,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CD,EAAAC,EAAA,GAAAtK,UAAAsK,EAEA,IAAAjP,MAAAkP,QAAAzK,KAAA24C,WAAAl0B,IAGA,OADAo0B,GAAA74C,KAAA24C,WAAAl0B,GAAAhS,QACAnU,EAAA,EAA2BA,EAAAu6C,EAAAt6C,OAAsBD,IACjDu6C,EAAAv6C,GAAAoQ,SAAApO,MAAAu4C,EAAAv6C,GAAAqQ,QAAApE,IAIAkuC,EAAA37C,UAAAyrC,GAAA,SAAA9jB,EAAA/V,EAAAC,GACA3O,KAAA84C,mBAAAr0B,GACAzkB,KAAA24C,WAAAl0B,GAAAzkB,KAAA24C,WAAAl0B,OACAzkB,KAAA24C,WAAAl0B,GAAApjB,MAAyCqN,WAAAC,WACzC,IAAAoqC,GAAA/4C,KAAAg5C,gBAAAv0B,EACAs0B,IACArqC,EAAApO,MAAAqO,EAAAoqC,IAGAN,EAAA37C,UAAAosC,IAAA,SAAAzkB,EAAA/V,EAAAC,GACA3O,KAAA84C,mBAAAr0B,EAEA,QADAo0B,GAAA74C,KAAA24C,WAAAl0B,OACAnmB,EAAA,EAAuBA,EAAAu6C,EAAAt6C,OAAsBD,IAC7C,GAAAu6C,EAAAv6C,GAAAoQ,gBACAC,OAAAkqC,EAAAv6C,GAAAqQ,SAEA,WADAkqC,GAAAI,OAAA36C,EAAA,IAKAm6C,EAAA37C,UAAAg8C,mBAAA,SAAAr0B,GACAtb,EAAAhE,OAAAnF,KAAA04C,eAAA1K,KAAA,SAAAkL,GACA,MAAAA,KAAAz0B,IACS,kBAAAA,IAETg0B,IAEAxzC,GAAAwzC,gBzD6lTM,SAAUh9C,EAAQwJ,EAAStJ,GAEjC,Y0D3pTAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACA8N,EAAA9N,EAAA,KACAuqC,EAAAvqC,EAAA,KACAw9C,EAAAx9C,EAAA,KA2BAo8C,EAAA,WAUA,QAAAA,GAAAx0C,EAAAysB,EAAAopB,EAAAhD,EAAA3lB,EAAA4oB,EAAAtG,GACA/yC,KAAAuD,KACAvD,KAAAgwB,YACAhwB,KAAAo5C,aACAp5C,KAAAo2C,WACAp2C,KAAAywB,gBACAzwB,KAAAq5C,UACAr5C,KAAA+yC,gBACA/yC,KAAAs5C,gBAAA,EACAt5C,KAAAu5C,uBACAv5C,KAAAw5C,OAAA,EACAx5C,KAAA20B,KAAAxrB,EAAAqC,WAAA,KAAAxL,KAAAuD,GAAA,KACAvD,KAAAy5C,kBAAA,GAAAN,GAAAO,iBAAA1pB,GACAhwB,KAAA20B,KAAA,sBACA30B,KAAA25C,SAiaA,MA3ZA5B,GAAAj7C,UAAA68C,OAAA,WACA,GAAA75C,GAAAE,KACA45C,EAAA55C,KAAAy5C,kBAAAI,kBACA75C,MAAA85C,MAAA,GAAAF,GAAA55C,KAAA+5C,mBAAA/5C,KAAAgwB,cAAAnM,GAAA7jB,KAAA+yC,eAGA/yC,KAAAg6C,0BAAAJ,EAAA,+BACA,IAAAK,GAAAj6C,KAAAk6C,cAAAl6C,KAAA85C,OACAK,EAAAn6C,KAAAo6C,iBAAAp6C,KAAA85C,MACA95C,MAAAq6C,IAAAr6C,KAAA85C,MACA95C,KAAAs6C,IAAAt6C,KAAA85C,MACA95C,KAAAu6C,eAAA,KACAv6C,KAAAw6C,YAAA,EAOA1tC,WAAA,WAEAhN,EAAAg6C,OAAAh6C,EAAAg6C,MAAAW,KAAAR,EAAAE,IACSptC,KAAAC,MAAA,GACT,IAAA0tC,GAAAd,EAAA,iBACAc,GAAA,IACA16C,KAAA26C,gBAAAxxC,EAAAqI,sBAAA,WACA1R,EAAA66C,gBAAA,KACA76C,EAAA06C,aACA16C,EAAAg6C,OACAh6C,EAAAg6C,MAAAc,cA5EA,QA6EA96C,EAAA60B,KAAA,wDACA70B,EAAAg6C,MAAAc,cACA,wCACA96C,EAAA06C,YAAA,EACA16C,EAAAg6C,MAAAe,yBAEA/6C,EAAAg6C,OACAh6C,EAAAg6C,MAAAgB,UArFA,MAsFAh7C,EAAA60B,KAAA,oDACA70B,EAAAg6C,MAAAgB,UACA,uCAKAh7C,EAAA60B,KAAA,+CACA70B,EAAA82C,WAGa7pC,KAAAC,MAAA0tC,MAOb3C,EAAAj7C,UAAAi9C,iBAAA,WACA,WAAA/5C,KAAAuD,GAAA,IAAAvD,KAAAs5C,mBAEAvB,EAAAj7C,UAAAs9C,iBAAA,SAAAR,GACA,GAAA95C,GAAAE,IACA,iBAAA+6C,GACAnB,IAAA95C,EAAAg6C,MACAh6C,EAAAk7C,kBAAAD,GAEAnB,IAAA95C,EAAAy6C,gBACAz6C,EAAA60B,KAAA,8BACA70B,EAAAm7C,8BAGAn7C,EAAA60B,KAAA,+BAIAojB,EAAAj7C,UAAAo9C,cAAA,SAAAN,GACA,GAAA95C,GAAAE,IACA,iBAAAuB,GACA,GAAAzB,EAAA05C,SACAI,IAAA95C,EAAAw6C,IACAx6C,EAAAo7C,0BAAA35C,GAEAq4C,IAAA95C,EAAAy6C,eACAz6C,EAAAq7C,4BAAA55C,GAGAzB,EAAA60B,KAAA,gCASAojB,EAAAj7C,UAAAk3C,YAAA,SAAAoH,GAEA,GAAAjH,IAAmB53B,EAAA,IAAAJ,EAAAi/B,EACnBp7C,MAAAq7C,UAAAlH,IAEA4D,EAAAj7C,UAAAw+C,qBAAA,WACAt7C,KAAAq6C,MAAAr6C,KAAAu6C,gBAAAv6C,KAAAs6C,MAAAt6C,KAAAu6C,iBACAv6C,KAAA20B,KAAA,2CAAA30B,KAAAu6C,eAAAgB,QACAv7C,KAAA85C,MAAA95C,KAAAu6C,eACAv6C,KAAAu6C,eAAA,OAIAxC,EAAAj7C,UAAA0+C,oBAAA,SAAAC,GACA,GA1JA,KA0JAA,GAAA,CACA,GAAAC,GAAAD,EAAA,CArJA,OAsJAC,EACA17C,KAAA27C,6BA1JA,MA4JAD,GAEA17C,KAAA20B,KAAA,wCACA30B,KAAAu6C,eAAA3D,QAEA52C,KAAAq6C,MAAAr6C,KAAAu6C,gBACAv6C,KAAAs6C,MAAAt6C,KAAAu6C,gBACAv6C,KAAA42C,SAjKA,MAoKA8E,IACA17C,KAAA20B,KAAA,0BACA30B,KAAA47C,8BACA57C,KAAA27C,gCAIA5D,EAAAj7C,UAAAq+C,4BAAA,SAAAU,GACA,GAAAC,GAAA3yC,EAAAwE,WAAA,IAAAkuC,GACA1vC,EAAAhD,EAAAwE,WAAA,IAAAkuC,EACA,SAAAC,EACA97C,KAAAw7C,oBAAArvC,OAEA,SAAA2vC,EAKA,SAAAnwC,OAAA,2BAAAmwC,EAHA97C,MAAAu5C,oBAAAl4C,KAAA8K,KAMA4rC,EAAAj7C,UAAA6+C,2BAAA,WACA37C,KAAA47C,6BAAA,GACA57C,KAAA20B,KAAA,oCACA30B,KAAAw6C,YAAA,EACAx6C,KAAAu6C,eAAAM,wBACA76C,KAAA+7C,wBAIA/7C,KAAA20B,KAAA,8BACA30B,KAAAu6C,eAAAyB,MAAsCz/B,EAAA,IAAAJ,GAAaI,EAhMnD,IAgMmDJ,UAGnD47B,EAAAj7C,UAAAi/C,oBAAA,WAEA/7C,KAAAu6C,eAAAt3C,QAEAjD,KAAA20B,KAAA,mCACA30B,KAAAu6C,eAAAyB,MAAkCz/B,EAAA,IAAAJ,GAAaI,EA1M/C,IA0M+CJ,QAG/Cnc,KAAA20B,KAAA,kCACA30B,KAAA85C,MAAAkC,MAAyBz/B,EAAA,IAAAJ,GAAaI,EA7MtC,IA6MsCJ,QACtCnc,KAAAq6C,IAAAr6C,KAAAu6C,eACAv6C,KAAAs7C,wBAEAvD,EAAAj7C,UAAAo+C,0BAAA,SAAAW,GAEA,GAAAC,GAAA3yC,EAAAwE,WAAA,IAAAkuC,GACA1vC,EAAAhD,EAAAwE,WAAA,IAAAkuC,EACA,MAAAC,EACA97C,KAAAi8C,WAAA9vC,GAEA,KAAA2vC,GACA97C,KAAA+1C,eAAA5pC,IAGA4rC,EAAAj7C,UAAAi5C,eAAA,SAAAx0C,GACAvB,KAAAk8C,qBAEAl8C,KAAAo5C,WAAA73C,IAEAw2C,EAAAj7C,UAAAo/C,mBAAA,WACAl8C,KAAAw6C,cACAx6C,KAAAg6C,2BACA,IACAh6C,KAAA20B,KAAA,kCACA30B,KAAAw6C,YAAA,EACAx6C,KAAA85C,MAAAe,0BAIA9C,EAAAj7C,UAAAm/C,WAAA,SAAAR,GACA,GAAAC,GAAAvyC,EAAAwE,WAnPA,IAmPA8tC,EACA,IAnPA,KAmPAA,GAAA,CACA,GAAAhH,GAAAgH,EAAA,CACA,IA7OA,MA6OAC,EACA17C,KAAAm8C,aAAA1H,OAEA,IAlPA,MAkPAiH,EAAA,CACA17C,KAAA20B,KAAA,qCACA30B,KAAAs6C,IAAAt6C,KAAAu6C,cACA,QAAAj8C,GAAA,EAA+BA,EAAA0B,KAAAu5C,oBAAAh7C,SAAqCD,EACpE0B,KAAA+1C,eAAA/1C,KAAAu5C,oBAAAj7C,GAEA0B,MAAAu5C,uBACAv5C,KAAAs7C,2BA9PA,MAgQAI,EAGA17C,KAAAo8C,sBAAA3H,GAlQA,MAoQAiH,EAEA17C,KAAAq8C,SAAA5H,GArQA,MAuQAiH,EACAvyC,EAAAzH,MAAA,iBAAA+yC,GAvQA,MAyQAiH,GACA17C,KAAA20B,KAAA,wBACA30B,KAAAk8C,qBACAl8C,KAAAs8C,iCAGAnzC,EAAAzH,MAAA,mCAAAg6C,KASA3D,EAAAj7C,UAAAq/C,aAAA,SAAAI,GACA,GAAA/oB,GAAA+oB,EAAAC,GACAC,EAAAF,EAAA1tC,EACAoW,EAAAs3B,EAAAG,CACA18C,MAAAq2C,UAAAkG,EAAAztC,EACA9O,KAAAgwB,UAAAyW,WAAAxhB,GAEA,GAAAjlB,KAAAw5C,SACAx5C,KAAA85C,MAAA72C,QACAjD,KAAA28C,yBAAA38C,KAAA85C,MAAAtmB,GACA0S,EAAAta,mBAAA6wB,GACAtzC,EAAAyC,KAAA,sCAGA5L,KAAA48C,qBAGA7E,EAAAj7C,UAAA8/C,iBAAA,WACA,GAAAhD,GAAA55C,KAAAy5C,kBAAAoD,kBACAjD,IACA55C,KAAA88C,cAAAlD,IAGA7B,EAAAj7C,UAAAggD,cAAA,SAAAlD,GACA,GAAA95C,GAAAE,IACAA,MAAAu6C,eAAA,GAAAX,GAAA55C,KAAA+5C,mBAAA/5C,KAAAgwB,UAAAhwB,KAAAq2C,WAGAr2C,KAAA47C,4BACAhC,EAAA,+BACA,IAAAmD,GAAA/8C,KAAAk6C,cAAAl6C,KAAAu6C,gBACAzf,EAAA96B,KAAAo6C,iBAAAp6C,KAAAu6C,eACAv6C,MAAAu6C,eAAAE,KAAAsC,EAAAjiB,GAEA3xB,EAAAqI,sBAAA,WACA1R,EAAAy6C,iBACAz6C,EAAA60B,KAAA,gCACA70B,EAAAy6C,eAAA3D,UAES7pC,KAAAC,MA7UT,OA+UA+qC,EAAAj7C,UAAAu/C,SAAA,SAAAp3B,GACAjlB,KAAA20B,KAAA,qCAAA1P,GACAjlB,KAAAgwB,UAAAyW,WAAAxhB,GAGA,IAAAjlB,KAAAw5C,OACAx5C,KAAA42C,SAIA52C,KAAAg9C,oBACAh9C,KAAA25C,WAGA5B,EAAAj7C,UAAA6/C,yBAAA,SAAA/C,EAAApmB,GACA,GAAA1zB,GAAAE,IACAA,MAAA20B,KAAA,oCACA30B,KAAA85C,MAAAF,EACA55C,KAAAw5C,OAAA,EACAx5C,KAAAo2C,WACAp2C,KAAAo2C,SAAA5iB,EAAAxzB,KAAAq2C,WACAr2C,KAAAo2C,SAAA,MAIA,IAAAp2C,KAAAg6C,2BACAh6C,KAAA20B,KAAA,kCACA30B,KAAAw6C,YAAA,GAGArxC,EAAAqI,sBAAA,WACA1R,EAAAw8C,iCACavvC,KAAAC,MA5Wb,OA+WA+qC,EAAAj7C,UAAAw/C,8BAAA,WAEAt8C,KAAAw6C,YAAA,IAAAx6C,KAAAw5C,SACAx5C,KAAA20B,KAAA,4BACA30B,KAAAq7C,WAA4B9+B,EAAA,IAAAJ,GAAaI,EArWzC,IAqWyCJ,UAGzC47B,EAAAj7C,UAAAm+C,2BAAA,WACA,GAAArB,GAAA55C,KAAAu6C,cACAv6C,MAAAu6C,eAAA,KACAv6C,KAAAq6C,MAAAT,GAAA55C,KAAAs6C,MAAAV,GAEA55C,KAAA42C,SASAmB,EAAAj7C,UAAAk+C,kBAAA,SAAAD,GACA/6C,KAAA85C,MAAA,KAGAiB,GAAA,IAAA/6C,KAAAw5C,OASA,IAAAx5C,KAAAw5C,QACAx5C,KAAA20B,KAAA,8BATA30B,KAAA20B,KAAA,+BAEA30B,KAAAgwB,UAAAuW,oBACA98B,EAAAkiB,kBAAArgB,OAAA,QAAAtL,KAAAgwB,UAAA/K,MAEAjlB,KAAAgwB,UAAAoW,aAAApmC,KAAAgwB,UAAA/K,OAMAjlB,KAAA42C,SAOAmB,EAAAj7C,UAAAs/C,sBAAA,SAAA1rC,GACA1Q,KAAA20B,KAAA,0DACA30B,KAAAq5C,UACAr5C,KAAAq5C,QAAA3oC,GACA1Q,KAAAq5C,QAAA,MAIAr5C,KAAAywB,cAAA,KACAzwB,KAAA42C,SAEAmB,EAAAj7C,UAAAu+C,UAAA,SAAAlvC,GACA,OAAAnM,KAAAw5C,OACA,kCAGAx5C,MAAAq6C,IAAA2B,KAAA7vC,IAMA4rC,EAAAj7C,UAAA85C,MAAA,WACA,IAAA52C,KAAAw5C,SACAx5C,KAAA20B,KAAA,gCACA30B,KAAAw5C,OAAA,EACAx5C,KAAAg9C,oBACAh9C,KAAAywB,gBACAzwB,KAAAywB,gBACAzwB,KAAAywB,cAAA,QAQAsnB,EAAAj7C,UAAAkgD,kBAAA,WACAh9C,KAAA20B,KAAA,iCACA30B,KAAA85C,QACA95C,KAAA85C,MAAAlD,QACA52C,KAAA85C,MAAA,MAEA95C,KAAAu6C,iBACAv6C,KAAAu6C,eAAA3D,QACA52C,KAAAu6C,eAAA,MAEAv6C,KAAA26C,kBACA1yB,aAAAjoB,KAAA26C,iBACA36C,KAAA26C,gBAAA,OAGA5C,IAEA9yC,GAAA8yC,c1DmrTM,SAAUt8C,EAAQwJ,EAAStJ,GAEjC,Y2D/oUAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAoyC,EAAApyC,EAAA,KACA6zB,EAAA7zB,EAAA,KACAshD,EAAAthD,EAAA,KACAuqC,EAAAvqC,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,IAEAsJ,GAAAi4C,8BAAA,QACAj4C,EAAAk4C,gCAAA,QACAl4C,EAAAm4C,kCAAA,aACAn4C,EAAAo4C,+BAAA,UACAp4C,EAAAq4C,2BAAA,KACAr4C,EAAAs4C,2BAAA,KACAt4C,EAAAu4C,+BAAA,MACAv4C,EAAAw4C,oCAAA,KACAx4C,EAAAy4C,oCAAA,MACAz4C,EAAA04C,qCAAA,KACA14C,EAAA24C,6BAAA,IACA34C,EAAA44C,sCAAA,UACA54C,EAAA64C,8CAAA,QAIA,IAuBAC,GAAA,WASA,QAAAA,GAAAxC,EAAAv2B,EAAAg5B,EAAAjL,GACA/yC,KAAAu7C,SACAv7C,KAAAglB,WACAhlB,KAAAg+C,qBACAh+C,KAAA+yC,gBACA/yC,KAAA86C,UAAA,EACA96C,KAAA46C,cAAA,EACA56C,KAAAi+C,gBAAA,EACAj+C,KAAA20B,KAAAxrB,EAAAqC,WAAA+vC,GACAv7C,KAAA8wB,OAAAtB,EAAAuB,aAAAC,cAAAhM,GACAhlB,KAAAk+C,MAAA,SAAAtX,GACA,MAAA5hB,GAAA2hB,cAAAT,EAAA9Z,aAAAwa,IAsOA,MA9NAmX,GAAAjhD,UAAA29C,KAAA,SAAAsC,EAAAjiB,GACA,GAAAh7B,GAAAE,IACAA,MAAAm+C,cAAA,EACAn+C,KAAAywB,cAAAqK,EACA96B,KAAAo+C,gBAAA,GAAAnB,GAAAoB,eAAAtB,GACA/8C,KAAAs+C,WAAA,EACAt+C,KAAAu+C,qBAAAzxC,WAAA,WACAhN,EAAA60B,KAAA,gCAEA70B,EAAA0+C,YACA1+C,EAAAy+C,qBAAA,MACSxxC,KAAAC,MA9CT,MAgDA7D,EAAAoD,oBAAA,WACA,IAAAzM,EAAAw+C,UAAA,CAGAx+C,EAAA2+C,gBAAA,GAAAC,GAAA,WAEA,OADAv+C,MACAqK,EAAA,EAAgCA,EAAAtK,UAAA3B,OAAuBiM,IACvDrK,EAAAqK,GAAAtK,UAAAsK,EAEA,IAAAm0C,GAAAx+C,EAAA,GAAAy+C,EAAAz+C,EAAA,GAAA0+C,EAAA1+C,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAEA,IADAL,EAAAg/C,wBAAA3+C,GACAL,EAAA2+C,gBAOA,GALA3+C,EAAAy+C,uBACAt2B,aAAAnoB,EAAAy+C,sBACAz+C,EAAAy+C,qBAAA,MAEAz+C,EAAAm+C,gBAAA,EACAU,GAAA15C,EAAAi4C,8BACAp9C,EAAAyD,GAAAq7C,EACA9+C,EAAAi/C,SAAAF,MAEA,IAAAF,IAAA15C,EAAAk4C,gCAiBA,SAAAxxC,OAAA,kCAAAgzC,EAfAC,IAGA9+C,EAAA2+C,gBAAAO,cAAA,EAGAl/C,EAAAs+C,gBAAAa,WAAAL,EAAA,WACA9+C,EAAA0+C,eAIA1+C,EAAA0+C,cAMa,WAEb,OADAr+C,MACAqK,EAAA,EAAgCA,EAAAtK,UAAA3B,OAAuBiM,IACvDrK,EAAAqK,GAAAtK,UAAAsK,EAEA,IAAA00C,GAAA/+C,EAAA,GAAAgM,EAAAhM,EAAA,EACAL,GAAAg/C,wBAAA3+C,GACAL,EAAAs+C,gBAAAe,eAAAD,EAAA/yC,IACa,WACbrM,EAAA0+C,aACa1+C,EAAAo+C,MAGb,IAAAkB,KACAA,GAAAn6C,EAAAi4C,+BAAA,IACAkC,EAAAn6C,EAAAu4C,gCAAAzwC,KAAAC,MAAA,IAAAD,KAAA4a,UACA7nB,EAAA2+C,gBAAAY,2BACAD,EAAAn6C,EAAAw4C,qCAAA39C,EAAA2+C,gBAAAY,0BACAD,EAAAlZ,EAAAra,eAAAqa,EAAAta,iBACA9rB,EAAAk+C,qBACAoB,EAAAlZ,EAAApa,yBAAAhsB,EAAAk+C,oBAEAl+C,EAAAizC,gBACAqM,EAAAlZ,EAAAha,oBAAApsB,EAAAizC,gBAEA1pC,EAAAjD,aACA,oBAAA5G,WACAA,SAAA2Q,OACA,IAAA3Q,SAAA2Q,KAAApE,QAAAm6B,EAAAja,gBACAmzB,EAAAlZ,EAAAna,eAAAma,EAAAla,UAEA,IAAAszB,GAAAx/C,EAAAo+C,MAAAkB,EACAt/C,GAAA60B,KAAA,+BAAA2qB,GACAx/C,EAAA2+C,gBAAAc,OAAAD,EAAA,kBAQAvB,EAAAjhD,UAAAmG,MAAA,WACAjD,KAAAy+C,gBAAAe,cAAAx/C,KAAAuD,GAAAvD,KAAA++C,UACA/+C,KAAAy/C,uBAAAz/C,KAAAuD,GAAAvD,KAAA++C,WAKAhB,EAAA2B,WAAA,WACA3B,EAAA4B,aAAA,GAKA5B,EAAA6B,cAAA,WACA7B,EAAA8B,gBAAA,GAGA9B,EAAA+B,YAAA,WAGA,MAAA/B,GAAA4B,cACA5B,EAAA8B,gBACA,oBAAApzC,WACA,MAAAA,SAAAzK,gBACAmH,EAAA8G,mCACA9G,EAAAiH,sBACA/G,EAAAjD,aAKA23C,EAAAjhD,UAAA+9C,sBAAA,aAKAkD,EAAAjhD,UAAAijD,UAAA,WACA//C,KAAAs+C,WAAA,EACAt+C,KAAAy+C,kBACAz+C,KAAAy+C,gBAAA7H,QACA52C,KAAAy+C,gBAAA,MAGAz+C,KAAAggD,iBACAvzC,SAAAI,KAAAozC,YAAAjgD,KAAAggD,gBACAhgD,KAAAggD,eAAA,MAEAhgD,KAAAu+C,uBACAt2B,aAAAjoB,KAAAu+C,sBACAv+C,KAAAu+C,qBAAA,OAOAR,EAAAjhD,UAAA0hD,UAAA,WACAx+C,KAAAs+C,YACAt+C,KAAA20B,KAAA,8BACA30B,KAAA+/C,YACA//C,KAAAywB,gBACAzwB,KAAAywB,cAAAzwB,KAAAi+C,gBACAj+C,KAAAywB,cAAA,QAQAstB,EAAAjhD,UAAA85C,MAAA,WACA52C,KAAAs+C,YACAt+C,KAAA20B,KAAA,6BACA30B,KAAA+/C,cAQAhC,EAAAjhD,UAAAk/C,KAAA,SAAA7vC,GACA,GAAA+zC,GAAA92C,EAAAxC,UAAAuF,EACAnM,MAAA86C,WAAAoF,EAAA3hD,OACAyB,KAAA8wB,OAAAiH,iBAAA,aAAAmoB,EAAA3hD,OAQA,QANA4hD,GAAA/2C,EAAA5D,aAAA06C,GAGA9xC,EAAAjF,EAAA8E,kBAAAkyC,EAzOAC,MA4OA9hD,EAAA,EAAuBA,EAAA8P,EAAA7P,OAAqBD,IAC5C0B,KAAAy+C,gBAAA4B,eAAArgD,KAAAm+C,cAAA/vC,EAAA7P,OAAA6P,EAAA9P,IACA0B,KAAAm+C,iBAUAJ,EAAAjhD,UAAA2iD,uBAAA,SAAAl8C,EAAA+8C,GACA,IAAAj3C,EAAAjD,YAAA,CAEApG,KAAAggD,eAAAvzC,SAAAzK,cAAA,SACA,IAAAo9C,KACAA,GAAAn6C,EAAA64C,+CAAA,IACAsB,EAAAn6C,EAAAq4C,4BAAA/5C,EACA67C,EAAAn6C,EAAAs4C,4BAAA+C,EACAtgD,KAAAggD,eAAAO,IAAAvgD,KAAAk+C,MAAAkB,GACAp/C,KAAAggD,eAAAx+B,MAAAg/B,QAAA,OACA/zC,SAAAI,KAAA4zC,YAAAzgD,KAAAggD,kBAOAjC,EAAAjhD,UAAAgiD,wBAAA,SAAA3+C,GAEA,GAAAy6C,GAAAxxC,EAAAxC,UAAAzG,GAAA5B,MACAyB,MAAA46C,iBACA56C,KAAA8wB,OAAAiH,iBAAA,iBAAA6iB,IAEAmD,IAEA94C,GAAA84C,uBAKA,IAAAW,GAAA,WAOA,QAAAA,GAAAgC,EAAAC,EAAA7lB,EAAAojB,GAoBA,GAnBAl+C,KAAA86B,eACA96B,KAAAk+C,QAMAl+C,KAAA4gD,oBAAA,GAAA7S,GAAAE,WAEAjuC,KAAA6gD,eAMA7gD,KAAA8gD,cAAA/zC,KAAAC,MAAA,IAAAD,KAAA4a,UAGA3nB,KAAAg/C,cAAA,EACA31C,EAAAjD,YAkCApG,KAAA0gD,YACA1gD,KAAA2gD,kBAnCA,CAKA3gD,KAAAq/C,yBAAAl2C,EAAAW,gBACAvK,OAAA0F,EAAAm4C,kCAAAp9C,KAAAq/C,0BAAAqB,EACAnhD,OAAA0F,EAAAo4C,+BAAAr9C,KAAAq/C,0BAAAsB,EAEA3gD,KAAA+gD,SAAArC,EAAAsC,eAEA,IAAAC,GAAA,EAGA,IAAAjhD,KAAA+gD,SAAAR,KACA,gBAAAvgD,KAAA+gD,SAAAR,IAAAzwC,OAAA,gBAAAvR,QAAA,CAEA0iD,EAAA,4BADAx0C,SAAAg5B,OACA,eAEA,GAAAyb,GAAA,eAAAD,EAAA,gBACA,KACAjhD,KAAA+gD,SAAAI,IAAA1G,OACAz6C,KAAA+gD,SAAAI,IAAAC,MAAAF,GACAlhD,KAAA+gD,SAAAI,IAAAvK,QAEA,MAAA7nC,GACA5F,EAAA+B,IAAA,2BACA6D,EAAAkC,OACA9H,EAAA+B,IAAA6D,EAAAkC,OAEA9H,EAAA+B,IAAA6D,KAsPA,MAxOA2vC,GAAAsC,cAAA,WACA,GAAAK,GAAA50C,SAAAzK,cAAA,SAGA,IAFAq/C,EAAA7/B,MAAAg/B,QAAA,QAEA/zC,SAAAI,KAuBA,wGAtBAJ,UAAAI,KAAA4zC,YAAAY,EACA,KAIAA,EAAAC,cAAA70C,UAGAtD,EAAA+B,IAAA,iCAGA,MAAA6D,GACA,GAAA02B,GAAAh5B,SAAAg5B,MACA4b,GAAAd,IACA,gEACA9a,EACA,2BAkBA,MATA4b,GAAAE,gBACAF,EAAAF,IAAAE,EAAAE,gBAEAF,EAAAC,cACAD,EAAAF,IAAAE,EAAAC,cAAA70C,SAEA40C,EAAA50C,WACA40C,EAAAF,IAAAE,EAAA50C,UAEA40C,GAKA3C,EAAA5hD,UAAA85C,MAAA,WACA,GAAA92C,GAAAE,IAeA,IAbAA,KAAAwhD,OAAA,EACAxhD,KAAA+gD,WAIA/gD,KAAA+gD,SAAAI,IAAAt0C,KAAA40C,UAAA,GACA30C,WAAA,WACA,OAAAhN,EAAAihD,WACAt0C,SAAAI,KAAAozC,YAAAngD,EAAAihD,UACAjhD,EAAAihD,SAAA,OAEah0C,KAAAC,MAAA,KAEb3D,EAAAjD,aAAApG,KAAA0hD,KAAA,CACA,GAAAtC,KACAA,GAAAn6C,EAAA44C,uCAAA,IACAuB,EAAAn6C,EAAAq4C,4BAAAt9C,KAAA0hD,KACAtC,EAAAn6C,EAAAs4C,4BAAAv9C,KAAA2hD,IACA,IAAAC,GAAA5hD,KAAAk+C,MAAAkB,EACAV,GAAAmD,gBAAAD,GAGA,GAAA9mB,GAAA96B,KAAA86B,YACAA,KACA96B,KAAA86B,aAAA,KACAA,MAQA4jB,EAAA5hD,UAAA0iD,cAAA,SAAAj8C,EAAA+8C,GAKA,IAJAtgD,KAAA0hD,KAAAn+C,EACAvD,KAAA2hD,KAAArB,EACAtgD,KAAAwhD,OAAA,EAEAxhD,KAAA8hD,kBASApD,EAAA5hD,UAAAglD,YAAA,WAIA,GAAA9hD,KAAAwhD,OACAxhD,KAAAg/C,cACAh/C,KAAA4gD,oBAAA9nC,SAAA9Y,KAAA6gD,YAAAtiD,OAAA,QAEAyB,KAAA8gD,eACA,IAAA1B,KACAA,GAAAn6C,EAAAq4C,4BAAAt9C,KAAA0hD,KACAtC,EAAAn6C,EAAAs4C,4BAAAv9C,KAAA2hD,KACAvC,EAAAn6C,EAAAu4C,gCAAAx9C,KAAA8gD,aAKA,KAJA,GAAAc,GAAA5hD,KAAAk+C,MAAAkB,GAEA2C,EAAA,GACAzjD,EAAA,EACA0B,KAAA6gD,YAAAtiD,OAAA,IAGA,KADAyB,KAAA6gD,YAAA,GACA1kC,EAAA5d,OAhdA,GAgdAwjD,EAAAxjD,QAjdA,MAyeA,KArBA,IAAAyjD,GAAAhiD,KAAA6gD,YAAA/gC,OACAiiC,GACAA,EACA,IACA98C,EAAAy4C,oCACAp/C,EACA,IACA0jD,EAAAC,IACA,IACAh9C,EAAA04C,qCACAr/C,EACA,IACA0jD,EAAAxF,GACA,IACAv3C,EAAA24C,6BACAt/C,EACA,IACA0jD,EAAA7lC,EACA7d,IAQA,MAFAsjD,IAAAG,EACA/hD,KAAAkiD,gBAAAN,EAAA5hD,KAAA8gD,gBACA,EAGA,UASApC,EAAA5hD,UAAAujD,eAAA,SAAA8B,EAAAC,EAAAj2C,GAEAnM,KAAA6gD,YAAAx/C,MAA+B4gD,IAAAE,EAAA3F,GAAA4F,EAAAjmC,EAAAhQ,IAG/BnM,KAAAwhD,OACAxhD,KAAA8hD,eASApD,EAAA5hD,UAAAolD,gBAAA,SAAA5iB,EAAA+iB,GACA,GAAAviD,GAAAE,IAEAA,MAAA4gD,oBAAA1S,IAAAmU,EAAA,EACA,IAAAC,GAAA,WACAxiD,EAAA8gD,oBAAAt1C,OAAA+2C,GACAviD,EAAAgiD,eAIAS,EAAAz1C,WAAAw1C,EAAAv1C,KAAAC,MAzgBA,OA0gBAw1C,EAAA,WAEAv6B,aAAAs6B,GAEAD,IAEAtiD,MAAAu/C,OAAAjgB,EAAAkjB,IAOA9D,EAAA5hD,UAAAyiD,OAAA,SAAAjgB,EAAAmjB,GACA,GAAA3iD,GAAAE,IACAqJ,GAAAjD,YACApG,KAAA0iD,eAAApjB,EAAAmjB,GAGA31C,WAAA,WACA,IAEA,IAAAhN,EAAAk/C,aACA,MACA,IAAA2D,GAAA7iD,EAAAihD,SAAAI,IAAAn/C,cAAA,SACA2gD,GAAAn/C,KAAA,kBACAm/C,EAAAn6C,OAAA,EACAm6C,EAAApC,IAAAjhB,EACAqjB,EAAAC,OAAAD,EAAAE,mBAAA,WACA,GAAAC,GAAAH,EAAAj2C,UACAo2C,IAAA,WAAAA,GAAA,aAAAA,IACAH,EAAAC,OAAAD,EAAAE,mBAAA,KACAF,EAAAI,YACAJ,EAAAI,WAAA9C,YAAA0C,GAEAF,MAGAE,EAAAK,QAAA,WACA75C,EAAA+B,IAAA,oCAAAo0B,GACAx/B,EAAAk/C,cAAA,EACAl/C,EAAA82C,SAEA92C,EAAAihD,SAAAI,IAAAt0C,KAAA4zC,YAAAkC,GAEA,MAAA5zC,MAGahC,KAAAC,MAAA,KAGb0xC,IAEAz5C,GAAAy5C,8B3DuqUM,SAAUjjD,EAAQwJ,EAAStJ,GAEjC,cAC4B,SAASsnD,G4DzvVrC,QAAAC,GAAAC,GACAC,EAAAD,EApBApnD,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA01C,GAAAj2C,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA6zB,EAAA7zB,EAAA,KACAuqC,EAAAvqC,EAAA,KACA0N,EAAA1N,EAAA,KACA8N,EAAA9N,EAAA,KACA2N,EAAA3N,EAAA,KACA4N,EAAA5N,EAAA,KAGAynD,EAAA,IACA,qBAAAC,cACAD,EAAAC,aAEA,oBAAAC,aACAF,EAAAE,WAKAr+C,EAAAi+C,kBAMA,IAAAK,GAAA,WAQA,QAAAA,GAAAhI,EAAAv2B,EAAAg5B,EAAAjL,GACA/yC,KAAAu7C,SACAv7C,KAAAwjD,eAAA,KACAxjD,KAAAyjD,OAAA,KACAzjD,KAAA0jD,YAAA,EACA1jD,KAAA86C,UAAA,EACA96C,KAAA46C,cAAA,EACA56C,KAAA20B,KAAAvrB,EAAAoC,WAAAxL,KAAAu7C,QACAv7C,KAAA8wB,OAAAtB,EAAAuB,aAAAC,cAAAhM,GACAhlB,KAAA6mC,QAAA0c,EAAAI,eAAA3+B,EAAAg5B,EAAAjL,GA6RA,MAnRAwQ,GAAAI,eAAA,SAAA3+B,EAAAg5B,EAAAjL,GACA,GAAAqM,KAcA,OAbAA,GAAAlZ,EAAAra,eAAAqa,EAAAta,kBACAriB,EAAAnD,aACA,oBAAA5G,WACAA,SAAA2Q,OACA,IAAA3Q,SAAA2Q,KAAApE,QAAAm6B,EAAAja,gBACAmzB,EAAAlZ,EAAAna,eAAAma,EAAAla,WAEAgyB,IACAoB,EAAAlZ,EAAApa,yBAAAkyB,GAEAjL,IACAqM,EAAAlZ,EAAAha,oBAAA6mB,GAEA/tB,EAAA2hB,cAAAT,EAAA/Z,UAAAizB,IAOAmE,EAAAzmD,UAAA29C,KAAA,SAAAsC,EAAAjiB,GACA,GAAAh7B,GAAAE,IACAA,MAAA86B,eACA96B,KAAA+8C,YACA/8C,KAAA20B,KAAA,2BAAA30B,KAAA6mC,SACA7mC,KAAAi+C,gBAAA,EAEAx0C,EAAAkiB,kBAAAtgB,IAAA,gCACA,KACA,GAAA9B,EAAAnD,YAAA,CACA,GAAAw9C,GAAAv6C,EAAA3D,UAAAkzB,WAAA,mBAEAtH,GACAuyB,SACAC,aAAA,YAAA5d,EAAAta,iBAAA,IAAAgmB,EAAArxB,QAAAsY,YAAA,IAAAoqB,EAAAc,SAAA,IAAAH,IAIAI,EAAAjoD,QAAAkoD,SAAA,aAAAC,WAAA,KACAC,EAAA,GAAAnkD,KAAA6mC,QAAA96B,QAAA,UACAi4C,EAAA,aAAAA,EAAA,YACAA,EAAA,YAAAA,EAAA,UACAG,KACA7yB,EAAA,OAAwC8yB,OAAAD,IAExCnkD,KAAAqkD,OAAA,GAAAjB,GAAApjD,KAAA6mC,WAAAvV,OAGAtxB,MAAAqkD,OAAA,GAAAjB,GAAApjD,KAAA6mC,SAGA,MAAA93B,GACA/O,KAAA20B,KAAA,iCACA,IAAAjzB,GAAAqN,EAAAxN,SAAAwN,EAAA5C,IAKA,OAJAzK,IACA1B,KAAA20B,KAAAjzB,OAEA1B,MAAAw+C,YAGAx+C,KAAAqkD,OAAAC,OAAA,WACAxkD,EAAA60B,KAAA,wBACA70B,EAAAm+C,gBAAA,GAEAj+C,KAAAqkD,OAAAE,QAAA,WACAzkD,EAAA60B,KAAA,0CACA70B,EAAAukD,OAAA,KACAvkD,EAAA0+C,aAEAx+C,KAAAqkD,OAAAG,UAAA,SAAAtlC,GACApf,EAAA2kD,oBAAAvlC,IAEAlf,KAAAqkD,OAAArB,QAAA,SAAAj0C,GACAjP,EAAA60B,KAAA,wCACA,IAAAjzB,GAAAqN,EAAAxN,SAAAwN,EAAA5C,IACAzK,IACA5B,EAAA60B,KAAAjzB,GAEA5B,EAAA0+C,cAMA+E,EAAAzmD,UAAAmG,MAAA,aACAsgD,EAAA3D,cAAA,WACA2D,EAAA1D,gBAAA,GAEA0D,EAAAzD,YAAA,WACA,GAAA4E,IAAA,CACA,wBAAAC,sBAAAC,UAAA,CACA,GAAAC,GAAA,iCACAC,EAAAH,UAAAC,UAAAG,MAAAF,EACAC,MAAAvmD,OAAA,GACAymD,WAAAF,EAAA,UACAJ,GAAA,GAIA,OAAAA,GACA,OAAAtB,IACAG,EAAA1D,gBAMA0D,EAAA0B,iBAAA,WAGA,MAAAx7C,GAAAkiB,kBAAAu5B,oBACA,IAAAz7C,EAAAkiB,kBAAApgB,IAAA,+BAEAg4C,EAAAzmD,UAAA+9C,sBAAA,WACApxC,EAAAkiB,kBAAArgB,OAAA,+BAEAi4C,EAAAzmD,UAAAqoD,aAAA,SAAAh5C,GAEA,GADAnM,KAAAyjD,OAAApiD,KAAA8K,GACAnM,KAAAyjD,OAAAllD,QAAAyB,KAAA0jD,YAAA,CACA,GAAA0B,GAAAplD,KAAAyjD,OAAA/zC,KAAA,GACA1P,MAAAyjD,OAAA,IACA,IAAA4B,GAAA/7C,EAAA3C,SAAAy+C,EAEAplD,MAAA+8C,UAAAsI,KAOA9B,EAAAzmD,UAAAwoD,qBAAA,SAAAC,GACAvlD,KAAA0jD,YAAA6B,EACAvlD,KAAAyjD,WAQAF,EAAAzmD,UAAA0oD,mBAAA,SAAAr5C,GAIA,GAHAhD,EAAAhE,OAAA,OAAAnF,KAAAyjD,OAAA,kCAGAt3C,EAAA5N,QAAA,GACA,GAAAgnD,GAAAn5C,OAAAD,EACA,KAAAs5C,MAAAF,GAEA,MADAvlD,MAAAslD,qBAAAC,GACA,KAIA,MADAvlD,MAAAslD,qBAAA,GACAn5C,GAMAo3C,EAAAzmD,UAAA2nD,oBAAA,SAAAiB,GACA,UAAA1lD,KAAAqkD,OAAA,CAEA,GAAAl4C,GAAAu5C,EAAA,IAIA,IAHA1lD,KAAA46C,eAAAzuC,EAAA5N,OACAyB,KAAA8wB,OAAAiH,iBAAA,iBAAA5rB,EAAA5N,QACAyB,KAAA2lD,iBACA,OAAA3lD,KAAAyjD,OAEAzjD,KAAAmlD,aAAAh5C,OAEA,CAEA,GAAAy5C,GAAA5lD,KAAAwlD,mBAAAr5C,EACA,QAAAy5C,GACA5lD,KAAAmlD,aAAAS,MAQArC,EAAAzmD,UAAAk/C,KAAA,SAAA7vC,GACAnM,KAAA2lD,gBACA,IAAAzF,GAAA52C,EAAA1C,UAAAuF,EACAnM,MAAA86C,WAAAoF,EAAA3hD,OACAyB,KAAA8wB,OAAAiH,iBAAA,aAAAmoB,EAAA3hD,OAGA,IAAA6P,GAAAhF,EAAA6E,kBAAAiyC,EA3OA,MA6OA9xC,GAAA7P,OAAA,GACAyB,KAAA6lD,YAAArzC,OAAApE,EAAA7P,QAGA,QAAAD,GAAA,EAAuBA,EAAA8P,EAAA7P,OAAqBD,IAC5C0B,KAAA6lD,YAAAz3C,EAAA9P,KAGAilD,EAAAzmD,UAAAijD,UAAA,WACA//C,KAAAs+C,WAAA,EACAt+C,KAAAwjD,iBACAsC,cAAA9lD,KAAAwjD,gBACAxjD,KAAAwjD,eAAA,MAEAxjD,KAAAqkD,SACArkD,KAAAqkD,OAAAzN,QACA52C,KAAAqkD,OAAA,OAGAd,EAAAzmD,UAAA0hD,UAAA,WACAx+C,KAAAs+C,YACAt+C,KAAA20B,KAAA,+BACA30B,KAAA+/C,YAEA//C,KAAA86B,eACA96B,KAAA86B,aAAA96B,KAAAi+C,gBACAj+C,KAAA86B,aAAA,QAQAyoB,EAAAzmD,UAAA85C,MAAA,WACA52C,KAAAs+C,YACAt+C,KAAA20B,KAAA,6BACA30B,KAAA+/C,cAOAwD,EAAAzmD,UAAA6oD,eAAA,WACA,GAAA7lD,GAAAE,IACA8lD,eAAA9lD,KAAAwjD,gBACAxjD,KAAAwjD,eAAAuC,YAAA,WAEAjmD,EAAAukD,QACAvkD,EAAA+lD,YAAA,KAEA/lD,EAAA6lD,kBACS54C,KAAAC,MAjST,QAySAu2C,EAAAzmD,UAAA+oD,YAAA,SAAA77C,GAIA,IACAhK,KAAAqkD,OAAArI,KAAAhyC,GAEA,MAAA+E,GACA/O,KAAA20B,KAAA,0CAAA5lB,EAAAxN,SAAAwN,EAAA5C,KAAA,uBACAW,WAAA9M,KAAAw+C,UAAArzC,KAAAnL,MAAA,KAOAujD,EAAAyC,6BAAA,EAKAzC,EAAA0C,eAAA,IACA1C,IAEAt+C,GAAAs+C,wB5DgyV6B9mD,KAAKwI,EAAStJ,EAAoB,MAIzD,SAAUF,EAAQwJ,EAAStJ,GAEjC,Y6DlnWAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAO9C,IAAAs8C,GAAA,WACA,QAAAA,MA0CA,MAlCAA,GAAA17C,UAAAo4B,IAAA,SAAA7iB,EAAAlG,EAAAomB,EAAAjZ,KAOAk/B,EAAA17C,UAAAi5B,MAAA,SAAA1jB,EAAAlG,EAAAomB,EAAAjZ,KAKAk/B,EAAA17C,UAAA60B,iBAAA,SAAAD,KAMA8mB,EAAA17C,UAAA05B,gBAAA,SAAAnkB,EAAAlG,EAAAomB,KAMAimB,EAAA17C,UAAA85B,kBAAA,SAAAvkB,EAAAlG,EAAAomB,KAKAimB,EAAA17C,UAAAu5B,mBAAA,SAAAhkB,EAAAkgB,KAIAimB,EAAA17C,UAAAg5C,YAAA,SAAA1e,KACAohB,IAEAvzC,GAAAuzC,iB7D0oWM,SAAU/8C,EAAQwJ,EAAStJ,GAEjC,Y8DhsWAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgqD,GAAAvqD,EAAA,KACAib,EAAAjb,EAAA,KACAoZ,EAAApZ,EAAA,KACAguB,EAAAhuB,EAAA,KAOAwqD,EAAA,WAIA,QAAAA,GAAAvf,GACA5mC,KAAAomD,eAAA,GAAAF,GAAAroB,cAAA+I,EAAAtI,YACAt+B,KAAAq7B,OAAAuL,EAAAtI,WACAt+B,KAAAqmD,WAAAF,EAAAG,cAAA1f,GACA5mC,KAAAumD,SAAAJ,EAAAK,YAAA5f,GAuGA,MAlGAuf,GAAArpD,UAAA2pD,aAAA,WACA,MAAAzmD,MAAAqmD,YAKAF,EAAArpD,UAAA4pD,WAAA,WACA,MAAA1mD,MAAAumD,UAMAJ,EAAArpD,UAAA6pD,QAAA,SAAArxC,GACA,MAAAtV,MAAAq7B,OAAAjmB,QAAApV,KAAAymD,eAAAnxC,IAAA,GACAtV,KAAAq7B,OAAAjmB,QAAAE,EAAAtV,KAAA0mD,eAAA,GAKAP,EAAArpD,UAAA6b,YAAA,SAAAqb,EAAAv1B,EAAAk+B,EAAA1I,EAAA6J,EAAAC,GAIA,MAHA/9B,MAAA2mD,QAAA,GAAA5xC,GAAAiB,UAAAvX,EAAAk+B,MACAA,EAAAhT,EAAA3S,aAAAP,YAEAzW,KAAAomD,eAAAztC,YAAAqb,EAAAv1B,EAAAk+B,EAAA1I,EAAA6J,EAAAC,IAKAooB,EAAArpD,UAAAohC,eAAA,SAAAxV,EAAAyV,EAAAJ,GACAI,EAAAzmB,eAEAymB,EAAAxU,EAAA3S,aAAAP,WAEA,IAAAw6B,GAAA9S,EAAA/iB,UAAApb,KAAAq7B,OAEA4V,KAAAt5B,eAAAgS,EAAA3S,aAAAP,WACA,IAAAja,GAAAwD,IAMA,OALAm+B,GAAAhlB,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACA5c,EAAAmqD,QAAA,GAAA5xC,GAAAiB,UAAAvX,EAAA2a,MACA63B,IAAA/4B,qBAAAzZ,EAAAkrB,EAAA3S,aAAAP,eAGAzW,KAAAomD,eAAAloB,eAAAxV,EAAAuoB,EAAAlT,IAKAooB,EAAArpD,UAAA6a,eAAA,SAAA+Q,EAAAnQ,GAEA,MAAAmQ,IAKAy9B,EAAArpD,UAAAshC,aAAA,WACA,UAKA+nB,EAAArpD,UAAAuhC,iBAAA,WACA,MAAAr+B,MAAAomD,gBAKAD,EAAArpD,UAAAwhC,SAAA,WACA,MAAAt+B,MAAAq7B,QAOA8qB,EAAAG,cAAA,SAAA1f,GACA,GAAAA,EAAAY,WAAA,CACA,GAAAof,GAAAhgB,EAAAkB,mBACA,OAAAlB,GAAAtI,WAAAloB,SAAAwwB,EAAAa,qBAAAmf,GAGA,MAAAhgB,GAAAtI,WAAAvoB,WAQAowC,EAAAK,YAAA,SAAA5f,GACA,GAAAA,EAAAc,SAAA,CACA,GAAAmf,GAAAjgB,EAAAmB,iBACA,OAAAnB,GAAAtI,WAAAloB,SAAAwwB,EAAAe,mBAAAkf,GAGA,MAAAjgB,GAAAtI,WAAApoB,WAGAiwC,IAEAlhD,GAAAkhD,gB9DutWS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAU1qD,EAAQC,EAAqBC,GAE7C,YAKk4D,SAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAAS6kB,GAAyB/S,EAAIE,GAAM,GAAI1P,KAAU,KAAI,GAAIE,KAAKsP,GAAQE,EAAK/B,QAAQzN,IAAI,GAAevC,OAAOe,UAAU0f,eAAe/f,KAAKmR,EAAItP,KAAYF,EAAOE,GAAGsP,EAAItP,GAAI,OAAOF,GAJhrE,GAAIb,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEG,EAAkD/B,EAAoB,GACtEmrD,EAAqDnrD,EAAoB,KAC9FiD,EAAgBhD,GAAwB,qEAAqE,qEAAqEiD,EAAiBjD,GAAwB,0CAA0C,qCAAqC,mUAAmU,6EAA6E,gIAAgI,aAAa,0CAA0C,qCAAqC,mUAAmU,6EAA6E,gIAAgI,aAAakD,EAAiBlD,GAAwB,cAAc,6HAA6H,UAAU,kBAAkB,qBAAqB,cAAc,OAAO,cAAc,6HAA6H,UAAU,kBAAkB,qBAAqB,cAAc,O+Dl4Wr3DmrD,EAAQ,SAAAnnD,GAAA,GACZ2D,GADY3D,EACZ2D,GACAD,EAFY1D,EAEZ0D,MACAG,EAHY7D,EAGZ6D,SACAG,EAJYhE,EAIZgE,UACAoe,EALYpiB,EAKZoiB,UACG3jB,EANSsiB,EAAA/gB,GAAA,wDAQZpC,GAAAuE,EAAAC,cAACglD,GAAahlC,UAAWA,GACvBxkB,EAAAuE,EAAAC,cAACxE,EAAAuE,EAAMM,SAAP,MACIuB,GACApG,EAAAuE,EAAAC,cAACilD,EAADlrD,OAAA2kB,QACEnd,GAAIA,EACJrB,KAAMqB,EACN2jD,kBAAoB3jD,EAApB,UACIlF,MAGLuF,GACDpG,EAAAuE,EAAAC,cAACmlD,EAADprD,OAAA2kB,QACEnd,GAAIA,EACJrB,KAAMqB,EACN2jD,kBAAoB3jD,EAApB,UACIlF,IAGRb,EAAAuE,EAAAC,cAAColD,GACC7jD,GAAOA,EAAP,SACAE,SAAUA,EACV4jD,QAAS9jD,GAERD,MAMH0jD,EAAetpD,EAAA,EAAOoH,IAAtBlG,GAMAqoD,EAAevpD,EAAA,EAAOujC,MAAtBpiC,EAEK,SAAAR,GAAA,MAASA,GAAMuG,MAAM0iD,UAAU,IACT,SAAAjpD,GAAA,MAASA,GAAMuG,MAAM0iD,UAAU,KAgB7B,SAAAjpD,GAAA,MAASA,GAAMuG,MAAMG,aAAa,IAI7C,SAAA1G,GAAA,MAASA,GAAMuG,MAAM0iD,UAAU,KAK/B,SAAAjpD,GAAA,MAASA,GAAMuG,MAAMG,aAAa,KAIpDoiD,EAAgBF,EAAaxkC,cAAcqkC,EAAA,GAE3CS,EAAkB,SAAAlpD,GAAA,oBACbA,EAAMuG,MAAM0iD,UAAU,IADT,mDAKlBF,EAAa1pD,EAAA,EAAO4F,MAApBxE,EACK,SAAAT,GAAA,MAASA,GAAMuG,MAAM0iD,UAAU,KAMjB,SAAAjpD,GAAA,MAASA,GAAMuG,MAAMC,oBAE1CoiD,EACAE,EACE,SAAA9oD,GAAA,MAASkpD,GAAgBlpD,IAG3B,SAAAA,GAAA,MAASA,GAAMoF,UAAN,SACP8jD,EAAgBlpD,GADT,QAKb3C,GAAA,K/DiyWM,SAAUD,EAAQC,EAAqBC,GAE7C,YAK8f,SAASglB,GAAyB/S,EAAIE,GAAM,GAAI1P,KAAU,KAAI,GAAIE,KAAKsP,GAAQE,EAAK/B,QAAQzN,IAAI,GAAevC,OAAOe,UAAU0f,eAAe/f,KAAKmR,EAAItP,KAAYF,EAAOE,GAAGsP,EAAItP,GAAI,OAAOF,GAAQ,QAASjC,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIC,WAAU,qCAAuC,QAASC,GAA2BC,EAAKC,GAAM,IAAID,EAAM,KAAM,IAAIE,gBAAe,4DAA8D,QAAOD,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBD,EAALC,EAAW,QAASE,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIP,WAAU,iEAAkEO,GAAaD,GAASE,UAAUf,OAAOgB,OAAOF,GAAYA,EAAWC,WAAWE,aAAad,MAAMU,EAASK,YAAW,EAAMC,UAAS,EAAKC,cAAa,KAAWN,IAAWd,OAAOqB,eAAerB,OAAOqB,eAAeR,EAASC,GAAYD,EAASS,UAAUR,GAJh9C,GAAIU,GAAsC5B,EAAoB,GAC1D6B,EAA8C7B,EAAoB8B,EAAEF,GACpEiqD,EAAyC7rD,EAAoB,KAC7D8rD,EAAiD9rD,EAAoB8B,EAAE+pD,GAC5FrpD,EAAa,WAAW,QAASlC,GAAiBmC,EAAOC,GAAO,IAAI,GAAIC,GAAE,EAAEA,EAAED,EAAME,OAAOD,IAAI,CAAC,GAAIE,GAAWH,EAAMC,EAAGE,GAAWvB,WAAWuB,EAAWvB,aAAY,EAAMuB,EAAWrB,cAAa,EAAQ,SAAUqB,KAAWA,EAAWtB,UAAS,GAAKnB,OAAOuB,eAAec,EAAOI,EAAWC,IAAID,IAAc,MAAO,UAASnC,EAAYqC,EAAWC,GAAuI,MAAvHD,IAAWzC,EAAiBI,EAAYS,UAAU4B,GAAeC,GAAY1C,EAAiBI,EAAYsC,GAAoBtC,MgE94WvdqrD,EhE84Wy+C,SAAS98B,GAA2C,QAAS88B,KAA0C,MAA/BvrD,GAAgB6D,KAAK0nD,GAAiBnrD,EAA2ByD,MAAM0nD,EAASrqD,WAAWtB,OAAOsE,eAAeqnD,IAAWpnD,MAAMN,KAAKE,YAA0kB,MAApwBvD,GAAU+qD,EAAS98B,GAAoLzsB,EAAaupD,IAAWjpD,IAAI,oBAAoBvC,MAAM,WgE54W5wDurD,IAASznD,KAAK2nD,ahE44W+1DlpD,IAAI,SAASvC,MAAM,WgEz4Wz3D,GAAA0F,GAAA5B,KAAAkoB,EACsCloB,KAAK3B,MAA1C2jB,EADDkG,EACClG,UAAW4lC,EADZ1/B,EACY0/B,YAAgBvpD,EAD5BsiB,EAAAuH,GAAA,2BAGP,OACE1qB,GAAAuE,EAAAC,cAAA,WAAAjG,OAAA2kB,UACMriB,GACJ+C,IAAK,SAAAkU,GAAA,MAAQ1T,GAAK+lD,SAAWryC,GAC7B0M,UAAWA,EACXR,OAAQqmC,OAAQD,EAAc,KAAO,ehEi4WivEF,GgE94WxvEnqD,EAAA,UhE84Wk1E7B,GAAuB,EAAI,GAI74E,SAAUD,EAAQwJ,EAAStJ,GiEr5WjC,GAAAmsD,GAAAC,EAAAC,GAKA,SAAAC,EAAAC,GAEAH,GAAAtsD,EAAAwJ,GAAA6iD,EAAA,MAAAjkC,MAAAmkC,EAAA,mBAAAF,KAAAxnD,MAAA2E,EAAA8iD,GAAAD,KAAArsD,EAAAwJ,QAAA+iD,IAUChoD,EAAA,SAAAvE,EAAAwJ,GACD,YA2CA,SAAAyb,GAAAynC,GA6BA,QAAAC,GAAAlsD,GAKA,GAAAmsD,GAAAF,EAAA3mC,MAAA6mC,KACAF,GAAA3mC,MAAA6mC,MAAA,MAGAF,EAAAG,YAEAH,EAAA3mC,MAAA6mC,QAGAF,EAAA3mC,MAAA+mC,UAAArsD,EAGA,QAAAssD,GAAAC,GAGA,IAFA,GAAAC,MAEAD,KAAA1F,YAAA0F,EAAA1F,qBAAA4F,UACAF,EAAA1F,WAAA6F,WACAF,EAAArnD,MACAiU,KAAAmzC,EAAA1F,WACA6F,UAAAH,EAAA1F,WAAA6F,YAGAH,IAAA1F,UAGA,OAAA2F,GAGA,QAAAb,KACA,OAAAM,EAAAU,aAAA,CAKA,GAAAC,GAAAN,EAAAL,GACAY,EAAAt8C,SAAAu8C,iBAAAv8C,SAAAu8C,gBAAAJ,SAEAT,GAAA3mC,MAAAynC,OAAA,GACAd,EAAA3mC,MAAAynC,OAAAd,EAAAU,aAAAK,EAAA,KAGAC,EAAAhB,EAAAgB,YAGAL,EAAAphD,QAAA,SAAA+gD,GACAA,EAAAnzC,KAAAszC,UAAAH,EAAAG,YAGAG,IACAt8C,SAAAu8C,gBAAAJ,UAAAG,IAIA,QAAA7+C,KACA29C,GAEA,IAAAuB,GAAAr8C,KAAAyC,MAAAw1C,WAAAmD,EAAA3mC,MAAAynC,SACAI,EAAA9pD,OAAA+pD,iBAAAnB,EAAA,MAGAoB,EAAA,gBAAAF,EAAAG,UAAAz8C,KAAAyC,MAAAw1C,WAAAqE,EAAAJ,SAAAd,EAAAsB,YAmBA,IAfAF,IAAAH,EACA,WAAAC,EAAAd,YACAH,EAAA,UACAP,IACA0B,EAAA,gBAAAF,EAAAG,UAAAz8C,KAAAyC,MAAAw1C,WAAAzlD,OAAA+pD,iBAAAnB,EAAA,MAAAc,SAAAd,EAAAsB,cAIA,WAAAJ,EAAAd,YACAH,EAAA,UACAP,IACA0B,EAAA,gBAAAF,EAAAG,UAAAz8C,KAAAyC,MAAAw1C,WAAAzlD,OAAA+pD,iBAAAnB,EAAA,MAAAc,SAAAd,EAAAsB,cAIAC,IAAAH,EAAA,CACAG,EAAAH,CACA,IAAAI,GAAAC,EAAA,mBACA,KACAzB,EAAA0B,cAAAF,GACK,MAAAlgB,MArHL,GAAA0e,KAAA2B,UAAA,aAAA3B,EAAA2B,WAAA9hD,EAAA+hD,IAAA5B,GAAA,CAEA,GAAAe,GAAA,KACAC,EAAA,KACAO,EAAA,KAwHAM,EAAA,WACA7B,EAAAgB,iBACAj/C,KAIA+/C,EAAA,SAAAzoC,GACAjiB,OAAA2qD,oBAAA,SAAAF,GAAA,GACA7B,EAAA+B,oBAAA,QAAAhgD,GAAA,GACAi+C,EAAA+B,oBAAA,QAAAhgD,GAAA,GACAi+C,EAAA+B,oBAAA,mBAAAD,GAAA,GACA9B,EAAA+B,oBAAA,kBAAAhgD,GAAA,GAEAnO,OAAA+R,KAAA0T,GAAA9Z,QAAA,SAAAjJ,GACA0pD,EAAA3mC,MAAA/iB,GAAA+iB,EAAA/iB,KAGAuJ,EAAA47B,OAAAukB,IACGh9C,KAAAg9C,GACHc,OAAAd,EAAA3mC,MAAAynC,OACApB,OAAAM,EAAA3mC,MAAAqmC,OACAU,UAAAJ,EAAA3mC,MAAA+mC,UACA4B,UAAAhC,EAAA3mC,MAAA2oC,UACAC,SAAAjC,EAAA3mC,MAAA4oC,UAGAjC,GAAAl7C,iBAAA,mBAAAg9C,GAAA,GAKA,oBAAA9B,IAAA,WAAAA,IACAA,EAAAl7C,iBAAA,QAAA/C,GAAA,GAGA3K,OAAA0N,iBAAA,SAAA+8C,GAAA,GACA7B,EAAAl7C,iBAAA,QAAA/C,GAAA,GACAi+C,EAAAl7C,iBAAA,kBAAA/C,GAAA,GACAi+C,EAAA3mC,MAAA2oC,UAAA,SACAhC,EAAA3mC,MAAA4oC,SAAA,aAEApiD,EAAAqD,IAAA88C,GACA8B,UACA//C,WAjKA,WACA,GAAAsX,GAAAjiB,OAAA+pD,iBAAAnB,EAAA,KAEA,cAAA3mC,EAAAqmC,OACAM,EAAA3mC,MAAAqmC,OAAA,OACI,SAAArmC,EAAAqmC,SACJM,EAAA3mC,MAAAqmC,OAAA,cAIAqB,EADA,gBAAA1nC,EAAAgoC,YACAxE,WAAAxjC,EAAA6oC,YAAArF,WAAAxjC,EAAA8oC,gBAEAtF,WAAAxjC,EAAA+oC,gBAAAvF,WAAAxjC,EAAAgpC,mBAGA/E,MAAAyD,KACAA,EAAA,GAGAh/C,QAoJA,QAAA+/C,GAAA9B,GACA,GAAAsC,GAAAziD,EAAAuD,IAAA48C,EACAsC,IACAA,EAAAR,UAIA,QAAA//C,GAAAi+C,GACA,GAAAsC,GAAAziD,EAAAuD,IAAA48C,EACAsC,IACAA,EAAAvgD,SAjOA,GAAAlC,GAAA,mBAAA0iD,KAAA,GAAAA,KAAA,WACA,GAAA58C,MACA2/B,IAEA,QACAsc,IAAA,SAAAtrD,GACA,MAAAqP,GAAA/B,QAAAtN,IAAA,GAEA8M,IAAA,SAAA9M,GACA,MAAAgvC,GAAA3/B,EAAA/B,QAAAtN,KAEA4M,IAAA,SAAA5M,EAAAvC,IACA,IAAA4R,EAAA/B,QAAAtN,KACAqP,EAAAzM,KAAA5C,GACAgvC,EAAApsC,KAAAnF,KAGA0nC,OAAA,SAAAnlC,GACA,GAAAkb,GAAA7L,EAAA/B,QAAAtN,EACAkb,IAAA,IACA7L,EAAAmrC,OAAAt/B,EAAA,GACA8zB,EAAAwL,OAAAt/B,EAAA,SAMAiwC,EAAA,SAAA1nD,GACA,UAAAyoD,OAAAzoD,GAA0B0oD,SAAA,IAE1B,KACA,GAAAD,OAAA,QACE,MAAA57C,GAEF66C,EAAA,SAAA1nD,GACA,GAAAynD,GAAAl9C,SAAAm9C,YAAA,QAEA,OADAD,GAAAkB,UAAA3oD,GAAA,MACAynD,GAgMA,GAAAmB,GAAA,IAGA,qBAAAvrD,SAAA,mBAAAA,QAAA+pD,kBACAwB,EAAA,SAAArC,GACA,MAAAA,IAEAqC,EAAAb,QAAA,SAAAxB,GACA,MAAAA,IAEAqC,EAAA5gD,OAAA,SAAAu+C,GACA,MAAAA,MAGAqC,EAAA,SAAArC,EAAAn3B,GAMA,MALAm3B,IACAltD,MAAAuB,UAAA4K,QAAAjL,KAAAgsD,EAAAlqD,OAAAkqD,MAAA,SAAAsC,GACA,MAAArqC,GAAAqqC,KAGAtC,GAEAqC,EAAAb,QAAA,SAAAxB,GAIA,MAHAA,IACAltD,MAAAuB,UAAA4K,QAAAjL,KAAAgsD,EAAAlqD,OAAAkqD,MAAAwB,GAEAxB,GAEAqC,EAAA5gD,OAAA,SAAAu+C,GAIA,MAHAA,IACAltD,MAAAuB,UAAA4K,QAAAjL,KAAAgsD,EAAAlqD,OAAAkqD,MAAAv+C,GAEAu+C,IAIAxjD,EAAAsb,QAAAuqC,EACArvD,EAAAwJ,UAAA,WjE+5WM,SAAUxJ,EAAQC,EAAqBC,GAE7C,YACqB,IAAIqvD,GAA8CrvD,EAAoB,KAClEsvD,EAAmDtvD,EAAoB,KAEvEuvD,GAD2DvvD,EAAoB8B,EAAEwtD,GACzCtvD,EAAoB,MAC5DwvD,EAAgDxvD,EAAoB8B,EAAEytD,GkE5rXzFE,EAAiBD,EAAAppD,EAAOipB,SACxBqgC,EAAWL,EAAA,SAASM,cAAcF,EAExC1vD,GAAA,KlEisXM,SAAUD,EAAQC,EAAqBC,GAE7C,YmExiXA,SAAA4vD,KA8CA,QAAAC,GAAAtpD,GAEAupD,EADAC,EAAAxpD,GACA,gBACAwpD,GAAAxpD,GAKA,QAAAguB,GAAAhuB,GAKA,MAJAA,MAAAypD,EACAtkD,EAAAqkD,EAAAxpD,IACAR,EAAA,UAA6BQ,SAE7BwpD,EAAAxpD,GAMA,QAAAopD,GAAAh6B,EAAApvB,OACA2hB,KAAA3hB,EACAA,EAAAypD,EAGA,iBAAAzpD,IAAA,KAAAA,GACAR,EAAA,gBAAuCQ,OAAA,KAGvCmF,EAAAqkD,EAAAxpD,IACAR,EAAA,iBAAoCQ,QAEpC,IAAAguB,GAAA,GAAA07B,GAAAt6B,EAAApvB,EAAAgjB,EAGA,OAFAwmC,GAAAxpD,GAAAguB,EACAu7B,EAAAv7B,EAAA,UACAA,EAKA,QAAA27B,KAEA,MAAA9vD,QAAA+R,KAAA49C,GAAA1jD,IAAA,SAAA9F,GAAuD,MAAAwpD,GAAAxpD,KASvD,QAAA4pD,GAAA5pD,EAAA6pD,EAAAC,EAAAC,EAAAC,GAEAC,EAAAjqD,IACAR,EAAA,qBAAwCQ,SAGxCiqD,EAAAjqD,GAAA6pD,EAEAE,IACAG,EAAAlqD,GAAA+pD,EAEAJ,IAAAnkD,QAAA,SAAAwoB,GACA+7B,EAAA,SAAA/7B,KAIA,IAAAm8B,GAAA,SAAAC,GAQA,WAPA,KAAAA,IAAoCA,EAAAp8B,KACpC,mBAAAo8B,GAAApqD,IAGAR,EAAA,wBAA+CQ,SAG/CoqD,EAAApqD,KAiBA,YAdA2hB,KAAAmoC,GACAjwD,OAAAwwD,EAAA,YAAAF,EAAAL,GAGA9mC,EAAAhjB,GAAAmqD,EAEAT,EAAA9uD,UAAAoF,GAAA,WAEA,OADA/B,MACAqK,EAAA,EAA4BA,EAAAtK,UAAA3B,OAAuBiM,IACnDrK,EAAAqK,GAAAtK,UAAAsK,EAGA,OADAxK,MAAAwsD,YAAArhD,KAAAnL,KAAAkC,GACA5B,MAAAN,KAAAksD,EAAA/rD,OAEAksD,EAOA,QAAAI,GAAApuD,GACAtC,OAAAwwD,EAAA,YAAArnC,EAAA7mB,GAEA,QAAAotD,GAAAv7B,EAAAw8B,GACA3wD,OAAA+R,KAAAq+C,GAAAzkD,QAAA,SAAAilD,GAEA,GAAAC,GAAAC,EAAA38B,EAAAy8B,EACA,QAAAC,GAGAR,EAAAQ,IACAR,EAAAQ,GAAAF,EAAAx8B,KAMA,QAAA28B,GAAA38B,EAAAhuB,GACA,kBAAAA,EACA,WAEA,IAAA4qD,GAAA5qD,CACAguB,GAAAoB,OACA,OAAAw7B,GAtKA,GAAApB,MACAS,KACAC,KAEAlnC,GAGA5E,YAAA,EACAgrC,gBACAp7B,MACA68B,KAAA,KACAlvC,gBACAgb,YAAA,SACAoK,UACA6oB,kBACAP,0BACAkB,kBACAhkD,gBAAA8jD,EAAA,gBACAhmD,aAAAgmD,EAAA,aACAf,YACAW,YACAU,eACAhvC,gBACAhY,WAAA0mD,EAAA,YAiJA,OApIAxwD,QAAAwwD,EAAA,eAAArnC,EAAA,UAAAA,GAEAnpB,OAAAuB,eAAA4nB,EAAA,QACA3Z,IAAAsgD,IAqBA9vD,OAAAwwD,EAAA,eAAAr8B,EAAA,MAAA07B,GA4GA1mC,EAEA,QAAAxjB,GAAA8O,EAAArQ,GACA,KAAA6sD,GAAAjwD,OAAAyT,EAAArQ,GnE63WiCzE,EAAuB,EAAI6vD,CmE/sX5D,IAAAgB,GAAA5wD,EAAA,KAgBA0L,GAhBA1L,EAAA8B,EAAA8uD,GAgBA,SAAA3+C,EAAAnP,GACA,MAAA1C,QAAAe,UAAA0f,eAAA/f,KAAAmR,EAAAnP,KAEAktD,EAAA,YAGAsB,KAKArB,EAAA,WACA,QAAAA,GAAAt6B,EAAApvB,EAAAgrD,GACAltD,KAAAktD,YACAltD,KAAAmtD,YAAA,EACAntD,KAAAotD,aACAptD,KAAAqtD,MAAAnrD,EACAlC,KAAAstD,SAAAvxD,OAAAwwD,EAAA,UAAAj7B,GACAtxB,KAAAijC,UACAsqB,OAAA,WAAiC,aACjC1V,SAAA,WAAmC,MAAAh6B,SAAAC,QAAA,OACnC0vC,qBAAA,SAAA9+C,GACAu+C,EAAA5rD,KAAAqN,GAEA5B,WAAA,WAAwC,MAAA4B,GAAA,OAAyB,IAEjE++C,wBAAA,SAAA/+C,GACAu+C,IAAAzc,OAAA,SAAAkd,GAA4E,MAAAA,KAAAh/C,MA6G5E,MAzGA3S,QAAAuB,eAAAsuD,EAAA9uD,UAAA,QACAyO,IAAA,WAEA,MADAvL,MAAA2tD,kBACA3tD,KAAAqtD,OAEApwD,YAAA,EACAE,cAAA,IAEApB,OAAAuB,eAAAsuD,EAAA9uD,UAAA,WACAyO,IAAA,WAEA,MADAvL,MAAA2tD,kBACA3tD,KAAAstD,UAEArwD,YAAA,EACAE,cAAA,IAEAyuD,EAAA9uD,UAAA8mC,OAAA,WACA,GAAA9jC,GAAAE,IACA,WAAA6d,SAAA,SAAAC,GACAhe,EAAA6tD,kBACA7vC,MAEAtc,KAAA,WACA1B,EAAAotD,UAAAjqB,SAAAuoB,UAAA1rD,EAAAutD,MACA,IAAAO,KAMA,OALA7xD,QAAA+R,KAAAhO,EAAAstD,WAAA1lD,QAAA,SAAAmmD,GACA9xD,OAAA+R,KAAAhO,EAAAstD,UAAAS,IAAAnmD,QAAA,SAAAomD,GACAF,EAAAvsD,KAAAvB,EAAAstD,UAAAS,GAAAC,QAGAjwC,QAAAkwC,IAAAH,EAAA5lD,IAAA,SAAAgmD,GACA,MAAAA,GAAA/qB,SAAAW,cAGApiC,KAAA,WACA1B,EAAAqtD,YAAA,EACArtD,EAAAstD,gBAiBAxB,EAAA9uD,UAAA0vD,YAAA,SAAAtqD,EAAA+rD,GAMA,OALA,KAAAA,IAA4CA,EAAAtC,GAC5C3rD,KAAA2tD,kBACA3tD,KAAAotD,UAAAlrD,KACAlC,KAAAotD,UAAAlrD,QAEAlC,KAAAotD,UAAAlrD,GAAA+rD,GAAA,CAKA,GAAAC,GAAAD,IAAAtC,EACAsC,MACApqC,GACAmqC,EAAAhuD,KAAAktD,UAAAjqB,SAAAkpB,UAAAjqD,GAAAlC,UAAAmuD,UAAAhjD,KAAAnL,MAAAkuD,EACAluD,MAAAotD,UAAAlrD,GAAA+rD,GAAAD,EAEA,MAAAhuD,MAAAotD,UAAAlrD,GAAA+rD,IAMArC,EAAA9uD,UAAAqxD,UAAA,SAAA9vD,GACA,GAAAyB,GAAAE,IAEAjE,QAAAwwD,EAAA,YAAAvsD,KAAA3B,GAUAA,EAAA4kC,UAAA5kC,EAAA4kC,SAAAuqB,uBACAP,EAAAvlD,QAAA,SAAAgmD,GACA5tD,EAAAmjC,SAAAuqB,qBAAAE,KAEAT,OAOArB,EAAA9uD,UAAA6wD,gBAAA,WACA3tD,KAAAmtD,YACAzrD,EAAA,eAAkCQ,KAAAlC,KAAAqtD,SAGlCzB,IAIAA,GAAA9uD,UAAAoF,MAAA0pD,EAAA9uD,UAAAw0B,SACAs6B,EAAA9uD,UAAA8mC,QACAtM,QAAApsB,IAAA,KAwLA,IAAAkjD,IACAC,SAAA,iFAEAC,eAAA,6BACAC,gBAAA,8CACAC,cAAA,+CACAC,oBAAA,sDACAC,mBAAA,0LAIAC,uBAAA,2EAGA3B,EAAA,GAAAT,GAAA,8BAAA6B,InE0tXM,SAAU3yD,EAAQwJ,EAAStJ,GAEjC,YoE5iYA,SAAAiK,GAAA1J,GACA,MAAA2J,OAAAge,GAAA3nB,GAeA,QAAA2J,GAAAzH,EAAA0/B,GACA,KAAAA,YAAA/hC,SACA,MAAA+hC,EAEA,QAAAA,EAAA9gC,aACA,IAAAupB,MAGA,GAAAqoC,GAAA9wB,CACA,WAAAvX,MAAAqoC,EAAAv7B,UACA,KAAAt3B,YACA8nB,KAAAzlB,IACAA,KAEA,MACA,KAAA7C,OAEA6C,IACA,MACA,SAEA,MAAA0/B,GAEA,OAAA+wB,KAAA/wB,GACAA,EAAAthB,eAAAqyC,KAGAzwD,EAAAywD,GAAAhpD,EAAAzH,EAAAywD,GAAA/wB,EAAA+wB,IAEA,OAAAzwD,GAIA,QAAA0H,GAAA8H,EAAAihD,EAAA3yD,GACA0R,EAAAihD,GAAA3yD,EAtDAH,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAO9C+I,EAAAW,WA4CAX,EAAAY,aAKAZ,EAAAa,iBpEwkYM,SAAUrK,EAAQwJ,EAAStJ,GAEjC,YqEloYAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA8J,GAAA,WACA,QAAAA,KACA,GAAAlG,GAAAE,IACAA,MAAAg6B,QAAA,GAAAnc,SAAA,SAAAC,EAAAC,GACAje,EAAAge,UACAhe,EAAAie,WAkCA,MAxBA/X,GAAAlJ,UAAAi9B,aAAA,SAAArrB,GACA,GAAA5O,GAAAE,IACA,iBAAA0B,EAAAxF,GACAwF,EACA5B,EAAAie,OAAArc,GAGA5B,EAAAge,QAAA5hB,GAEA,mBAAAwS,KAGA5O,EAAAk6B,QAAAv4B,MAAA,cAGA,IAAAiN,EAAAnQ,OACAmQ,EAAAhN,GAGAgN,EAAAhN,EAAAxF,MAKA8J,IAEAf,GAAAe,YrE0pYM,SAAUvK,EAAQwJ,EAAStJ,GAEjC,YsEtsYAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAuJ,GAAA9J,EAAA,IAKAsJ,GAAAiB,MAAA,WACA,0BAAAy+C,YACA,iBAAAA,WAAA,UACAA,UAAA,UAGA,IAWA1/C,EAAAkB,gBAAA,WACA,0BAAA5G,YACAA,OAAA,SAAAA,OAAA,UAAAA,OAAA,WACA,oDAAA2Q,KAAAjL,EAAAiB,UAOAjB,EAAAoB,cAAA,WACA,uBAAAs+C,YAAA,gBAAAA,UAAA,SAOA1/C,EAAAmB,UAAA,WACA,WAAAX,EAAAC,UAAAizB,cAAA,IAAAlzB,EAAAC,UAAAkzB,atE+tYM,SAAUn9B,EAAQwJ,EAAStJ,GAEjC,YuErxYA,SAAA8K,GAAAqoD,GACA,GAAA3wC,GAAA4wC,CAEA,OADAA,GAAAD,EACA3wC,EARApiB,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA8yD,GAAA,gBACAD,EAAApjD,MACAojD,iBAOA9pD,GAAAwB,cACA,IAAAD,GAAA,WACA,QAAAA,GAAAgK,EAAAjP,GACAvB,KAAAwQ,OACAxQ,KAAAuB,SAGA,IAAAwtD,EAEAA,EAAA/uD,KAAAuG,EAAAzJ,UAAAC,YAEA,CACA,GAAAkyD,GAAAtjD,MAAArL,MAAAN,KAAAE,UACAF,MAAAkC,KAAA8sD,EAEAjzD,OAAAuB,eAAA0C,KAAA,SACAuL,IAAA,WACA,MAAA0jD,GAAAh+C,UAKA,MAAAzK,KAEAvB,GAAAuB,gBAEAA,EAAA1J,UAAAf,OAAAgB,OAAA4O,MAAA7O,WACA0J,EAAA1J,UAAAE,YAAAwJ,EACAA,EAAA1J,UAAAoF,KAAA8sD,CACA,IAAAzoD,GAAA,WACA,QAAAA,GAAAynD,EAAArB,EAAAyB,GACApuD,KAAAguD,UACAhuD,KAAA2sD,cACA3sD,KAAAouD,SAEApuD,KAAAkvD,QAAA,gBAgCA,MA7BA3oD,GAAAzJ,UAAAC,OAAA,SAAAyT,EAAArE,OACA0X,KAAA1X,IACAA,KAEA,IAEA5K,GAFA4tD,EAAAnvD,KAAAouD,OAAA59C,GACA4+C,EAAApvD,KAAAguD,QAAA,IAAAx9C,CAGAjP,OADAsiB,KAAAsrC,EACA,QAGAA,EAAA7rC,QAAAtjB,KAAAkvD,QAAA,SAAAnK,EAAAtmD,GACA,GAAAvC,GAAAiQ,EAAA1N,EACA,YAAAolB,KAAA3nB,IAAA6T,WAAA,IAAAtR,EAAA,OAIA8C,EAAAvB,KAAA2sD,YAAA,KAAAprD,EAAA,KAAA6tD,EAAA,IACA,IAAA3lB,GAAA,GAAAjjC,GAAA4oD,EAAA7tD,EAGA,QAAAstD,KAAA1iD,GACAA,EAAAqQ,eAAAqyC,IAAA,MAAAA,EAAAp8C,OAAA,KAGAg3B,EAAAolB,GAAA1iD,EAAA0iD,GAEA,OAAAplB,IAEAljC,IAEAtB,GAAAsB,gBvEmyYM,SAAU9K,EAAQwJ,EAAStJ,GAEjC,YwEr2YAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAmJ,GAAA1J,EAAA,KACA+K,EAAA/K,EAAA,IAWAsJ,GAAA6B,OAAA,SAAA4qB,GACA,GAAA29B,MAAmBC,KAAanjD,KAAWojD,EAAA,EAC3C,KACA,GAAAtpB,GAAAvU,EAAA5f,MAAA,IACAu9C,GAAA3oD,EAAAC,SAAAtB,EAAAE,aAAA0gC,EAAA,SACAqpB,EAAA5oD,EAAAC,SAAAtB,EAAAE,aAAA0gC,EAAA,SACAspB,EAAAtpB,EAAA,GACA95B,EAAAmjD,EAAA,YACAA,GAAA,EAEA,MAAAvgD,IACA,OACAsgD,SACAC,SACAnjD,OACAojD,cAcAtqD,EAAAiC,iBAAA,SAAAwqB,GACA,GAAA89B,GAAAC,EAAAH,EAAArqD,EAAA6B,OAAA4qB,GAAA49B,OAAA9oC,EAAAzZ,KAAAC,OAAA,GAAAuZ,OAAA8M,UAAA,IAgBA,OAfA,iBAAAi8B,KACAA,EAAA9yC,eAAA,OACAgzC,EAAAF,EAAA,IAEAA,EAAA9yC,eAAA,SACAgzC,EAAAF,EAAA,KAGAG,EADAH,EAAA9yC,eAAA,OACA8yC,EAAA,IAIAE,EAAA,OAGAhpC,GAAAgpC,GAAAC,GAAAjpC,GAAAgpC,GAAAhpC,GAAAipC,GAYAxqD,EAAA+B,aAAA,SAAA0qB,GACA,GAAA49B,GAAArqD,EAAA6B,OAAA4qB,GAAA49B,MACA,wBAAAA,MAAA9yC,eAAA,OACA8yC,EAAA,IAEA,MAaArqD,EAAAgC,cAAA,SAAAyqB,GACA,GAAAg+B,GAAAzqD,EAAA6B,OAAA4qB,GAAA49B,EAAAI,EAAAJ,MACA,SAAAI,EAAAH,aACAD,GACA,iBAAAA,IACAA,EAAA9yC,eAAA,QAYAvX,EAAA8B,QAAA,SAAA2qB,GACA,GAAA49B,GAAArqD,EAAA6B,OAAA4qB,GAAA49B,MACA,wBAAAA,KAAA,IAAAA,EAAA,QxE83YM,SAAU7zD,EAAQwJ,EAAStJ,GAEjC,YyE5+YAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiL,GAAAxL,EAAA,IASAsJ,GAAAkD,YAAA,SAAAwnD,GACA,GAAA/oB,KAWA,OAVAz/B,GAAAO,QAAAioD,EAAA,SAAAlxD,EAAAvC,GACAX,MAAAkP,QAAAvO,GACAA,EAAAwL,QAAA,SAAAkoD,GACAhpB,EAAAvlC,KAAAkR,mBAAA9T,GAAA,IAAA8T,mBAAAq9C,MAIAhpB,EAAAvlC,KAAAkR,mBAAA9T,GAAA,IAAA8T,mBAAArW,MAGA0qC,EAAAroC,OAAA,IAAAqoC,EAAAl3B,KAAA,SAQAzK,EAAAmD,kBAAA,SAAAD,GACA,GAAAyF,KAQA,OAPAzF,GAAAmb,QAAA,UAAAxR,MAAA,KACApK,QAAA,SAAAgqB,GACA,GAAAA,EAAA,CACA,GAAAjzB,GAAAizB,EAAA5f,MAAA,IACAlE,GAAAnP,EAAA,IAAAA,EAAA,MAGAmP,IzEqgZM,SAAUnS,EAAQwJ,EAAStJ,GAEjC,Y0E9iZAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAk0D,EAAAl0D,EAAA,KAyBA2M,EAAA,SAAA4M,GAEA,QAAA5M,KACA,GAAAxI,GAAAoV,EAAAzY,KAAAuD,WAOAF,GAAAgwD,UAMAhwD,EAAAiwD,QAOAjwD,EAAAkwD,MAMAlwD,EAAAmwD,QAIAnwD,EAAAowD,OAAA,EAIApwD,EAAAqwD,OAAA,EACArwD,EAAAswD,UAAA,GACAtwD,EAAAmwD,KAAA,MACA,QAAA3xD,GAAA,EAAuBA,EAAAwB,EAAAswD,YAAqB9xD,EAC5CwB,EAAAmwD,KAAA3xD,GAAA,CAGA,OADAwB,GAAAuwD,QACAvwD,EAkLA,MA7NA+U,GAAAM,UAAA7M,EAAA4M,GA6CA5M,EAAAxL,UAAAuzD,MAAA,WACArwD,KAAA8vD,OAAA,cACA9vD,KAAA8vD,OAAA,cACA9vD,KAAA8vD,OAAA,cACA9vD,KAAA8vD,OAAA,aACA9vD,KAAA8vD,OAAA,cACA9vD,KAAAkwD,OAAA,EACAlwD,KAAAmwD,OAAA,GAQA7nD,EAAAxL,UAAAwzD,UAAA,SAAAC,EAAAC,GACAA,IACAA,EAAA,EAEA,IAAAC,GAAAzwD,KAAAgwD,EAEA,qBAAAO,GACA,OAAAjyD,GAAA,EAA2BA,EAAA,GAAQA,IASnCmyD,EAAAnyD,GACAiyD,EAAAzwB,WAAA0wB,IAAA,GACAD,EAAAzwB,WAAA0wB,EAAA,OACAD,EAAAzwB,WAAA0wB,EAAA,MACAD,EAAAzwB,WAAA0wB,EAAA,GACAA,GAAA,MAIA,QAAAlyD,GAAA,EAA2BA,EAAA,GAAQA,IACnCmyD,EAAAnyD,GACAiyD,EAAAC,IAAA,GACAD,EAAAC,EAAA,OACAD,EAAAC,EAAA,MACAD,EAAAC,EAAA,GACAA,GAAA,CAIA,QAAAlyD,GAAA,GAAwBA,EAAA,GAAQA,IAAA,CAChC,GAAAie,GAAAk0C,EAAAnyD,EAAA,GAAAmyD,EAAAnyD,EAAA,GAAAmyD,EAAAnyD,EAAA,IAAAmyD,EAAAnyD,EAAA,GACAmyD,GAAAnyD,GAAA,YAAAie,GAAA,EAAAA,IAAA,IASA,OAFAvN,GAAAjB,EALAhM,EAAA/B,KAAA8vD,OAAA,GACAxiD,EAAAtN,KAAA8vD,OAAA,GACAzhD,EAAArO,KAAA8vD,OAAA,GACA3zC,EAAAnc,KAAA8vD,OAAA,GACA/gD,EAAA/O,KAAA8vD,OAAA,GAGAxxD,EAAA,EAAuBA,EAAA,GAAQA,IAAA,CAC/BA,EAAA,GACAA,EAAA,IACA0Q,EAAAmN,EAAA7O,GAAAe,EAAA8N,GACApO,EAAA,aAGAiB,EAAA1B,EAAAe,EAAA8N,EACApO,EAAA,YAIAzP,EAAA,IACA0Q,EAAA1B,EAAAe,EAAA8N,GAAA7O,EAAAe,GACAN,EAAA,aAGAiB,EAAA1B,EAAAe,EAAA8N,EACApO,EAAA,WAGA,IAAAwO,IAAAxa,GAAA,EAAAA,IAAA,IAAAiN,EAAAD,EAAAhB,EAAA0iD,EAAAnyD,GAAA,UACAyQ,GAAAoN,EACAA,EAAA9N,EACAA,EAAA,YAAAf,GAAA,GAAAA,IAAA,GACAA,EAAAvL,EACAA,EAAAwa,EAEAvc,KAAA8vD,OAAA,GAAA9vD,KAAA8vD,OAAA,GAAA/tD,EAAA,WACA/B,KAAA8vD,OAAA,GAAA9vD,KAAA8vD,OAAA,GAAAxiD,EAAA,WACAtN,KAAA8vD,OAAA,GAAA9vD,KAAA8vD,OAAA,GAAAzhD,EAAA,WACArO,KAAA8vD,OAAA,GAAA9vD,KAAA8vD,OAAA,GAAA3zC,EAAA,WACAnc,KAAA8vD,OAAA,GAAA9vD,KAAA8vD,OAAA,GAAA/gD,EAAA,YAEAzG,EAAAxL,UAAAoN,OAAA,SAAA81B,EAAA0wB,GAEA,SAAA1wB,EAAA,KAGAnc,KAAA6sC,IACAA,EAAA1wB,EAAAzhC,OAQA,KANA,GAAAoyD,GAAAD,EAAA1wD,KAAAowD,UACA3yD,EAAA,EAEA8yD,EAAAvwD,KAAA+vD,KACAa,EAAA5wD,KAAAkwD,OAEAzyD,EAAAizD,GAAA,CAKA,MAAAE,EACA,KAAAnzD,GAAAkzD,GACA3wD,KAAAswD,UAAAtwB,EAAAviC,GACAA,GAAAuC,KAAAowD,SAGA,qBAAApwB,IACA,KAAAviC,EAAAizD,GAIA,GAHAH,EAAAK,GAAA5wB,EAAAF,WAAAriC,KACAmzD,IACAnzD,EACAmzD,GAAA5wD,KAAAowD,UAAA,CACApwD,KAAAswD,UAAAC,GACAK,EAAA,CAEA,YAKA,MAAAnzD,EAAAizD,GAIA,GAHAH,EAAAK,GAAA5wB,EAAAviC,KACAmzD,IACAnzD,EACAmzD,GAAA5wD,KAAAowD,UAAA,CACApwD,KAAAswD,UAAAC,GACAK,EAAA,CAEA,QAKA5wD,KAAAkwD,OAAAU,EACA5wD,KAAAmwD,QAAAO,IAGApoD,EAAAxL,UAAAsN,OAAA,WACA,GAAAA,MACAymD,EAAA,EAAA7wD,KAAAmwD,MAEAnwD,MAAAkwD,OAAA,GACAlwD,KAAAkK,OAAAlK,KAAAiwD,KAAA,GAAAjwD,KAAAkwD,QAGAlwD,KAAAkK,OAAAlK,KAAAiwD,KAAAjwD,KAAAowD,WAAApwD,KAAAkwD,OAAA,IAGA,QAAA5xD,GAAA0B,KAAAowD,UAAA,EAAwC9xD,GAAA,GAASA,IACjD0B,KAAA+vD,KAAAzxD,GAAA,IAAAuyD,EACAA,GAAA,GAEA7wD,MAAAswD,UAAAtwD,KAAA+vD,KAEA,QADAtyD,GAAA,EACAa,EAAA,EAAuBA,EAAA,EAAOA,IAC9B,OAAAuV,GAAA,GAA4BA,GAAA,EAAQA,GAAA,EACpCzJ,EAAA3M,GAAAuC,KAAA8vD,OAAAxxD,IAAAuV,EAAA,MACApW,CAGA,OAAA2M,IAEA9B,GACCunD,EAAAiB,KACD7rD,GAAAqD,Q1EskZM,SAAU7M,EAAQwJ,EAAStJ,GAEjC,Y2En0ZAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GA0B9C,IAAA40D,GAAA,WACA,QAAAA,KAKA9wD,KAAAowD,WAAA,EAEA,MAAAU,KAEA7rD,GAAA6rD,Q3E21ZM,SAAUr1D,EAAQwJ,EAAStJ,GAEjC,Y4Ev4ZA,SAAA8M,GAAAsoD,EAAAC,GACA,GAAA7M,GAAA,GAAA8M,GAAAF,EAAAC,EACA,OAAA7M,GAAA+M,UAAA/lD,KAAAg5C,GA0KA,QAAA37C,GAAAgE,EAAA2kD,GACA,kBAEA,OADAhxD,MACAqK,EAAA,EAAwBA,EAAAtK,UAAA3B,OAAuBiM,IAC/CrK,EAAAqK,GAAAtK,UAAAsK,EAEAqT,SAAAC,SAAA,GACAtc,KAAA,WACAgL,EAAAlM,UAAA,GAAAH,KAEAsB,MAAA,SAAAC,GACAyvD,GACAA,EAAAzvD,MASA,QAAA0vD,GAAAxjD,EAAA68C,GACA,oBAAA78C,IAAA,OAAAA,EACA,QAEA,QAAApD,GAAA,EAAA6mD,EAAA5G,EAAyCjgD,EAAA6mD,EAAA9yD,OAAuBiM,IAAA,CAChE,GAAA5H,GAAAyuD,EAAA7mD,EACA,IAAA5H,IAAAgL,IAAA,mBAAAA,GAAAhL,GACA,SAGA,SAEA,QAAA0uD,MAtNAv1D,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAa9C+I,EAAAwD,iBAKA,IAAAwoD,GAAA,WAMA,QAAAA,GAAAF,EAAAC,GACA,GAAAlxD,GAAAE,IACAA,MAAAuxD,aACAvxD,KAAAwxD,gBACAxxD,KAAAyxD,cAAA,EAEAzxD,KAAA0xD,KAAA7zC,QAAAC,UACA9d,KAAA2xD,WAAA,EACA3xD,KAAAgxD,gBAIAhxD,KAAA0xD,KACAlwD,KAAA,WACAuvD,EAAAjxD,KAEA2B,MAAA,SAAAsN,GACAjP,EAAA4B,MAAAqN,KAyIA,MAtIAkiD,GAAAn0D,UAAAge,KAAA,SAAA5e,GACA8D,KAAA4xD,gBAAA,SAAAC,GACAA,EAAA/2C,KAAA5e,MAGA+0D,EAAAn0D,UAAA4E,MAAA,SAAAA,GACA1B,KAAA4xD,gBAAA,SAAAC,GACAA,EAAAnwD,WAEA1B,KAAA42C,MAAAl1C,IAEAuvD,EAAAn0D,UAAA6D,SAAA,WACAX,KAAA4xD,gBAAA,SAAAC,GACAA,EAAAlxD,aAEAX,KAAA42C,SAQAqa,EAAAn0D,UAAAo0D,UAAA,SAAAY,EAAApwD,EAAAf,GACA,GACAkxD,GADA/xD,EAAAE,IAEA,QAAA6jB,KAAAiuC,OACAjuC,KAAAniB,OACAmiB,KAAAljB,EACA,SAAAgL,OAAA,oBAIAkmD,GADAT,EAAAU,GAAA,4BACAA,GAIAh3C,KAAAg3C,EACApwD,QACAf,gBAGAkjB,KAAAguC,EAAA/2C,OACA+2C,EAAA/2C,KAAAw2C,OAEAztC,KAAAguC,EAAAnwD,QACAmwD,EAAAnwD,MAAA4vD,OAEAztC,KAAAguC,EAAAlxD,WACAkxD,EAAAlxD,SAAA2wD,EAEA,IAAAS,GAAA/xD,KAAAgyD,eAAA7mD,KAAAnL,UAAAuxD,UAAAhzD,OAqBA,OAjBAyB,MAAA2xD,WACA3xD,KAAA0xD,KAAAlwD,KAAA,WACA,IACA1B,EAAAmyD,WACAJ,EAAAnwD,MAAA5B,EAAAmyD,YAGAJ,EAAAlxD,WAGA,MAAAoO,OAMA/O,KAAAuxD,UAAAlwD,KAAAwwD,GACAE,GAIAd,EAAAn0D,UAAAk1D,eAAA,SAAA1zD,OACAulB,KAAA7jB,KAAAuxD,eAAA1tC,KAAA7jB,KAAAuxD,UAAAjzD,WAGA0B,MAAAuxD,UAAAjzD,GACA0B,KAAAyxD,eAAA,EACA,IAAAzxD,KAAAyxD,mBAAA5tC,KAAA7jB,KAAAgxD,eACAhxD,KAAAgxD,cAAAhxD,QAGAixD,EAAAn0D,UAAA80D,gBAAA,SAAAplD,GACA,IAAAxM,KAAA2xD,UAMA,OAAArzD,GAAA,EAAuBA,EAAA0B,KAAAuxD,UAAAhzD,OAA2BD,IAClD0B,KAAAkyD,QAAA5zD,EAAAkO,IAMAykD,EAAAn0D,UAAAo1D,QAAA,SAAA5zD,EAAAkO,GACA,GAAA1M,GAAAE,IAEAA,MAAA0xD,KAAAlwD,KAAA,WACA,OAAAqiB,KAAA/jB,EAAAyxD,eAAA1tC,KAAA/jB,EAAAyxD,UAAAjzD,GACA,IACAkO,EAAA1M,EAAAyxD,UAAAjzD,IAEA,MAAAyQ,GAIA,oBAAAuoB,kBAAA51B,OACA41B,QAAA51B,MAAAqN,OAMAkiD,EAAAn0D,UAAA85C,MAAA,SAAAnN,GACA,GAAA3pC,GAAAE,IACAA,MAAA2xD,YAGA3xD,KAAA2xD,WAAA,MACA9tC,KAAA4lB,IACAzpC,KAAAiyD,WAAAxoB,GAGAzpC,KAAA0xD,KAAAlwD,KAAA,WACA1B,EAAAyxD,cAAA1tC,GACA/jB,EAAAkxD,kBAAAntC,OAGAotC,IAoBAhsD,GAAAuD,S5E26ZM,SAAU/M,EAAQwJ,EAAStJ,GAEjC,Y6E/jaA,SAAAgN,GAAA+a,EAAAC,EAAAC,GACA,GAAAuuC,GAAA,EACA,QAAAxuC,GACA,OACAwuC,EAAAvuC,EAAA,eACA,MACA,QACAuuC,EAAAvuC,EAAA,iBACA,MACA,QACAuuC,EAAAvuC,EAAA,eACA,MACA,QACAuuC,EAAAvuC,EAAA,iBACA,MACA,SACA,SAAAjY,OAAA,mEAEA,GAAAjK,GAAAgiB,EAAA,WAEA,OADAhiB,IAAAywD,EAAA,aAUA,QAAAppD,GAAA2a,EAAAC,EAAAuB,EAAAtB,GACA,KAAAA,GAAAsB,IAEA,iBAAAA,GAEA,SAAAvZ,OAAAhD,EAAA+a,EAAAC,EAAAC,GACA,uCAIA,QAAA/a,GAAA6a,EAAAC,EAAAjV,EAAAkV,GACA,KAAAA,GAAAlV,IAEA,mBAAAA,GACA,SAAA/C,OAAAhD,EAAA+a,EAAAC,EAAAC,GACA,6BAGA,QAAA9a,GAAA4a,EAAAC,EAAAhV,EAAAiV,GACA,KAAAA,GAAAjV,KAEA,iBAAAA,IAAA,OAAAA,GACA,SAAAhD,OAAAhD,EAAA+a,EAAAC,EAAAC,GACA,mCAzFA7nB,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,IAU9C+I,EAAA2D,iBAAA,SAAA8a,EAAA0uC,EAAAC,EAAAC,GACA,GAAAC,EAOA,IANAD,EAAAF,EACAG,EAAA,YAAAH,EAEAE,EAAAD,IACAE,EAAA,IAAAF,EAAA,uBAAAA,GAEAE,EAAA,CACA,GAAA7wD,GAAAgiB,EACA,4BACA4uC,GACA,IAAAA,EAAA,4BACA,YACAC,EACA,GACA,UAAA5mD,OAAAjK,KAiCAuD,EAAA0D,cAgBA1D,EAAA8D,oBAQA9D,EAAA4D,mBAQA5D,EAAA6D,yB7E4naM,SAAUrN,EAAQwJ,EAAStJ,GAEjC,Y8EztaAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgJ,GAAAvJ,EAAA,IAcAsJ,GAAAiE,kBAAA,SAAAc,GAEA,OADA61B,MAAA76B,EAAA,EACA1G,EAAA,EAAmBA,EAAA0L,EAAAzL,OAAgBD,IAAA,CACnC,GAAA+P,GAAArE,EAAA81B,WAAAxhC,EAEA,IAAA+P,GAAA,OAAAA,GAAA,OACA,GAAAu+B,GAAAv+B,EAAA,KACA/P,KACA4G,EAAAC,OAAA7G,EAAA0L,EAAAzL,OAAA,0CAEA8P,GAAA,OAAAu+B,GAAA,KADA5iC,EAAA81B,WAAAxhC,GAAA,OAGA+P,EAAA,IACAwxB,EAAA76B,KAAAqJ,EAEAA,EAAA,MACAwxB,EAAA76B,KAAAqJ,GAAA,MACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,KAEAA,EAAA,OACAwxB,EAAA76B,KAAAqJ,GAAA,OACAwxB,EAAA76B,KAAAqJ,GAAA,SACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,MAGAwxB,EAAA76B,KAAAqJ,GAAA,OACAwxB,EAAA76B,KAAAqJ,GAAA,UACAwxB,EAAA76B,KAAAqJ,GAAA,SACAwxB,EAAA76B,KAAA,GAAAqJ,EAAA,KAGA,MAAAwxB,IAOA56B,EAAAgE,aAAA,SAAAe,GAEA,OADAhF,GAAA,EACA1G,EAAA,EAAmBA,EAAA0L,EAAAzL,OAAgBD,IAAA,CACnC,GAAA+P,GAAArE,EAAA81B,WAAAxhC,EACA+P,GAAA,IACArJ,IAEAqJ,EAAA,KACArJ,GAAA,EAEAqJ,GAAA,OAAAA,GAAA,OAEArJ,GAAA,EACA1G,KAGA0G,GAAA,EAGA,MAAAA,K9EkvaM,SAAUvJ,EAAQwJ,EAAStJ,GAEjC,Y+E5yaA,SAAA62D,GAAAp2D,GAEA,GAAA8oB,GAAA9oB,EAAA6mC,SAAA6oB,gBAAA,oBAAA57B,EAAAuiC,EAAAnzB,GAA+F,MAAAyD,GAAAhE,YAAAG,cAAAG,gBAAAnP,EAAAoP,KAG/FjG,UAAAyJ,EAAAzJ,UACA2B,MAAA/B,EAAA+B,MACA9C,SAAApI,EAAAoI,SACAttB,cAAAzB,EAAAyB,cACAq4B,WACAQ,cACAivB,eACK,QACLtpD,GAAAhD,cACA3K,EAAAwJ,QAAAigB,GA9BAnpB,OAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA01C,GAAAj2C,EAAA,KACAm0B,EAAAn0B,EAAA,IACAsJ,GAAAizB,SAAApI,EAAAoI,QACA,IAAAe,GAAAt9B,EAAA,IACAsJ,GAAA+1B,MAAA/B,EAAA+B,KACA,IAAA8H,GAAAnnC,EAAA,IACAsJ,GAAAo0B,UAAAyJ,EAAAzJ,SACA,IAAAlwB,GAAAxN,EAAA,IACAsJ,GAAA2F,cAAAzB,EAAAyB,aACA,IAAAm4B,GAAApnC,EAAA,KACAsnC,EAAAtnC,EAAA,KACA+2D,EAAA/2D,EAAA,KACAyN,EAAAzN,EAAA,KACA8nC,EAAA3T,EAAAoI,SAAAuL,WACAx+B,GAAAw+B,cAkBAx+B,EAAAutD,mBACAA,EAAA5gB,EAAArxB,QACA,IAAAoyC,GAAAh3D,EAAA,IACAsJ,GAAAk2B,aAAAw3B,EAAAx3B,YACA,IAAArC,GAAAn9B,EAAA,IACAsJ,GAAA81B,aAAAjC,EAAAiC,c/Eo1aM,SAAUt/B,EAAQwJ,EAAStJ,GAEjC,YgF53aAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAWA8vB,EAAA,WAIA,QAAAA,GAAAmnC,GACA5yD,KAAA4yD,cAEA5yD,KAAA6yD,QAAA,YA2CA,MArCApnC,GAAA3uB,UAAAuO,IAAA,SAAA5M,EAAAvC,GACA,MAAAA,EACA8D,KAAA4yD,YAAApnC,WAAAxrB,KAAA8yD,cAAAr0D,IAGAuB,KAAA4yD,YAAArnC,QAAAvrB,KAAA8yD,cAAAr0D,GAAA0K,EAAAvC,UAAA1K,KAOAuvB,EAAA3uB,UAAAyO,IAAA,SAAA9M,GACA,GAAAs0D,GAAA/yD,KAAA4yD,YAAAI,QAAAhzD,KAAA8yD,cAAAr0D,GACA,cAAAs0D,EACA,KAGA5pD,EAAAxC,SAAAosD,IAMAtnC,EAAA3uB,UAAAwO,OAAA,SAAA7M,GACAuB,KAAA4yD,YAAApnC,WAAAxrB,KAAA8yD,cAAAr0D,KAMAgtB,EAAA3uB,UAAAg2D,cAAA,SAAA5wD,GACA,MAAAlC,MAAA6yD,QAAA3wD,GAEAupB,EAAA3uB,UAAAiT,SAAA,WACA,MAAA/P,MAAA4yD,YAAA7iD,YAEA0b,IAEAxmB,GAAAwmB,qBhFo5aM,SAAUhwB,EAAQwJ,EAAStJ,GAEjC,YiFt9aAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAOA+vB,EAAA,WACA,QAAAA,KACA1rB,KAAAizD,UACAjzD,KAAAklD,mBAAA,EAmBA,MAjBAx5B,GAAA5uB,UAAAuO,IAAA,SAAA5M,EAAAvC,GACA,MAAAA,QACA8D,MAAAizD,OAAAx0D,GAGAuB,KAAAizD,OAAAx0D,GAAAvC,GAGAwvB,EAAA5uB,UAAAyO,IAAA,SAAA9M,GACA,MAAA0K,GAAA9B,SAAArH,KAAAizD,OAAAx0D,GACAuB,KAAAizD,OAAAx0D,GAEA,MAEAitB,EAAA5uB,UAAAwO,OAAA,SAAA7M,SACAuB,MAAAizD,OAAAx0D,IAEAitB,IAEAzmB,GAAAymB,iBjF8+aM,SAAUjwB,EAAQC,EAAqBC,GAE7C,YkFhhbA,SAAAu3D,GAAAC,GACAC,EAAA,EAAA1rD,QAAA,SAAA2rD,GACAA,EAAAtoD,SAAAooD,IlF+gbAp3D,OAAOuB,eAAe5B,EAAqB,cAAgBQ,OAAO,IACjCR,EAAiC,YAAIw3D,CACjD,IAAIE,GAA4Cz3D,EAAoB,IACxDA,GAAoBwgB,EAAEzgB,EAAqB,SAAU,WAAa,MAAO03D,GAA6C,IkFpibvJz3D,EAAAwgB,EAAAzgB,EAAA,4BAAA03D,GAAA,KlFkkbM,SAAU33D,EAAQwJ,EAAStJ,GAEjC,YmFpjbAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACA6+B,EAAA,WAQA,QAAAA,GAAAD,EAAA1R,GACA7oB,KAAAu6B,YACAv6B,KAAA6oB,WAQA,MAJA2R,GAAA19B,UAAAy+B,OAAA,WAEA,MADApyB,GAAAP,iBAAA,+BAAA1I,UAAA3B,SACgBg8B,UAAAv6B,KAAAu6B,UAAA1R,SAAA7oB,KAAA6oB,SAAA0S,WAEhBf,IAEAv1B,GAAAu1B,qBnF4kbM,SAAU/+B,EAAQwJ,EAAStJ,GAEjC,YoFpmbAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,IAeAsJ,GAAA01B,WAAA,WAEA,GAAA24B,GAAA,mEAGAC,EAAA,EAKAC,IACA,iBAAAhtC,GACA,GAAAitC,GAAAjtC,IAAA+sC,CACAA,GAAA/sC,CACA,IAAAloB,GACAo1D,EAAA,GAAAn4D,OAAA,EACA,KAAA+C,EAAA,EAAmBA,GAAA,EAAQA,IAC3Bo1D,EAAAp1D,GAAAg1D,EAAAnxB,OAAA3b,EAAA,IAGAA,EAAAzZ,KAAAC,MAAAwZ,EAAA,GAEArd,GAAAhE,OAAA,IAAAqhB,EAAA,2BACA,IAAAjjB,GAAAmwD,EAAAhkD,KAAA,GACA,IAAA+jD,EAKA,CAGA,IAAAn1D,EAAA,GAAwBA,GAAA,QAAAk1D,EAAAl1D,GAAmCA,IAC3Dk1D,EAAAl1D,GAAA,CAEAk1D,GAAAl1D,SAVA,KAAAA,EAAA,EAAuBA,EAAA,GAAQA,IAC/Bk1D,EAAAl1D,GAAAyO,KAAAC,MAAA,GAAAD,KAAA4a,SAWA,KAAArpB,EAAA,EAAmBA,EAAA,GAAQA,IAC3BiF,GAAA+vD,EAAAnxB,OAAAqxB,EAAAl1D,GAGA,OADA6K,GAAAhE,OAAA,KAAA5B,EAAAhF,OAAA,oCACAgF,OpF8nbM,SAAU9H,EAAQwJ,EAAStJ,GAEjC,YqFzrbAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAy2D,GAAAh3D,EAAA,KACAg4D,EAAAh4D,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KAIAqtC,EAAA,WAMA,QAAAA,GAAA4qB,EAAAC,EAAAC,GACA9zD,KAAA4zD,YACA5zD,KAAA6zD,kBACA7zD,KAAA8zD,WAmEA,MA9DA9qB,GAAAlsC,UAAAi3D,WAAA,SAAAtvC,GACA,gBAAAA,GAKAukB,EAAAlsC,UAAA8sD,YAAA,SAAAoK,EAAAvjD,GACA,GAAAkJ,GAAAlJ,EAAA63B,iBAAAhK,UACA,WAAAq1B,GAAAM,UAAA,QAAAj0D,KAAA,GAAA2yD,GAAAx3B,aAAA64B,EAAAvrC,aAAAhY,EAAAorB,SAAAliB,KAKAqvB,EAAAlsC,UAAAo3D,eAAA,SAAAnb,GACA,GAAAob,GAAAn0D,KAAA8zD,QACA,eAAA/a,EAAAqb,eAAA,CACAhrD,EAAAjE,OAAAnF,KAAA6zD,gBAAA,+DACA,IAAAQ,GAAAr0D,KAAA6zD,eACA,mBAEAQ,EAAA53D,KAAA03D,EAAApb,EAAAr3C,QAIA,GAAA4yD,GAAAt0D,KAAA4zD,SACA,mBACAU,EAAA73D,KAAA03D,EAAApb,EAAAlwB,YAOAmgB,EAAAlsC,UAAAy3D,kBAAA,SAAA7yD,EAAAiP,GACA,MAAA3Q,MAAA6zD,gBACA,GAAAF,GAAAa,YAAAx0D,KAAA0B,EAAAiP,GAGA,MAMAq4B,EAAAlsC,UAAA6pD,QAAA,SAAA/yC,GACA,MAAAA,aAAAo1B,MAGAp1B,EAAAggD,YAAA5zD,KAAA4zD,WAKAhgD,EAAAggD,YAAA5zD,KAAA4zD,WAAAhgD,EAAAkgD,WAAA9zD,KAAA8zD,WAMA9qB,EAAAlsC,UAAA23D,eAAA,WACA,cAAAz0D,KAAA4zD,WAEA5qB,IAEA/jC,GAAA+jC,wBAUA,IAAAC,GAAA,WAMA,QAAAA,GAAAyrB,EAAAb,EAAAC,GACA9zD,KAAA00D,aACA10D,KAAA6zD,kBACA7zD,KAAA8zD,WAyFA,MApFA7qB,GAAAnsC,UAAAi3D,WAAA,SAAAtvC,GACA,GAAAkwC,GAAA,mBAAAlwC,EAAA,cAAAA,CAGA,OAFAkwC,GACA,qBAAAA,EAAA,gBAAAA,EACAxrD,EAAA9B,SAAArH,KAAA00D,WAAAC,IAKA1rB,EAAAnsC,UAAAy3D,kBAAA,SAAA7yD,EAAAiP,GACA,MAAA3Q,MAAA6zD,gBACA,GAAAF,GAAAa,YAAAx0D,KAAA0B,EAAAiP,GAGA,MAMAs4B,EAAAnsC,UAAA8sD,YAAA,SAAAoK,EAAAvjD,GACArH,EAAAjE,OAAA,MAAA6uD,EAAAl8C,UAAA,wCACA,IAAA1W,GAAAqP,EAAAorB,SAAAhpB,MAA0DmhD,EAAA,WAC1Dr6C,EAAAlJ,EAAA63B,iBAAAhK,UACA,WAAAq1B,GAAAM,UAAAD,EAAAxwD,KAAAxD,KAAA,GAAA2yD,GAAAx3B,aAAA64B,EAAAvrC,aAAArnB,EAAAuY,GAAAq6C,EAAArrC,WAKAsgB,EAAAnsC,UAAAo3D,eAAA,SAAAnb,GACA,GAAAob,GAAAn0D,KAAA8zD,QACA,eAAA/a,EAAAqb,eAAA,CACAhrD,EAAAjE,OAAAnF,KAAA6zD,gBAAA,+DACA,IAAAe,GAAA50D,KAAA6zD,eACA,mBAEAe,EAAAn4D,KAAA03D,EAAApb,EAAAr3C,QAIA,GAAAmzD,GAAA70D,KAAA00D,WAAA3b,EAAAt0B,UACA,mBACAowC,EAAAp4D,KAAA03D,EAAApb,EAAAlwB,SAAAkwB,EAAApwB,YAOAsgB,EAAAnsC,UAAA6pD,QAAA,SAAA/yC,GACA,GAAAA,YAAAq1B,GAAA,CACA,IAAAjpC,KAAA00D,aAAA9gD,EAAA8gD,WACA,QAEA,IAAA10D,KAAA8zD,WAAAlgD,EAAAkgD,SAAA,CACA,GAAAgB,GAAA3rD,EAAAvB,SAAAgM,EAAA8gD,WAEA,IAAAI,IADA3rD,EAAAvB,SAAA5H,KAAA00D,YACA,CAIA,OAAAI,EAAA,CACA,GAAAC,GAAwD5rD,EAAAxB,UAAAiM,EAAA8gD,YACxDM,EAAuD7rD,EAAAxB,UAAA3H,KAAA00D,WACvD,OAAAM,KAAAD,KACAnhD,EAAA8gD,WAAAK,KACA/0D,KAAA00D,WAAAM,IACAphD,EAAA8gD,WAAAK,KAAA/0D,KAAA00D,WAAAM,IAIA,MAAA7rD,GAAA7B,MAAAtH,KAAA00D,WAAA,SAAAjwC,EAAAwwC,GAAuF,MAAArhD,GAAA8gD,WAAAjwC,KAAAwwC,MAKvF,UAKAhsB,EAAAnsC,UAAA23D,eAAA,WACA,cAAAz0D,KAAA00D,YAEAzrB,IAEAhkC,GAAAgkC,0BrFitbM,SAAUxtC,EAAQwJ,EAAStJ,GAEjC,YsFv5bAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAKAs4D,EAAA,WAOA,QAAAA,GAAAxvC,EAAAqS,EAAAjO,EAAAF,GACA3oB,KAAAykB,YACAzkB,KAAA82B,oBACA92B,KAAA6oB,WACA7oB,KAAA2oB,WAoCA,MA/BAsrC,GAAAn3D,UAAAo4D,QAAA,WACA,GAAA9zD,GAAApB,KAAA6oB,SAAAgT,QACA,iBAAA77B,KAAAykB,UACArjB,EAAAuP,KAGAvP,EAAAs4B,YAAA/oB,MAMAsjD,EAAAn3D,UAAAs3D,aAAA,WACA,MAAAp0D,MAAAykB,WAKAwvC,EAAAn3D,UAAAo3D,eAAA,WACA,MAAAl0D,MAAA82B,kBAAAo9B,eAAAl0D,OAKAi0D,EAAAn3D,UAAAiT,SAAA,WACA,MAAA/P,MAAAk1D,UAAAnlD,WACA,IACA/P,KAAAykB,UACA,IACAtb,EAAAvC,UAAA5G,KAAA6oB,SAAAyS,cAEA24B,IAEAhvD,GAAAgvD,WACA,IAAAO,GAAA,WAMA,QAAAA,GAAA19B,EAAAp1B,EAAAiP,GACA3Q,KAAA82B,oBACA92B,KAAA0B,QACA1B,KAAA2Q,OA0BA,MArBA6jD,GAAA13D,UAAAo4D,QAAA,WACA,MAAAl1D,MAAA2Q,MAKA6jD,EAAA13D,UAAAs3D,aAAA,WACA,gBAKAI,EAAA13D,UAAAo3D,eAAA,WACA,MAAAl0D,MAAA82B,kBAAAo9B,eAAAl0D,OAKAw0D,EAAA13D,UAAAiT,SAAA,WACA,MAAA/P,MAAA2Q,KAAAZ,WAAA,WAEAykD,IAEAvvD,GAAAuvD,etF+6bM,SAAU/4D,EAAQwJ,EAAStJ,GAEjC,YuF9gcAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAw5D,EAAAx5D,EAAA,KACAguB,EAAAhuB,EAAA,KACA0N,EAAA1N,EAAA,KACAy5D,EAAAz5D,EAAA,KACA05D,EAAA15D,EAAA,KACA25D,EAAA35D,EAAA,KACA4yC,EAAA5yC,EAAA,KACA45D,EAAA55D,EAAA,KACAonB,EAAApnB,EAAA,KACAy9B,EAAAz9B,EAAA,KACA65D,EAAA75D,EAAA,KAuBAw2B,EAAA,WAKA,QAAAA,GAAAsjC,GACAz1D,KAAAy1D,kBAMAz1D,KAAA01D,eAAAN,EAAAp5B,cAAA5F,MAMAp2B,KAAA21D,kBAAA,GAAAH,GAAAI,UACA51D,KAAA61D,kBACA71D,KAAA81D,kBA0nBA,MA/mBA3jC,GAAAr1B,UAAAk4B,mBAAA,SAAArkB,EAAAolD,EAAAhhC,EAAA2hB,GAGA,MADA12C,MAAA21D,kBAAAK,aAAArlD,EAAAolD,EAAAhhC,EAAA2hB,GACAA,EAIA12C,KAAAi2D,4BAAA,GAAAV,GAAA/mB,UAAAD,EAAA1oB,gBAAAK,KAAAvV,EAAAolD,QAWA5jC,EAAAr1B,UAAAg5B,eAAA,SAAAnlB,EAAAmjB,EAAAiB,GAEA/0B,KAAA21D,kBAAAO,SAAAvlD,EAAAmjB,EAAAiB,EACA,IAAAohC,GAAAf,EAAAp5B,cAAAC,WAAAnI,EACA,OAAA9zB,MAAAi2D,4BAAA,GAAAX,GAAAc,MAAA7nB,EAAA1oB,gBAAAK,KAAAvV,EAAAwlD,KASAhkC,EAAAr1B,UAAAw4B,aAAA,SAAAP,EAAAshC,OACA,KAAAA,IAAgCA,GAAA,EAChC,IAAAjV,GAAAphD,KAAA21D,kBAAAW,SAAAvhC,EAEA,IADA/0B,KAAA21D,kBAAAY,YAAAxhC,GAIA,CACA,GAAAyhC,GAAApB,EAAAp5B,cAAA5F,KAUA,OATA,OAAAgrB,EAAAptB,KAEAwiC,IAAAnrD,IAAA0X,EAAArR,KAAA0kB,OAAA,GAGA/sB,EAAA3B,QAAA05C,EAAA//B,SAAA,SAAAhP,EAAAiD,GACAkhD,IAAAnrD,IAAA,GAAA0X,GAAArR,KAAAW,GAAAiD,KAGAtV,KAAAi2D,4BAAA,GAAAd,GAAAsB,aAAArV,EAAAzwC,KAAA6lD,EAAAH,IAbA,UAuBAlkC,EAAAr1B,UAAA41B,qBAAA,SAAA/hB,EAAAolD,GACA,MAAA/1D,MAAAi2D,4BAAA,GAAAV,GAAA/mB,UAAAD,EAAA1oB,gBAAAM,OAAAxV,EAAAolD,KASA5jC,EAAAr1B,UAAAi3B,iBAAA,SAAApjB,EAAAmjB,GACA,GAAAqiC,GAAAf,EAAAp5B,cAAAC,WAAAnI,EACA,OAAA9zB,MAAAi2D,4BAAA,GAAAX,GAAAc,MAAA7nB,EAAA1oB,gBAAAM,OAAAxV,EAAAwlD,KAQAhkC,EAAAr1B,UAAA45D,oBAAA,SAAA/lD,GACA,MAAA3Q,MAAAi2D,4BAAA,GAAAZ,GAAAsB,eAAApoB,EAAA1oB,gBAAAM,OAAAxV,KAUAwhB,EAAAr1B,UAAA+2B,0BAAA,SAAAljB,EAAAqjB,EAAA3B,GACA,GAAAukC,GAAA52D,KAAA62D,gBAAAxkC,EACA,UAAAukC,EAAA,CACA,GAAA/5C,GAAAsV,EAAA2kC,eAAAF,GACAG,EAAAl6C,EAAAlM,KAAAqV,EAAAnJ,EAAAmJ,QACAhT,EAAA+P,EAAArR,KAAAsB,aAAA+jD,EAAApmD,GACA4N,EAAA,GAAAg3C,GAAA/mB,UAAAD,EAAA1oB,gBAAAO,qBAAAJ,GAAAhT,EAAAghB,EACA,OAAAh0B,MAAAg3D,sBAAAD,EAAAx4C,GAIA,UAWA4T,EAAAr1B,UAAA62B,sBAAA,SAAAhjB,EAAAmjB,EAAAzB,GACA,GAAAukC,GAAA52D,KAAA62D,gBAAAxkC,EACA,IAAAukC,EAAA,CACA,GAAA/5C,GAAAsV,EAAA2kC,eAAAF,GACAG,EAAAl6C,EAAAlM,KAAAqV,EAAAnJ,EAAAmJ,QACAhT,EAAA+P,EAAArR,KAAAsB,aAAA+jD,EAAApmD,GACAwlD,EAAAf,EAAAp5B,cAAAC,WAAAnI,GACAvV,EAAA,GAAA+2C,GAAAc,MAAA7nB,EAAA1oB,gBAAAO,qBAAAJ,GAAAhT,EAAAmjD,EACA,OAAAn2D,MAAAg3D,sBAAAD,EAAAx4C,GAIA,UAUA4T,EAAAr1B,UAAAm6D,0BAAA,SAAAtmD,EAAA0hB,GACA,GAAAukC,GAAA52D,KAAA62D,gBAAAxkC,EACA,IAAAukC,EAAA,CACA,GAAA/5C,GAAAsV,EAAA2kC,eAAAF,GACAG,EAAAl6C,EAAAlM,KAAAqV,EAAAnJ,EAAAmJ,QACAhT,EAAA+P,EAAArR,KAAAsB,aAAA+jD,EAAApmD,GACA4N,EAAA,GAAA82C,GAAAsB,eAAApoB,EAAA1oB,gBAAAO,qBAAAJ,GAAAhT,EACA,OAAAhT,MAAAg3D,sBAAAD,EAAAx4C,GAIA,UAUA4T,EAAAr1B,UAAAi6B,qBAAA,SAAAtmB,EAAAqmB,GACA,GAAAnmB,GAAAF,EAAAE,KACA0+B,EAAA,KACA6nB,GAAA,CAGAl3D,MAAA01D,eAAAp4B,cAAA3sB,EAAA,SAAAwmD,EAAAC,GACA,GAAApkD,GAAA+P,EAAArR,KAAAsB,aAAAmkD,EAAAxmD,EACA0+B,MAAA+nB,EAAA3mB,uBAAAz9B,GACAkkD,EACAA,GAAAE,EAAAjnB,mBAEA,IAAAknB,GAAAr3D,KAAA01D,eAAAnqD,IAAAoF,EACA0mD,IAKAH,EACAA,GAAAG,EAAAlnB,kBACAd,KAAAgoB,EAAA5mB,uBAAA1tB,EAAArR,KAAA0kB,SANAihC,EAAA,GAAAj+B,GAAA8B,UACAl7B,KAAA01D,eAAA11D,KAAA01D,eAAArqD,IAAAsF,EAAA0mD,GAOA,IAAA/nB,EACA,UAAAD,EACAC,GAAA,MAEA,CACAA,GAAA,EACAD,EAAA1lB,EAAA3S,aAAAP,UACAzW,MAAA01D,eAAAl5B,QAAA7rB,GACAgtB,aAAA,SAAA7lB,EAAAw/C,GACA,GAAAC,GAAAD,EAAA7mB,uBAAA1tB,EAAArR,KAAA0kB,MACAmhC,KACAloB,IAAAn3B,qBAAAJ,EAAAy/C,MAIA,GAAAC,GAAAH,EAAAzmB,mBAAAngC,EACA,KAAA+mD,IAAA/mD,EAAA63B,iBAAAgI,eAAA,CAEA,GAAAsmB,GAAAzkC,EAAAslC,cAAAhnD,EACAtH,GAAAhE,SAAAyxD,IAAA52D,MAAA81D,gBAAA,yCACA,IAAAzjC,GAAAF,EAAAulC,kBACA13D,MAAA81D,eAAAc,GAAAvkC,EAEAryB,KAAA61D,eAAA,IAAAxjC,GAAAukC,EAEA,GAAA3nB,GAAAjvC,KAAA21D,kBAAAgC,YAAAhnD,GACAoiB,EAAAskC,EAAAtgC,qBAAAtmB,EAAAqmB,EAAAmY,EAAAI,EAAAC,EACA,KAAAkoB,IAAAN,EAAA,CACA,GAAA/nB,GAAAkoB,EAAA3mB,aAAAjgC,EACAsiB,KAAAv3B,OAAAwE,KAAA43D,eAAAnnD,EAAA0+B,IAEA,MAAApc,IAaAZ,EAAAr1B,UAAAo6B,wBAAA,SAAAzmB,EAAAqmB,EAAAiZ,GACA,GAAAjwC,GAAAE,KAEA2Q,EAAAF,EAAAE,KACAknD,EAAA73D,KAAA01D,eAAAnqD,IAAAoF,GACAs/B,IAIA,IAAA4nB,IACA,YAAApnD,EAAAg6B,mBACAotB,EAAAjnB,mBAAAngC,IAAA,CAIA,GAAAqnD,GAAAD,EAAA3gC,wBAAAzmB,EAAAqmB,EAAAiZ,EACA8nB,GAAA/vD,YACA9H,KAAA01D,eAAA11D,KAAA01D,eAAApqD,OAAAqF,GAEA,IAAAq/B,GAAA8nB,EAAA9nB,OACAC,GAAA6nB,EAAA/kC,MAOA,IAAAglC,IAAA,IACA/nB,EAAAgoB,UAAA,SAAAvnD,GACA,MAAAA,GAAA63B,iBAAAgI,iBAEA2nB,EAAAj4D,KAAA01D,eAAAx4B,WAAAvsB,EAAA,SAAAqC,EAAAklD,GACA,MAAAA,GAAA/nB,mBAEA,IAAA4nB,IAAAE,EAAA,CACA,GAAAz7B,GAAAx8B,KAAA01D,eAAAl5B,QAAA7rB,EAGA,KAAA6rB,EAAA10B,UAIA,OAFAqwD,GAAAn4D,KAAAo4D,gCAAA57B,GAEAl+B,EAAA,EAAmCA,EAAA65D,EAAA55D,SAAqBD,EAAA,CACxD,GAAA6wC,GAAAgpB,EAAA75D,GAAA+5D,EAAAlpB,EAAAkB,WACAqd,EAAA1tD,KAAAs4D,uBAAAnpB,EACAnvC,MAAAy1D,gBAAArjC,eAAAD,EAAAomC,mBAAAF,GAAAr4D,KAAAw4D,aAAAH,GAAA3K,EAAApZ,OAAAoZ,EAAAn7B,aAUA,IAAA0lC,GAAAjoB,EAAAzxC,OAAA,IAAAwxC,EAGA,GAAAgoB,EAAA,CAGA/3D,KAAAy1D,gBAAA9iC,cAAAR,EAAAomC,mBAAA9nD,GADA,UAIAu/B,GAAAtoC,QAAA,SAAA+wD,GACA,GAAAC,GAAA54D,EAAAg2D,eAAA3jC,EAAAslC,cAAAgB,GACA34D,GAAA21D,gBAAA9iC,cAAAR,EAAAomC,mBAAAE,GAAAC,IAKA14D,MAAA24D,YAAA3oB,GAKA,MAAAC,IAWA9d,EAAAr1B,UAAA0yC,uBAAA,SAAA7+B,EAAAioD,GACA,GACAC,GAAA74D,KAAA21D,kBACAtmB,EAAArvC,KAAA01D,eAAAx4B,WAAAvsB,EAAA,SAAAqsB,EAAAq6B,GACA,GAAArkD,GAAA+P,EAAArR,KAAAsB,aAAAgqB,EAAArsB,GACA0+B,EAAAgoB,EAAA5mB,uBAAAz9B,EACA,IAAAq8B,EACA,MAAAA,IAGA,OAAAwpB,GAAArpB,uBAAA7+B,EAAA0+B,EAAAupB,GATA,IAmBAzmC,EAAAr1B,UAAAs7D,gCAAA,SAAA57B,GACA,MAAAA,GAAAM,KAAA,SAAA9pB,EAAA8lD,EAAAC,GACA,GAAAD,KAAA3oB,kBAAA,CAEA,OADA2oB,EAAAnoB,mBAKA,GAAAqoB,KAOA,OANAF,KACAE,EAAAF,EAAAvoB,iBAEAlnC,EAAA3B,QAAAqxD,EAAA,SAAAt6D,EAAAw6D,GACAD,IAAAx9D,OAAAy9D,KAEAD,KAQA7mC,EAAAr1B,UAAA67D,YAAA,SAAAtgB,GACA,OAAAxkC,GAAA,EAAuBA,EAAAwkC,EAAA95C,SAAoBsV,EAAA,CAC3C,GAAAqlD,GAAA7gB,EAAAxkC,EACA,KAAAqlD,EAAA5wB,iBAAAgI,eAAA,CAEA,GAAA6oB,GAAAhnC,EAAAslC,cAAAyB,GACAE,EAAAp5D,KAAA81D,eAAAqD,SACAn5D,MAAA81D,eAAAqD,SACAn5D,MAAA61D,eAAA,IAAAuD,MAUAjnC,EAAAomC,mBAAA,SAAA9nD,GACA,MAAAA,GAAA63B,iBAAAgI,iBACA7/B,EAAA63B,iBAAA8L,YAIqC3jC,EAAAorB,SAGrCprB,GAWA0hB,EAAAr1B,UAAA86D,eAAA,SAAAnnD,EAAA0+B,GACA,GAAAx+B,GAAAF,EAAAE,KACA0hB,EAAAryB,KAAAw4D,aAAA/nD,GACAi9C,EAAA1tD,KAAAs4D,uBAAAnpB,GACApc,EAAA/yB,KAAAy1D,gBAAArjC,eAAAD,EAAAomC,mBAAA9nD,GAAA4hB,EAAAq7B,EAAApZ,OAAAoZ,EAAAn7B,YACAiK,EAAAx8B,KAAA01D,eAAAl5B,QAAA7rB,EAGA,IAAA0hB,EACAlpB,EAAAhE,QAAAq3B,EAAAtgC,MAAAi0C,kBAAA,yDAsBA,QAlBAkpB,GAAA78B,EAAAM,KAAA,SAAA9pB,EAAA8lD,EAAAC,GACA,IAAA/lD,EAAAlL,WACAgxD,GACAA,EAAA3oB,kBACA,OAAA2oB,EAAAnoB,kBAAAN,WAIA,IAAAipB,KAOA,OANAR,KACAQ,IAAA99D,OAAAs9D,EAAAvoB,gBAAAvoC,IAAA,SAAAmnC,GAA8G,MAAAA,GAAAkB,eAE9GhnC,EAAA3B,QAAAqxD,EAAA,SAAAt6D,EAAA86D,GACAD,IAAA99D,OAAA+9D,KAEAD,IAGAh7D,EAAA,EAA2BA,EAAA+6D,EAAA96D,SAA0BD,EAAA,CACrD,GAAAk7D,GAAAH,EAAA/6D,EACA0B,MAAAy1D,gBAAA9iC,cAAAR,EAAAomC,mBAAAiB,GAAAx5D,KAAAw4D,aAAAgB,IAGA,MAAAzmC,IAQAZ,EAAAr1B,UAAAw7D,uBAAA,SAAAnpB,GACA,GAAArvC,GAAAE,KACAyQ,EAAA0+B,EAAAkB,WACAhe,EAAAryB,KAAAw4D,aAAA/nD,EACA,QACA6jC,OAAA,WAEA,OADAnF,EAAAmC,kBAAA3nB,EAAA3S,aAAAP,YACA6C,QAEAiZ,WAAA,SAAA1wB,GACA,UAAAA,EACA,MAAAwwB,GACAvyB,EAAAm3D,0BAAAxmD,EAAAE,KAAA0hB,GAGAvyB,EAAA42D,oBAAAjmD,EAAAE,KAMA,IAAAjP,GAAA0H,EAAAmH,mBAAA1O,EAAA4O,EACA,OAAA3Q,GAAAo3B,wBAAAzmB,EACA,KAAA/O,MAWAywB,EAAAslC,cAAA,SAAAhnD,GACA,MAAAA,GAAAE,KAAAZ,WAAA,IAAAU,EAAAg6B,mBAQAtY,EAAA2kC,eAAA,SAAAF,GACA,GAAA6C,GAAA7C,EAAA7qD,QAAA,IAEA,OADA5C,GAAAhE,QAAA,IAAAs0D,KAAA7C,EAAAr4D,OAAA,oBAEAynB,QAAA4wC,EAAA9mD,OAAA2pD,EAAA,GACA9oD,KAAA,GAAAoS,GAAArR,KAAAklD,EAAA9mD,OAAA,EAAA2pD,MASAtnC,EAAAr1B,UAAA+5D,gBAAA,SAAAxkC,GACA,MAAAryB,MAAA61D,eAAA,IAAAxjC,IAQAF,EAAAr1B,UAAA07D,aAAA,SAAA/nD,GACA,GAAAmmD,GAAAzkC,EAAAslC,cAAAhnD,EACA,OAAApH,GAAApB,QAAAjI,KAAA81D,eAAAc,IAOAzkC,EAAAulC,iBAAA,WACA,MAAAvlC,GAAAunC,iBAUAvnC,EAAAr1B,UAAAk6D,sBAAA,SAAAD,EAAA/nB,GACA,GAAAqoB,GAAAr3D,KAAA01D,eAAAnqD,IAAAwrD,EACA5tD,GAAAhE,OAAAkyD,EAAA,uDACA,IAAApoB,GAAAjvC,KAAA21D,kBAAAgC,YAAAZ,EACA,OAAAM,GAAAtoB,eAAAC,EAAAC,EACA,OAmBA9c,EAAAr1B,UAAAm5D,4BAAA,SAAAjnB,GACA,MAAAhvC,MAAA25D,sBAAA3qB,EAAAhvC,KAAA01D,eACA,KAAA11D,KAAA21D,kBAAAgC,YAAA50C,EAAArR,KAAA0kB,SAYAjE,EAAAr1B,UAAA68D,sBAAA,SAAA3qB,EAAA4qB,EAAAvqB,EAAAJ,GACA,GAAAD,EAAAr+B,KAAA7I,UACA,MAAA9H,MAAA65D,iCAAA7qB,EAAA4qB,EAAAvqB,EAAAJ,EAGA,IAAAooB,GAAAuC,EAAAruD,IAAAwX,EAAArR,KAAA0kB,MAEA,OAAAiZ,GAAA,MAAAgoB,IACAhoB,EAAAgoB,EAAA5mB,uBAAA1tB,EAAArR,KAAA0kB,OAEA,IAAArD,MACAjb,EAAAk3B,EAAAr+B,KAAAsB,WACA6nD,EAAA9qB,EAAAN,kBAAA52B,GACA2kB,EAAAm9B,EAAAv4C,SAAA9V,IAAAuM,EACA,IAAA2kB,GAAAq9B,EAAA,CACA,GAAAC,GAAA1qB,EACAA,EAAAx3B,kBAAAC,GACA,KACAkiD,EAAA/qB,EAAAp8B,MAAAiF,EACAib,KAAAv3B,OAAAwE,KAAA25D,sBAAAG,EAAAr9B,EAAAs9B,EAAAC,IAKA,MAHA3C,KACAtkC,IAAAv3B,OAAA67D,EAAAtoB,eAAAC,EAAAC,EAAAI,KAEAtc,GAaAZ,EAAAr1B,UAAA+8D,iCAAA,SAAA7qB,EAAA4qB,EAAAvqB,EAAAJ,GACA,GAAAnvC,GAAAE,KACAq3D,EAAAuC,EAAAruD,IAAAwX,EAAArR,KAAA0kB,MAEA,OAAAiZ,GAAA,MAAAgoB,IACAhoB,EAAAgoB,EAAA5mB,uBAAA1tB,EAAArR,KAAA0kB,OAEA,IAAArD,KAcA,OAbA6mC,GAAAv4C,SAAA9G,iBAAA,SAAAzC,EAAA2kB,GACA,GAAAs9B,GAAA1qB,EACAA,EAAAx3B,kBAAAC,GACA,KACAkiD,EAAA/qB,EAAAp8B,MAAAiF,GACAgiD,EAAA9qB,EAAAN,kBAAA52B,EACAgiD,KACA/mC,IAAAv3B,OAAAsE,EAAA+5D,iCAAAC,EAAAr9B,EAAAs9B,EAAAC,OAGA3C,IACAtkC,IAAAv3B,OAAA67D,EAAAtoB,eAAAC,EAAAC,EAAAI,KAEAtc,GAOAZ,EAAAunC,cAAA,EACAvnC,IAEAltB,GAAAktB,YvFsicM,SAAU12B,EAAQwJ,EAAStJ,GAEjC,YwF5tdAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAonB,EAAApnB,EAAA,KACA4yC,EAAA5yC,EAAA,KACA86D,EAAA,WAOA,QAAAA,GACA9lD,EACAspD,EACA5D,GACAr2D,KAAA2Q,OACA3Q,KAAAi6D,eACAj6D,KAAAq2D,SAEAr2D,KAAAwD,KAAA+qC,EAAA3oB,cAAAs0C,eAEAl6D,KAAA89B,OAAAyQ,EAAA1oB,gBAAAK,KAoBA,MAfAuwC,GAAA35D,UAAA4xC,kBAAA,SAAA52B,GACA,GAAA9X,KAAA2Q,KAAA7I,UAIA,UAAA9H,KAAAi6D,aAAA/9D,MAGA,MAFAiN,GAAAhE,OAAAnF,KAAAi6D,aAAA54C,SAAAvZ,UAAA,4DAEA9H,IAGA,IAAAy8B,GAAAz8B,KAAAi6D,aAAAz9B,QAAA,GAAAzZ,GAAArR,KAAAoG,GACA,WAAA2+C,GAAA1zC,EAAArR,KAAA0kB,MAAAqG,EAAAz8B,KAAAq2D,QATA,MADAltD,GAAAhE,OAAAnF,KAAA2Q,KAAAsB,aAAA6F,EAAA,iDACA,GAAA2+C,GAAAz2D,KAAA2Q,KAAAwB,WAAAnS,KAAAi6D,aAAAj6D,KAAAq2D,SAYAI,IAEAxxD,GAAAwxD,gBxFovdM,SAAUh7D,EAAQwJ,EAAStJ,GAEjC,YyFjydAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6mB,GAAApnB,EAAA,KACA4yC,EAAA5yC,EAAA,KAOAg7D,EAAA,WACA,QAAAA,GAAA74B,EAAAntB,GACA3Q,KAAA89B,SACA99B,KAAA2Q,OAEA3Q,KAAAwD,KAAA+qC,EAAA3oB,cAAAu0C,gBAUA,MARAxD,GAAA75D,UAAA4xC,kBAAA,SAAA52B,GACA,MAAA9X,MAAA2Q,KAAA7I,UACA,GAAA6uD,GAAA32D,KAAA89B,OAAA/a,EAAArR,KAAA0kB,OAGA,GAAAugC,GAAA32D,KAAA89B,OAAA99B,KAAA2Q,KAAAwB,aAGAwkD,IAEA1xD,GAAA0xD,kBzFyzdM,SAAUl7D,EAAQwJ,EAAStJ,GAEjC,Y0Fr1dAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAqyC,GAAA5yC,EAAA,KACA45D,EAAA55D,EAAA,KACAonB,EAAApnB,EAAA,KACAwN,EAAAxN,EAAA,KAQAy6D,EAAA,WACA,QAAAA,GACAt4B,EACAntB,EACA0Q,GACArhB,KAAA89B,SACA99B,KAAA2Q,OACA3Q,KAAAqhB,WAEArhB,KAAAwD,KAAA+qC,EAAA3oB,cAAAw0C,MAsCA,MAjCAhE,GAAAt5D,UAAA4xC,kBAAA,SAAA52B,GACA,GAAA9X,KAAA2Q,KAAA7I,UAAA,CACA,GAAA20B,GAAAz8B,KAAAqhB,SAAAmb,QAAA,GAAAzZ,GAAArR,KAAAoG,GACA,OAAA2kB,GAAA30B,UAEA,KAEA20B,EAAAvgC,MAEA,GAAAq5D,GAAA/mB,UAAAxuC,KAAA89B,OAAA/a,EAAArR,KAAA0kB,MAAAqG,EAAAvgC,OAIA,GAAAk6D,GAAAp2D,KAAA89B,OAAA/a,EAAArR,KAAA0kB,MAAAqG,GAKA,MADAtzB,GAAAhE,OAAAnF,KAAA2Q,KAAAsB,aAAA6F,EAAA,kEACA,GAAAs+C,GAAAp2D,KAAA89B,OAAA99B,KAAA2Q,KAAAwB,WAAAnS,KAAAqhB,WAMA+0C,EAAAt5D,UAAAiT,SAAA,WACA,mBACA/P,KAAA2Q,KACA,KACA3Q,KAAA89B,OAAA/tB,WACA,WACA/P,KAAAqhB,SAAAtR,WACA,KAEAqmD,IAEAnxD,GAAAmxD,S1F62dM,SAAU36D,EAAQwJ,EAAStJ,GAEjC,Y2F56dAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAgqD,GAAAvqD,EAAA,KACA0+D,EAAA1+D,EAAA,KACAguB,EAAAhuB,EAAA,KACAgzC,EAAAhzC,EAAA,KACAizC,EAAAjzC,EAAA,KACA2+D,EAAA3+D,EAAA,KACAwN,EAAAxN,EAAA,KACA4yC,EAAA5yC,EAAA,KACAiiC,EAAAjiC,EAAA,KACAib,EAAAjb,EAAA,KAWAk0C,EAAA,WAMA,QAAAA,GAAA0qB,EAAAC,GACAx6D,KAAAu6D,SACAv6D,KAAAy6D,sBACA,IAAA7zB,GAAA5mC,KAAAu6D,OAAAjyB,iBACAoyB,EAAA,GAAAxU,GAAAroB,cAAA+I,EAAAtI,YACAkS,EAAA5J,EAAA+zB,eAKA36D,MAAA46D,WAAA,GAAAP,GAAAQ,cAAArqB,EACA,IAAAsqB,GAAAN,EAAAlpB,iBACAypB,EAAAP,EAAAppB,gBAEAD,EAAAupB,EAAAx8B,eAAAvU,EAAA3S,aAAAP,WAAAqkD,EAAAroC,UAAA,MACAue,EAAAR,EAAAtS,eAAAvU,EAAA3S,aAAAP,WAAAskD,EAAAtoC,UAAA,MACAuoC,EAAA,GAAArsB,GAAAxW,UAAAgZ,EAAA2pB,EAAAviC,qBAAAmiC,EAAAt8B,gBACA68B,EAAA,GAAAtsB,GAAAxW,UAAA6Y,EAAA+pB,EAAAxiC,qBAAAiY,EAAApS,eAKAp+B,MAAAk7D,WAAA,GAAAtsB,GAAAgB,UAAAqrB,EAAAD,GAKAh7D,KAAAm7D,gBAAA,GAAAb,GAAAc,eAAAp7D,KAAAu6D,QAqIA,MAhIA1qB,GAAA/yC,UAAAuzC,SAAA,WACA,MAAArwC,MAAAu6D,QAKA1qB,EAAA/yC,UAAAw0C,eAAA,WACA,MAAAtxC,MAAAk7D,WAAA5pB,iBAAA7e,WAMAod,EAAA/yC,UAAA2zC,uBAAA,SAAA9/B,GACA,GAAA0qD,GAAAr7D,KAAAk7D,WAAA3pB,uBACA,OAAA8pB,KAGAr7D,KAAAu6D,OAAAjyB,iBAAAgI,iBACA3/B,EAAA7I,YAAAuzD,EAAAxjD,kBAAAlH,EAAAsB,YAAAnK,WACAuzD,EAAAtjD,SAAApH,GAGA,MAKAk/B,EAAA/yC,UAAAgL,QAAA,WACA,WAAA9H,KAAAy6D,oBAAAl8D,QAKAsxC,EAAA/yC,UAAAi6B,qBAAA,SAAAD,GACA92B,KAAAy6D,oBAAAp5D,KAAAy1B,IAOA+Y,EAAA/yC,UAAAo6B,wBAAA,SAAAJ,EAAAiZ,GACA,GAAAE,KACA,IAAAF,EAAA,CACA5mC,EAAAhE,OAAA,MAAA2xB,EAAA,kDACA,IAAAwkC,GAAAt7D,KAAAu6D,OAAA5pD,IACA3Q,MAAAy6D,oBAAA/yD,QAAA,SAAA6zD,GACAxrB,EAA8CA,CAC9C,IAAAyrB,GAAAD,EAAAhH,kBAAAxkB,EAAAurB,EACAE,IACAvrB,EAAA5uC,KAAAm6D,KAIA,GAAA1kC,EAAA,CAEA,OADA2kC,MACAn9D,EAAA,EAA2BA,EAAA0B,KAAAy6D,oBAAAl8D,SAAqCD,EAAA,CAChE,GAAAo9D,GAAA17D,KAAAy6D,oBAAAn8D,EACA,IAAAo9D,EAAA/U,QAAA7vB,IAGA,GAAAA,EAAA29B,iBAAA,CAEAgH,IAAAjgE,OAAAwE,KAAAy6D,oBAAAhoD,MAAAnU,EAAA,GACA,YALAm9D,GAAAp6D,KAAAq6D,GAQA17D,KAAAy6D,oBAAAgB,MAGAz7D,MAAAy6D,sBAEA,OAAAxqB,IAUAJ,EAAA/yC,UAAAiyC,eAAA,SAAAC,EAAAC,EAAA0sB,GACA3sB,EAAAxrC,OAAA+qC,EAAA3oB,cAAAw0C,OACA,OAAAprB,EAAAlR,OAAA9X,UACA7c,EAAAhE,OAAAnF,KAAAk7D,WAAA3pB,wBAAA,6DACApoC,EAAAhE,OAAAnF,KAAAk7D,WAAA7pB,uBAAA,2DAEA,IAAAuqB,GAAA57D,KAAAk7D,WACA/8C,EAAAne,KAAA46D,WAAA7rB,eAAA6sB,EAAA5sB,EAAAC,EAAA0sB,EAKA,OAJA37D,MAAA46D,WAAAiB,cAAA19C,EAAAwxB,WACAxmC,EAAAhE,OAAAgZ,EAAAwxB,UAAA2B,iBAAA/Y,uBACAqjC,EAAAtqB,iBAAA/Y,qBAAA,2DACAv4B,KAAAk7D,WAAA/8C,EAAAwxB,UACA3vC,KAAA87D,0BAAA39C,EAAA49C,QAAA59C,EAAAwxB,UAAAyB,gBAAA3e,UAAA,OAMAod,EAAA/yC,UAAAgzC,iBAAA,SAAAyrB,GACA,GAAAvqB,GAAAhxC,KAAAk7D,WAAA9pB,gBACA4qB,IACA,KAAAhrB,EAAAve,UAAA/a,aAAA,CACAs5B,EAAAve,UACAtZ,aAAAvC,EAAAJ,eAAA,SAAA/X,EAAA2a,GACA4iD,EAAA36D,KAAAu8B,EAAApV,OAAAO,iBAAAtqB,EAAA2a,MAMA,MAHA43B,GAAAzY,sBACAyjC,EAAA36D,KAAAu8B,EAAApV,OAAAI,YAAAooB,EAAAve,YAEAzyB,KAAA87D,0BAAAE,EAAAhrB,EAAAve,UAAA8oC,IASA1rB,EAAA/yC,UAAAg/D,0BAAA,SAAAC,EAAAxsB,EAAAzY,GACA,GAAAmlC,GAAAnlC,GACAA,GACA92B,KAAAy6D,mBACA,OAAAz6D,MAAAm7D,gBAAAe,yBAAAH,EAAAxsB,EAAA0sB,IAEApsB,IAEA5qC,GAAA4qC,Q3Fo8dM,SAAUp0C,EAAQwJ,EAAStJ,GAEjC,Y4FnoeAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAqyC,GAAA5yC,EAAA,KACAwN,EAAAxN,EAAA,KACAwgE,EAAAxgE,EAAA,KACAiiC,EAAAjiC,EAAA,KACAguB,EAAAhuB,EAAA,KACAkb,EAAAlb,EAAA,KACAy5D,EAAAz5D,EAAA,KACAonB,EAAApnB,EAAA,KACAygE,EAAAzgE,EAAA,KAKA0gE,EAAA,WAKA,QAAAA,GAAA1sB,EAAAosB,GACA/7D,KAAA2vC,YACA3vC,KAAA+7D,UAEA,MAAAM,KAEAp3D,GAAAo3D,iBAIA,IAAAxB,GAAA,WAIA,QAAAA,GAAAyB,GACAt8D,KAAAs8D,UA4hBA,MAvhBAzB,GAAA/9D,UAAA++D,cAAA,SAAAlsB,GACAxmC,EAAAhE,OAAAwqC,EACAyB,gBACA3e,UACAjX,UAAAxb,KAAAs8D,QAAAh+B,YAAA,0BACAn1B,EAAAhE,OAAAwqC,EACA2B,iBACA7e,UACAjX,UAAAxb,KAAAs8D,QAAAh+B,YAAA,4BASAu8B,EAAA/9D,UAAAiyC,eAAA,SAAA6sB,EAAA5sB,EAAAC,EAAAsoB,GACA,GACAgF,GAAAC,EADAC,EAAA,GAAAN,GAAAO,sBAEA,IAAA1tB,EAAAxrC,OAAA+qC,EAAA3oB,cAAA6oB,UAAA,CACA,GAAAkuB,GAAA3tB,CACA2tB,GAAA7+B,OAAAhY,SACAy2C,EAAAv8D,KAAA48D,oBAAAhB,EAAAe,EAAAhsD,KAAAgsD,EAAA3oC,KAAAib,EAAAsoB,EAAAkF,IAGAtzD,EAAAhE,OAAAw3D,EAAA7+B,OAAA/X,WAAA,mBAIAy2C,EACAG,EAAA7+B,OAAA7X,QACA21C,EAAAtqB,iBAAA9Y,eACAmkC,EAAAhsD,KAAA7I,UACAy0D,EAAAv8D,KAAA68D,sBAAAjB,EAAAe,EAAAhsD,KAAAgsD,EAAA3oC,KAAAib,EAAAsoB,EAAAiF,EAAAC,QAGA,IAAAztB,EAAAxrC,OAAA+qC,EAAA3oB,cAAAw0C,MAAA,CACA,GAAArkC,GAAAiZ,CACAjZ,GAAA+H,OAAAhY,SACAy2C,EAAAv8D,KAAA88D,gBAAAlB,EAAA7lC,EAAAplB,KAAAolB,EAAA1U,SAAA4tB,EAAAsoB,EAAAkF,IAGAtzD,EAAAhE,OAAA4wB,EAAA+H,OAAA/X,WAAA,mBAEAy2C,EACAzmC,EAAA+H,OAAA7X,QAAA21C,EAAAtqB,iBAAA9Y,aACA+jC,EAAAv8D,KAAA+8D,kBAAAnB,EAAA7lC,EAAAplB,KAAAolB,EAAA1U,SAAA4tB,EAAAsoB,EAAAiF,EAAAC,QAGA,IAAAztB,EAAAxrC,OAAA+qC,EAAA3oB,cAAAs0C,eAAA,CACA,GAAA5kC,GAAA0Z,CAKAutB,GAJAjnC,EAAA+gC,OAIAr2D,KAAAg9D,iBAAApB,EAAAtmC,EAAA3kB,KAAAs+B,EAAAsoB,EAAAkF,GAHAz8D,KAAAi9D,cAAArB,EAAAtmC,EAAA3kB,KAAA2kB,EAAA2kC,aAAAhrB,EAAAsoB,EAAAkF,OAMA,IAAAztB,EAAAxrC,OAAA+qC,EAAA3oB,cAAAu0C,gBAIA,KAAAhxD,GAAA/D,eAAA,2BAAA4pC,EAAAxrC,KAHA+4D,GAAAv8D,KAAAk9D,gBAAAtB,EAAA5sB,EAAAr+B,KAAAs+B,EAAAwtB,GAKA,GAAAV,GAAAU,EAAAU,YAEA,OADAtC,GAAAuC,oBAAAxB,EAAAW,EAAAR,GACA,GAAAM,GAAAE,EAAAR,IAQAlB,EAAAuC,oBAAA,SAAAxB,EAAAW,EAAAE,GACA,GAAAzrB,GAAAurB,EAAAnrB,eACA,IAAAJ,EAAAzY,qBAAA,CACA,GAAA8kC,GAAArsB,EAAAve,UAAA/a,cAAAs5B,EAAAve,UAAA3qB,UACAw1D,EAAA1B,EAAAvqB,wBACAorB,EAAAl+D,OAAA,IACAq9D,EAAAxqB,gBAAA7Y,sBACA8kC,IACArsB,EACAve,UACA9e,OAAiD,KACjDq9B,EACAve,UACAld,cACA5B,OAAA2pD,EAAA/nD,iBACAknD,EAAAp7D,KAAAu8B,EAAApV,OAAAI,YACiC2zC,EAAAlrB,2BAajCwpB,EAAA/9D,UAAAygE,oCAAA,SAAA5tB,EAAA6tB,EAAAvuB,EAAAnR,EAAA2+B,GACA,GAAAgB,GAAA9tB,EAAAyB,eACA,UAAAnC,EAAAyuB,eAAAF,GAEA,MAAA7tB,EAGA,IAAAsrB,OAAA,GAAA0C,MAAA,EACA,IAAAH,EAAA11D,UAGA,GADAqB,EAAAhE,OAAAwqC,EAAA2B,iBAAA/Y,qBAAA,8DACAoX,EAAA2B,iBAAA9Y,aAAA,CAIA,GAAA6W,GAAAM,EAAA4B,wBACAqsB,EAAAvuB,YAAA1lB,GAAA3S,aACAq4B,EACA1lB,EAAA3S,aAAAP,WACAonD,EAAA5uB,EAAAS,0BAAAkuB,EACA3C,GAAAj7D,KAAAs8D,QAAAp+B,eAAAyR,EAAAyB,gBAAA3e,UAAAorC,EAAApB,OAEA,CACA,GAAAqB,GAAA7uB,EAAAO,uBAAAG,EAAA4B,wBACA0pB,GAAAj7D,KAAAs8D,QAAAp+B,eAAAyR,EAAAyB,gBAAA3e,UAAAqrC,EAAArB,OAGA,CACA,GAAAzzC,GAAAw0C,EAAAvrD,UACA,iBAAA+W,EAAA,CACA7f,EAAAhE,OAAA,GAAAq4D,EAAAtrD,YAAA,wDACA,IAAA6rD,GAAAN,EAAAhrC,SACAkrC,GAAAhuB,EAAA2B,iBAAA7e,SAEA,IAAAurC,GAAA/uB,EAAAgvB,mCAAAT,EAAAO,EAAAJ,EAEA1C,GADA,MAAA+C,EACAh+D,KAAAs8D,QAAA3kD,eAAAomD,EAAAC,GAIAP,EAAAhrC,cAGA,CACA,GAAAyrC,GAAAV,EAAArrD,WAEAgsD,MAAA,EACA,IAAAV,EAAA/kC,mBAAA1P,GAAA,CACA20C,EAAAhuB,EAAA2B,iBAAA7e,SACA,IAAA2rC,GAAAnvB,EAAAgvB,mCAAAT,EAAAC,EAAAhrC,UAAAkrC,EAEAQ,GADA,MAAAC,EACAX,EACAhrC,UACA5a,kBAAAmR,GACArQ,YAAAulD,EAAAE,GAIAX,EACAhrC,UACA5a,kBAAAmR,OAIAm1C,GAAAlvB,EAAAovB,kBAAAr1C,EAAA2mB,EAAA2B,iBAGA2pB,GADA,MAAAkD,EACAn+D,KAAAs8D,QAAA3jD,YAAA8kD,EAAAhrC,UAAAzJ,EAAAm1C,EAAAD,EAAApgC,EAAA2+B,GAIAgB,EAAAhrC,WAIA,MAAAkd,GAAAoB,gBAAAkqB,EAAAwC,EAAAllC,sBAAAilC,EAAA11D,UAAA9H,KAAAs8D,QAAAl+B,iBAcAy8B,EAAA/9D,UAAA+/D,sBAAA,SAAAjB,EAAA4B,EAAAc,EAAArvB,EAAAsoB,EAAAiF,EAAAC,GACA,GACAzB,GADAuD,EAAA3C,EAAAtqB,iBAEAktB,EAAAhC,EACAx8D,KAAAs8D,QACAt8D,KAAAs8D,QAAAj+B,kBACA,IAAAm/B,EAAA11D,UACAkzD,EAAAwD,EAAAtgC,eAAAqgC,EAAA9rC,UAAA6rC,EAAA,UAEA,IAAAE,EAAApgC,iBAAAmgC,EAAA/lC,aAAA,CAEA,GAAAimC,GAAAF,EACA9rC,UACA9Z,YAAA6kD,EAAAc,EACAtD,GAAAwD,EAAAtgC,eAAAqgC,EAAA9rC,UAAAgsC,EAAA,UAEA,CACA,GAAAz1C,GAAAw0C,EAAAvrD,UACA,KAAAssD,EAAA9lC,kBAAA+kC,IACAA,EAAAtrD,YAAA,EAEA,MAAA0pD,EAEA,IAAAsC,GAAAV,EAAArrD,WACAiH,EAAAmlD,EAAA9rC,UAAA5a,kBAAAmR,GACA7Q,EAAAiB,EAAAT,YAAAulD,EAAAI,EAEAtD,GADA,aAAAhyC,EACAw1C,EAAA7mD,eAAA4mD,EAAA9rC,UAAAta,GAGAqmD,EAAA7lD,YAAA4lD,EAAA9rC,UAAAzJ,EAAA7Q,EAAA+lD,EAAA9B,EAAAsC,yBAAA,MAGA,GAAAnC,GAAAX,EAAA1qB,iBAAA8pB,EAAAuD,EAAAhmC,sBAAAilC,EAAA11D,UAAA02D,EAAApgC,gBACAN,EAAA,GAAAs+B,GAAAuC,6BAAA1vB,EAAAstB,EAAAhF,EACA,OAAAv3D,MAAAu9D,oCAAAhB,EAAAiB,EAAAvuB,EAAAnR,EAAA2+B,IAYA5B,EAAA/9D,UAAA8/D,oBAAA,SAAAhB,EAAA4B,EAAAc,EAAArvB,EAAAsoB,EAAAkF,GACA,GACAF,GAAAtB,EADAwC,EAAA7B,EAAAxqB,gBAEAtT,EAAA,GAAAs+B,GAAAuC,6BAAA1vB,EAAA2sB,EAAArE,EACA,IAAAiG,EAAA11D,UACAmzD,EAAAj7D,KAAAs8D,QAAAp+B,eAAA09B,EAAAxqB,gBAAA3e,UAAA6rC,EAAA7B,GACAF,EAAAX,EAAA7qB,gBAAAkqB,GAAA,EAAAj7D,KAAAs8D,QAAAl+B,oBAEA,CACA,GAAApV,GAAAw0C,EAAAvrD,UACA,kBAAA+W,EACAiyC,EAAAj7D,KAAAs8D,QAAA3kD,eAAAikD,EAAAxqB,gBAAA3e,UAAA6rC,GACA/B,EAAAX,EAAA7qB,gBAAAkqB,EAAAwC,EAAAllC,qBAAAklC,EAAAjlC,kBAEA,CACA,GAAA0lC,GAAAV,EAAArrD,WACA6rB,EAAAy/B,EAAAhrC,UAAA5a,kBAAAmR,GACA2T,MAAA,EACA,IAAAuhC,EAAAp2D,UAEA60B,EAAA2hC,MAEA,CACA,GAAAllD,GAAA0kB,EAAA8gC,iBAAA51C,EAMA2T,GALA,MAAAvjB,EACA,cAAA8kD,EAAA9rD,WACAgH,EAAArB,SAAAmmD,EAAAvrD,UAAA7K,UAGAsR,EAGAA,EAAAT,YAAAulD,EAAAI,GAKA30C,EAAA3S,aAAAP,WAGA,GAAAunB,EAAArqB,OAAAgpB,GAKA4/B,EAAAX,MALA,CACA,GAAAiD,GAAA7+D,KAAAs8D,QAAA3jD,YAAA8kD,EAAAhrC,UAAAzJ,EAAA2T,EAAAuhC,EAAApgC,EAAA2+B,EACAF,GAAAX,EAAA7qB,gBAAA8tB,EAAApB,EAAAllC,qBAAAv4B,KAAAs8D,QAAAl+B,kBAOA,MAAAm+B,IAQA1B,EAAAiE,eAAA,SAAAnvB,EAAA3mB,GACA,MAAA2mB,GAAAyB,gBAAA1Y,mBAAA1P,IAYA6xC,EAAA/9D,UAAAggE,gBAAA,SAAAntB,EAAAh/B,EAAAmjB,EAAAmb,EAAAI,EAAAotB,GACA,GAAA38D,GAAAE,KAOA++D,EAAApvB,CAaA,OAZA7b,GAAA2J,QAAA,SAAAzqB,EAAAoG,GACA,GAAA4lD,GAAAruD,EAAAkC,MAAAG,EACA6nD,GAAAiE,eAAAnvB,EAAAqvB,EAAA/sD,cACA8sD,EAAAj/D,EAAA88D,oBAAAmC,EAAAC,EAAA5lD,EAAA61B,EAAAI,EAAAotB,MAGA3oC,EAAA2J,QAAA,SAAAzqB,EAAAoG,GACA,GAAA4lD,GAAAruD,EAAAkC,MAAAG,EACA6nD,GAAAiE,eAAAnvB,EAAAqvB,EAAA/sD,cACA8sD,EAAAj/D,EAAA88D,oBAAAmC,EAAAC,EAAA5lD,EAAA61B,EAAAI,EAAAotB,MAGAsC,GAQAlE,EAAA/9D,UAAAmiE,YAAA,SAAA3pD,EAAAygB,GAIA,MAHAA,GAAA0H,QAAA,SAAAzqB,EAAAoG,GACA9D,IAAAqD,YAAA3F,EAAAoG,KAEA9D,GAaAulD,EAAA/9D,UAAAigE,kBAAA,SAAAptB,EAAAh/B,EAAAmjB,EAAAmb,EAAAI,EAAAmtB,EAAAC,GACA,GAAA38D,GAAAE,IAGA,IAAA2vC,EACA2B,iBACA7e,UACA3qB,YACA6nC,EAAA2B,iBAAA/Y,qBACA,MAAAoX,EAQA,IACAuvB,GADAH,EAAApvB,CAGAuvB,GADAvuD,EAAA7I,UACAgsB,EAGAshC,EAAAp5B,cAAA5F,MAAAwG,QAAAjsB,EAAAmjB,EAEA,IAAA6pC,GAAAhuB,EAAA2B,iBAAA7e,SAuBA,OAtBAysC,GAAA79C,SAAA9G,iBAAA,SAAAyO,EAAAyT,GACA,GAAAkhC,EAAA1lD,SAAA+Q,GAAA,CACA,GAAAm2C,GAAAxvB,EACA2B,iBACA7e,UACA5a,kBAAAmR,GACA2T,EAAA78B,EAAAm/D,YAAAE,EAAA1iC,EACAsiC,GAAAj/D,EAAA+8D,sBAAAkC,EAAA,GAAAh8C,GAAArR,KAAAsX,GAAA2T,EAAAsS,EAAAI,EAAAmtB,EAAAC,MAGAyC,EAAA79C,SAAA9G,iBAAA,SAAAyO,EAAAo2C,GACA,GAAAC,IAAA1vB,EAAA2B,iBAAA5Y,mBAAA1P,IACA,MAAAo2C,EAAAljE,KACA,KAAAyhE,EAAA1lD,SAAA+Q,KAAAq2C,EAAA,CACA,GAAAF,GAAAxvB,EACA2B,iBACA7e,UACA5a,kBAAAmR,GACA2T,EAAA78B,EAAAm/D,YAAAE,EAAAC,EACAL,GAAAj/D,EAAA+8D,sBAAAkC,EAAA,GAAAh8C,GAAArR,KAAAsX,GAAA2T,EAAAsS,EAAAI,EAAAmtB,EAAAC,MAGAsC,GAYAlE,EAAA/9D,UAAAmgE,cAAA,SAAAttB,EAAA2vB,EAAArF,EAAAhrB,EAAAsoB,EAAAkF,GACA,SAAAxtB,EAAAyuB,eAAA4B,GACA,MAAA3vB,EAGA,IAAA6sB,GAAA7sB,EAAA2B,iBAAA9Y,aAGA6W,EAAAM,EAAA2B,gBACA,UAAA2oB,EAAA/9D,MAAA,CAEA,GAAAojE,EAAAx3D,WAAAunC,EAAA9W,sBACA8W,EAAA5W,kBAAA6mC,GACA,MAAAt/D,MAAA68D,sBAAAltB,EAAA2vB,EAAAjwB,EAAA5c,UAAA1a,SAAAunD,GAAArwB,EAAAsoB,EAAAiF,EAAAC,EAEA,IAAA6C,EAAAx3D,UAAA,CAGA,GAAAy3D,GAAAnK,EAAAp5B,cAAA5F,KAIA,OAHAiZ,GAAA5c,UAAAtZ,aAAAtC,EAAAwE,UAAA,SAAAnZ,EAAAoT,GACAiqD,IAAAl0D,IAAA,GAAA0X,GAAArR,KAAAxP,GAAAoT,KAEAtV,KAAA+8D,kBAAAptB,EAAA2vB,EAAAC,EAAAtwB,EAAAsoB,EAAAiF,EAAAC,GAGA,MAAA9sB,GAKA,GAAA6vB,GAAApK,EAAAp5B,cAAA5F,KAOA,OANA6jC,GAAAx8B,QAAA,SAAAgiC,EAAAvjE,GACA,GAAAwjE,GAAAJ,EAAAzsD,MAAA4sD,EACApwB,GAAA5W,kBAAAinC,KACAF,IAAAn0D,IAAAo0D,EAAApwB,EAAA5c,UAAA1a,SAAA2nD,OAGA1/D,KAAA+8D,kBAAAptB,EAAA2vB,EAAAE,EAAAvwB,EAAAsoB,EAAAiF,EAAAC,IAWA5B,EAAA/9D,UAAAogE,gBAAA,SAAAvtB,EAAAh/B,EAAAs+B,EAAAwtB,GACA,GAAAkD,GAAAhwB,EAAA2B,iBACAirB,EAAA5sB,EAAAuB,iBAAAyuB,EAAAltC,UAAAktC,EAAApnC,sBAAA5nB,EAAA7I,UAAA63D,EAAAnnC,aACA,OAAAx4B,MAAAu9D,oCAAAhB,EAAA5rD,EAAAs+B,EAAAmtB,EAAAsC,yBAAAjC,IAWA5B,EAAA/9D,UAAAkgE,iBAAA,SAAArtB,EAAAh/B,EAAAs+B,EAAA0sB,EAAAc,GACA,GAAA97D,EACA,UAAAsuC,EAAAyuB,eAAA/sD,GACA,MAAAg/B,EAGA,IAAA7R,GAAA,GAAAs+B,GAAAuC,6BAAA1vB,EAAAU,EAAAgsB,GACAiE,EAAAjwB,EAAAyB,gBAAA3e,UACAwoC,MAAA,EACA,IAAAtqD,EAAA7I,WAAA,cAAA6I,EAAAsB,WAAA,CACA,GAAA6D,OAAA,EACA,IAAA65B,EAAA2B,iBAAA/Y,qBACAziB,EAAAm5B,EAAAO,uBAAAG,EAAA4B,6BAEA,CACA,GAAAsuB,GAAAlwB,EAAA2B,iBAAA7e,SACAtpB,GAAAhE,OAAA06D,YAAAl2C,GAAA3S,aAAA,iDACAlB,EAAAm5B,EAAAS,0BAAAmwB,GAEA/pD,IACAmlD,EAAAj7D,KAAAs8D,QAAAp+B,eAAA0hC,EAAA9pD,EAAA2mD,OAEA,CACA,GAAAzzC,GAAArY,EAAAsB,WACA0qB,EAAAsS,EAAAovB,kBAAAr1C,EAAA2mB,EAAA2B,iBACA,OAAA3U,GACAgT,EAAA2B,iBAAA5Y,mBAAA1P,KACA2T,EAAAijC,EAAA/nD,kBAAAmR,IAGAiyC,EADA,MAAAt+B,EACA38B,KAAAs8D,QAAA3jD,YAAAinD,EAAA52C,EAAA2T,EAAAhsB,EAAAwB,WAAA2rB,EAAA2+B,GAEA9sB,EACAyB,gBACA3e,UACAxa,SAAA+Q,GAEAhpB,KAAAs8D,QAAA3jD,YAAAinD,EAAA52C,EAAAW,EAAA3S,aAAAP,WAAA9F,EAAAwB,WAAA2rB,EAAA2+B,GAGAmD,EAEA3E,EAAAnzD,WACA6nC,EAAA2B,iBAAA/Y,uBAEA53B,EAAAsuC,EAAAO,uBAAAG,EAAA4B,yBACA5wC,EAAA+W,eACAujD,EAAAj7D,KAAAs8D,QAAAp+B,eAAA+8B,EAAAt6D,EAAA87D,KAOA,MAHA97D,GACAgvC,EAAA2B,iBAAA/Y,sBACA,MAAA0W,EAAAyuB,eAAA36C,EAAArR,KAAA0kB,OACAuZ,EAAAoB,gBAAAkqB,EAAAt6D,EAAAX,KAAAs8D,QAAAl+B,iBAGAy8B,IAEA51D,GAAA41D,iB5F2peM,SAAUp/D,EAAQwJ,EAAStJ,GAEjC,Y6F7tfAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAiiC,EAAAjiC,EAAA,KACAyN,EAAAzN,EAAA,KAIA+gE,EAAA,WACA,QAAAA,KACA18D,KAAA8/D,cAmDA,MA9CApD,GAAA5/D,UAAAmhC,iBAAA,SAAA+1B,GACA,GAAAxwD,GAAAwwD,EAAAxwD,KACAwlB,EAAwCgrC,EAAAl8C,SACxC1O,GAAAjE,OAAA3B,GAAAo6B,EAAApV,OAAAS,aACAzlB,GAAAo6B,EAAApV,OAAAe,eACA/lB,GAAAo6B,EAAApV,OAAAW,cAAA,6CACA/f,EAAAjE,OAAA,cAAA6jB,EAAA,kDACA,IAAA+2C,GAAA52D,EAAAlB,QAAAjI,KAAA8/D,WAAA92C,EACA,IAAA+2C,EAAA,CACA,GAAAC,GAAAD,EAAAv8D,IACA,IAAAA,GAAAo6B,EAAApV,OAAAS,aAAA+2C,GAAApiC,EAAApV,OAAAW,cACAnpB,KAAA8/D,WAAA92C,GAAA4U,EAAApV,OAAAY,mBAAAJ,EAAAgrC,EAAAvrC,aAAAs3C,EAAAt3C,kBAEA,IAAAjlB,GAAAo6B,EAAApV,OAAAW,eACA62C,GAAApiC,EAAApV,OAAAS,kBACAjpB,MAAA8/D,WAAA92C,OAEA,IAAAxlB,GAAAo6B,EAAApV,OAAAW,eACA62C,GAAApiC,EAAApV,OAAAe,cACAvpB,KAAA8/D,WAAA92C,GAAA4U,EAAApV,OAAAU,mBAAAF,EAAA+2C,EAAAr3C,aAEA,IAAAllB,GAAAo6B,EAAApV,OAAAe,eACAy2C,GAAApiC,EAAApV,OAAAS,YACAjpB,KAAA8/D,WAAA92C,GAAA4U,EAAApV,OAAAO,iBAAAC,EAAAgrC,EAAAvrC,kBAEA,IAAAjlB,GAAAo6B,EAAApV,OAAAe,eACAy2C,GAAApiC,EAAApV,OAAAe,cAIA,KAAAngB,GAAAhE,eAAA,mCACA4uD,EACA,mBACA+L,EANA//D,MAAA8/D,WAAA92C,GAAA4U,EAAApV,OAAAY,mBAAAJ,EAAAgrC,EAAAvrC,aAAAs3C,EAAAr3C,cAUA1oB,MAAA8/D,WAAA92C,GAAAgrC,GAMA0I,EAAA5/D,UAAAqgE,WAAA,WACA,MAAAh0D,GAAAtB,UAAA7H,KAAA8/D,aAEApD,IAEAz3D,GAAAy3D,0B7FqvfM,SAAUjhE,EAAQwJ,EAAStJ,GAEjC,Y8FrzfAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAyyC,GAAAhzC,EAAA,KAQAskE,EAAA,WACA,QAAAA,MAcA,MATAA,GAAAnjE,UAAA8hE,iBAAA,SAAA51C,GACA,aAKAi3C,EAAAnjE,UAAAojE,mBAAA,SAAAvmD,EAAA9G,EAAApD,GACA,aAEAwwD,IAEAh7D,GAAAg7D,yBAMAh7D,EAAAy5D,yBAAA,GAAAuB,EAQA,IAAAtB,GAAA,WAMA,QAAAA,GAAAwB,EAAAjF,EAAAkF,OACA,KAAAA,IAAiDA,EAAA,MACjDpgE,KAAAmgE,UACAngE,KAAAk7D,aACAl7D,KAAAogE,0BAgCA,MA3BAzB,GAAA7hE,UAAA8hE,iBAAA,SAAA51C,GACA,GAAA1T,GAAAtV,KAAAk7D,WAAA9pB,eACA,IAAA97B,EAAAojB,mBAAA1P,GACA,MAAA1T,GAAAmd,UAAA5a,kBAAAmR,EAGA,IAAA20C,GAAA,MAAA39D,KAAAogE,wBACA,GAAAzxB,GAAAxW,UAAAn4B,KAAAogE,yBAAA,MACApgE,KAAAk7D,WAAA5pB,gBACA,OAAAtxC,MAAAmgE,QAAA9B,kBAAAr1C,EAAA20C,IAMAgB,EAAA7hE,UAAAojE,mBAAA,SAAAvmD,EAAA9G,EAAApD,GACA,GAAA4wD,GAAA,MAAArgE,KAAAogE,wBACApgE,KAAAogE,wBACApgE,KAAAk7D,WAAA3pB,wBACA+uB,EAAAtgE,KAAAmgE,QAAAI,iBAAAF,EAAAxtD,EAAA,EAAApD,EAAAkK,EACA,YAAA2mD,EAAA/hE,OACA,KAGA+hE,EAAA,IAGA3B,IAEA15D,GAAA05D,gC9F60fM,SAAUljE,EAAQwJ,EAAStJ,GAEjC,Y+Fn6fAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6Y,GAAApZ,EAAA,KACAiiC,EAAAjiC,EAAA,KACAwN,EAAAxN,EAAA,KAQAy/D,EAAA,WAKA,QAAAA,GAAAb,GACAv6D,KAAAu6D,SAKAv6D,KAAAq7B,OAAAr7B,KAAAu6D,OAAAjyB,iBAAAhK,WAuFA,MAvEA88B,GAAAt+D,UAAAo/D,yBAAA,SAAAH,EAAAxsB,EAAAixB,GACA,GAAA1gE,GAAAE,KACA+yB,KACA0tC,IAYA,OAXA1E,GAAAr0D,QAAA,SAAAssD,GACAA,EAAAxwD,OAAAo6B,EAAApV,OAAAe,eACAzpB,EAAAu7B,OAAAzlB,oBAAAo+C,EAAAtrC,QAAAsrC,EAAAvrC,eACAg4C,EAAAp/D,KAAAu8B,EAAApV,OAAAgB,iBAAAwqC,EAAAl8C,UAAAk8C,EAAAvrC,iBAGAzoB,KAAA0gE,uBAAA3tC,EAAA6K,EAAApV,OAAAW,cAAA4yC,EAAAyE,EAAAjxB,GACAvvC,KAAA0gE,uBAAA3tC,EAAA6K,EAAApV,OAAAS,YAAA8yC,EAAAyE,EAAAjxB,GACAvvC,KAAA0gE,uBAAA3tC,EAAA6K,EAAApV,OAAAiB,YAAAg3C,EAAAD,EAAAjxB,GACAvvC,KAAA0gE,uBAAA3tC,EAAA6K,EAAApV,OAAAe,cAAAwyC,EAAAyE,EAAAjxB,GACAvvC,KAAA0gE,uBAAA3tC,EAAA6K,EAAApV,OAAAM,MAAAizC,EAAAyE,EAAAjxB,GACAxc,GAYAqoC,EAAAt+D,UAAA4jE,uBAAA,SAAA3tC,EAAAtO,EAAAs3C,EAAAE,EAAA1sB,GACA,GAAAzvC,GAAAE,KACA2gE,EAAA5E,EAAAvrB,OAAA,SAAAwjB,GAAgE,MAAAA,GAAAxwD,OAAAihB,GAChEk8C,GAAA3yD,KAAAhO,KAAA4gE,gBAAAz1D,KAAAnL,OACA2gE,EAAAj5D,QAAA,SAAAssD,GACA,GAAA6M,GAAA/gE,EAAAghE,yBAAA9M,EAAAzkB,EACA0sB,GAAAv0D,QAAA,SAAA6zD,GACAA,EAAAxH,WAAAC,EAAAxwD,OACAuvB,EAAA1xB,KAAAk6D,EAAA3R,YAAAiX,EAAA/gE,EAAAy6D,cAWAa,EAAAt+D,UAAAgkE,yBAAA,SAAA9M,EAAAzkB,GACA,gBAAAykB,EAAAxwD,MAAA,kBAAAwwD,EAAAxwD,KACAwwD,GAGAA,EAAArrC,SAAA4mB,EAAA71B,wBAEAs6C,EAAAl8C,UAAAk8C,EAAAvrC,aAAAzoB,KAAAq7B,QACA24B,IASAoH,EAAAt+D,UAAA8jE,gBAAA,SAAA7+D,EAAAuL,GACA,SAAAvL,EAAA+V,WAAA,MAAAxK,EAAAwK,UACA,KAAA3O,GAAA/D,eAAA,qCAEA,IAAA27D,GAAA,GAAAhsD,GAAAiB,UAAAjU,EAAA+V,UAAA/V,EAAA0mB,cACAu4C,EAAA,GAAAjsD,GAAAiB,UAAA1I,EAAAwK,UAAAxK,EAAAmb,aACA,OAAAzoB,MAAAq7B,OAAAjmB,QAAA2rD,EAAAC,IAEA5F,IAEAn2D,GAAAm2D,kB/F27fM,SAAU3/D,EAAQwJ,EAAStJ,GAEjC,YgG5igBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAonB,EAAApnB,EAAA,KACAslE,EAAAtlE,EAAA,KACAib,EAAAjb,EAAA,KACAguB,EAAAhuB,EAAA,KAQAi6D,EAAA,WACA,QAAAA,KAQA51D,KAAAkhE,eAAAD,EAAAE,cAAA/qC,MASAp2B,KAAAohE,cACAphE,KAAAqhE,cAAA,EAudA,MA/cAzL,GAAA94D,UAAA66D,YAAA,SAAAhnD,GACA,UAAA2wD,GAAA3wD,EAAA3Q,OAUA41D,EAAA94D,UAAAk5D,aAAA,SAAArlD,EAAAqjB,EAAAe,EAAA2hB,GACAttC,EAAAjE,OAAA4vB,EAAA/0B,KAAAqhE,aAAA,oDACAx9C,KAAA6yB,IACAA,GAAA,GAEA12C,KAAAohE,WAAA//D,MACAsP,OACAqjB,OACAe,UACA2hB,YAEAA,IACA12C,KAAAkhE,eAAAlhE,KAAAkhE,eAAAK,SAAA5wD,EAAAqjB,IAEAh0B,KAAAqhE,aAAAtsC,GASA6gC,EAAA94D,UAAAo5D,SAAA,SAAAvlD,EAAAmjB,EAAAiB,GACA3rB,EAAAjE,OAAA4vB,EAAA/0B,KAAAqhE,aAAA,gDACArhE,KAAAohE,WAAA//D,MACAsP,OACA0Q,SAAAyS,EACAiB,UACA2hB,SAAA,IAEA12C,KAAAkhE,eAAAlhE,KAAAkhE,eAAAM,UAAA7wD,EAAAmjB,GACA9zB,KAAAqhE,aAAAtsC,GAMA6gC,EAAA94D,UAAAw5D,SAAA,SAAAvhC,GACA,OAAAz2B,GAAA,EAAuBA,EAAA0B,KAAAohE,WAAA7iE,OAA4BD,IAAA,CACnD,GAAAmjE,GAAAzhE,KAAAohE,WAAA9iE,EACA,IAAAmjE,EAAA1sC,YACA,MAAA0sC,GAGA,aAUA7L,EAAA94D,UAAAy5D,YAAA,SAAAxhC,GAKA,GAAAj1B,GAAAE,KACA4Z,EAAA5Z,KAAAohE,WAAApJ,UAAA,SAAAlpD,GACA,MAAAA,GAAAimB,aAEA3rB,GAAAjE,OAAAyU,GAAA,iDACA,IAAA8nD,GAAA1hE,KAAAohE,WAAAxnD,EACA5Z,MAAAohE,WAAAnoB,OAAAr/B,EAAA,EAIA,KAHA,GAAA+nD,GAAAD,EAAAhrB,QACAkrB,GAAA,EACAtjE,EAAA0B,KAAAohE,WAAA7iE,OAAA,EACAojE,GAAArjE,GAAA,IACA,GAAAujE,GAAA7hE,KAAAohE,WAAA9iE,EACAujE,GAAAnrB,UACAp4C,GAAAsb,GACA5Z,KAAA8hE,oBAAAD,EAAAH,EAAA/wD,MAEAgxD,GAAA,EAEAD,EAAA/wD,KAAAtJ,SAAAw6D,EAAAlxD,QAEAixD,GAAA,IAGAtjE,IAEA,GAAAqjE,EAGA,IAAAC,EAGA,MADA5hE,MAAA+hE,cACA,CAIA,IAAAL,EAAA1tC,KACAh0B,KAAAkhE,eAAAlhE,KAAAkhE,eAAA3K,YAAAmL,EAAA/wD,UAEA,CACA,GAAA0Q,GAAAqgD,EAAArgD,QACAlY,GAAAzB,QAAA2Z,EAAA,SAAAvJ,GACAhY,EAAAohE,eAAAphE,EAAAohE,eAAA3K,YAAAmL,EAAA/wD,KAAAkC,MAAAiF,MAGA,SAlBA,UA4BA89C,EAAA94D,UAAAklE,qBAAA,SAAArxD,GACA,MAAA3Q,MAAAkhE,eAAAe,gBAAAtxD,IAYAilD,EAAA94D,UAAA0yC,uBAAA,SAAA0yB,EAAAvG,EAAA/C,EAAAuJ,GACA,GAAAvJ,GAAAuJ,EAqBA,CACA,GAAApsC,GAAA/1B,KAAAkhE,eAAAkB,mBAAAF,EACA,KAAAC,GAAApsC,EAAAjuB,UACA,MAAA6zD,EAIA,IAAAwG,GACA,MAAAxG,GACA5lC,EAAAssC,iBAAAt/C,EAAArR,KAAA0kB,OAGA,CACA,GAAAoa,GAAA,SAAA4Q,GACA,OAAAA,EAAA1K,SAAAyrB,MACAvJ,KACAA,EAAA7sD,QAAAq1C,EAAArsB,YACAqsB,EAAAzwC,KAAAtJ,SAAA66D,MAAA76D,SAAA+5C,EAAAzwC,QAEA2xD,EAAA1M,EAAA2M,WAAAviE,KAAAohE,WAAA5wB,EAAA0xB,GACAM,EAAA7G,GAAAhyC,EAAA3S,aAAAP,UACA,OAAA6rD,GAAAhiE,MAAAkiE,GAXA,YA9BA,GAAAC,GAAAziE,KAAAkhE,eAAAe,gBAAAC,EACA,UAAAO,EACA,MAAAA,EAGA,IAAAC,GAAA1iE,KAAAkhE,eAAAkB,mBAAAF,EACA,IAAAQ,EAAA56D,UACA,MAAA6zD,EAEA,UAAAA,GACA+G,EAAAL,iBAAAt/C,EAAArR,KAAA0kB,OAIA,CACA,GAAAosC,GAAA7G,GAAAhyC,EAAA3S,aAAAP,UACA,OAAAisD,GAAApiE,MAAAkiE,GAJA,aA0CA5M,EAAA94D,UAAA4yC,0BAAA,SAAAwyB,EAAAS,GACA,GAAA/E,GAAAj0C,EAAA3S,aAAAP,WACAmsD,EAAA5iE,KAAAkhE,eAAAe,gBAAAC,EACA,IAAAU,EAOA,MANAA,GAAAlrD,cAEAkrD,EAAAzpD,aAAAvC,EAAAJ,eAAA,SAAAsB,EAAAqkB,GACAyhC,IAAA1lD,qBAAAJ,EAAAqkB,KAGAyhC,CAEA,IAAA+E,EAAA,CAGA,GAAAE,GAAA7iE,KAAAkhE,eAAAkB,mBAAAF,EAWA,OAVAS,GAAAxpD,aAAAvC,EAAAJ,eAAA,SAAAsB,EAAAsB,GACA,GAAA9D,GAAAutD,EACAT,mBAAA,GAAAr/C,GAAArR,KAAAoG,IACAxX,MAAA8Y,EACAwkD,KAAA1lD,qBAAAJ,EAAAxC,KAGAutD,EAAAC,sBAAAp7D,QAAA,SAAA0Q,GACAwlD,IAAA1lD,qBAAAE,EAAAlW,KAAAkW,EAAA9C,QAEAsoD,EASA,MAJA59D,MAAAkhE,eAAAkB,mBAAAF,GACAY,sBAAAp7D,QAAA,SAAA0Q,GACAwlD,IAAA1lD,qBAAAE,EAAAlW,KAAAkW,EAAA9C,QAEAsoD,GAuBAhI,EAAA94D,UAAAmhE,mCAAA,SAAAiE,EAAAxmC,EAAAqnC,EAAAC,GACA55D,EAAAjE,OAAA49D,GAAAC,EAAA,4DACA,IAAAryD,GAAAuxD,EAAArvD,MAAA6oB,EACA,IAAA17B,KAAAkhE,eAAAmB,iBAAA1xD,GAGA,WAIA,IAAAsyD,GAAAjjE,KAAAkhE,eAAAkB,mBAAAzxD,EACA,OAAAsyD,GAAAn7D,UAEAk7D,EAAAjrD,SAAA2jB,GASAunC,EAAA3iE,MAAA0iE,EAAAjrD,SAAA2jB,KAaAk6B,EAAA94D,UAAAuhE,kBAAA,SAAA6D,EAAAl5C,EAAAg6C,GACA,GAAAryD,GAAAuxD,EAAArvD,MAAAmW,GACAy5C,EAAAziE,KAAAkhE,eAAAe,gBAAAtxD,EACA,UAAA8xD,EACA,MAAAA,EAGA,IAAAO,EAAAtqC,mBAAA1P,GAAA,CAEA,MADAhpB,MAAAkhE,eAAAkB,mBAAAzxD,GACArQ,MAAA0iE,EAAAvwC,UAAA5a,kBAAAmR,IAGA,aAYA4sC,EAAA94D,UAAA4gE,eAAA,SAAA/sD,GACA,MAAA3Q,MAAAkhE,eAAAe,gBAAAtxD,IAcAilD,EAAA94D,UAAAyjE,iBAAA,SAAA2B,EAAA7B,EAAA1lD,EAAA7B,EAAArJ,EAAAkK,GACA,GAAAupD,GACAntC,EAAA/1B,KAAAkhE,eAAAkB,mBAAAF,GACAO,EAAA1sC,EAAAksC,gBAAAl/C,EAAArR,KAAA0kB,MACA,UAAAqsC,EACAS,EAAAT,MAEA,UAAApC,EAKA,QAJA6C,GAAAntC,EAAAz1B,MAAA+/D,GAOA,GADA6C,IAAA9nD,UAAAzB,GACAupD,EAAAp7D,WAAAo7D,EAAAxrD,aAgBA,QATA,KANA,GAAA4oD,MACA5sD,EAAAiG,EAAA8Q,aACAghB,EAAAh8B,EACAyzD,EAAAhoD,uBAAAP,EAAAhB,GACAupD,EAAAxoD,gBAAAC,EAAAhB,GACAmB,EAAA2wB,EAAAzwB,UACAF,GAAAwlD,EAAA/hE,OAAAua,GACA,IAAApF,EAAAoH,EAAAH,IACA2lD,EAAAj/D,KAAAyZ,GAEAA,EAAA2wB,EAAAzwB,SAEA,OAAAslD,IAYA1K,EAAA94D,UAAAglE,oBAAA,SAAAqB,EAAAxyD,GACA,MAAAwyD,GAAAnvC,KACAmvC,EAAAxyD,KAAAtJ,SAAAsJ,KAIAxH,EAAA3B,QAAA27D,EAAA9hD,SAAA,SAAA8a,EAAArkB,GACA,MAAAqrD,GAAAxyD,KAAAkC,MAAAiF,GAAAzQ,SAAAsJ,MAQAilD,EAAA94D,UAAAilE,WAAA,WACA/hE,KAAAkhE,eAAAtL,EAAA2M,WAAAviE,KAAAohE,WAAAxL,EAAAwN,eAAArgD,EAAArR,KAAA0kB,OACAp2B,KAAAohE,WAAA7iE,OAAA,EACAyB,KAAAqhE,aAAArhE,KAAAohE,WAAAphE,KAAAohE,WAAA7iE,OAAA,GAAAw2B,QAGA/0B,KAAAqhE,cAAA,GAUAzL,EAAAwN,eAAA,SAAAhiB,GACA,MAAAA,GAAA1K,SAYAkf,EAAA2M,WAAA,SAAAc,EAAA7yB,EAAA8yB,GAEA,OADAC,GAAAtC,EAAAE,cAAA/qC,MACA93B,EAAA,EAAuBA,EAAA+kE,EAAA9kE,SAAmBD,EAAA,CAC1C,GAAA8iD,GAAAiiB,EAAA/kE,EAIA,IAAAkyC,EAAA4Q,GAAA,CACA,GAAA4d,GAAA5d,EAAAzwC,KACAqC,MAAA,EACA,IAAAouC,EAAAptB,KACAsvC,EAAAj8D,SAAA23D,IACAhsD,EAAA+P,EAAArR,KAAAsB,aAAAswD,EAAAtE,GACAuE,IAAAhC,SAAAvuD,EAAAouC,EAAAptB,OAEAgrC,EAAA33D,SAAAi8D,KACAtwD,EAAA+P,EAAArR,KAAAsB,aAAAgsD,EAAAsE,GACAC,IAAAhC,SAAAx+C,EAAArR,KAAA0kB,MAAAgrB,EAAAptB,KAAAjc,SAAA/E,SAMA,KAAAouC,EAAA//B,SAwBA,KAAAjY,GAAAhE,eAAA,6CAvBA,IAAAk+D,EAAAj8D,SAAA23D,GACAhsD,EAAA+P,EAAArR,KAAAsB,aAAAswD,EAAAtE,GACAuE,IAAA/B,UAAAxuD,EAAAouC,EAAA//B,cAEA,IAAA29C,EAAA33D,SAAAi8D,GAEA,GADAtwD,EAAA+P,EAAArR,KAAAsB,aAAAgsD,EAAAsE,GACAtwD,EAAAlL,UACAy7D,IAAA/B,UAAAz+C,EAAArR,KAAA0kB,MAAAgrB,EAAA//B,cAEA,CACA,GAAAxO,GAAA1J,EAAAlB,QAAAm5C,EAAA//B,SAAArO,EAAAf,WACA,IAAAY,EAAA,CAEA,GAAA2wD,GAAA3wD,EAAAkF,SAAA/E,EAAAb,WACAoxD,KAAAhC,SAAAx+C,EAAArR,KAAA0kB,MAAAotC,OAaA,MAAAD,IAEA3N,IAEA3wD,GAAA2wD,WAOA,IAAA0L,GAAA,WAKA,QAAAA,GAAA3wD,EAAAkoD,GACA74D,KAAAyjE,UAAA9yD,EACA3Q,KAAA0jE,WAAA7K,EA4FA,MAhFAyI,GAAAxkE,UAAA0yC,uBAAA,SAAAmsB,EAAA/C,EAAAuJ,GACA,MAAAniE,MAAA0jE,WAAAl0B,uBAAAxvC,KAAAyjE,UAAA9H,EAAA/C,EAAAuJ,IASAb,EAAAxkE,UAAA4yC,0BAAA,SAAAizB,GACA,MAAA3iE,MAAA0jE,WAAAh0B,0BAAA1vC,KAAAyjE,UAAAd,IAqBArB,EAAAxkE,UAAAmhE,mCAAA,SAAAttD,EAAAoyD,EAAAC,GACA,MAAAhjE,MAAA0jE,WAAAzF,mCAAAj+D,KAAAyjE,UAAA9yD,EAAAoyD,EAAAC,IAUA1B,EAAAxkE,UAAA4gE,eAAA,SAAA/sD,GACA,MAAA3Q,MAAA0jE,WAAAhG,eAAA19D,KAAAyjE,UAAA5wD,MAAAlC,KAaA2wD,EAAAxkE,UAAAyjE,iBAAA,SAAAF,EAAA1lD,EAAA7B,EAAArJ,EAAAkK,GACA,MAAA3Z,MAAA0jE,WAAAnD,iBAAAvgE,KAAAyjE,UAAApD,EAAA1lD,EAAA7B,EAAArJ,EAAAkK,IAUA2nD,EAAAxkE,UAAAuhE,kBAAA,SAAAr1C,EAAA26C,GACA,MAAA3jE,MAAA0jE,WAAArF,kBAAAr+D,KAAAyjE,UAAAz6C,EAAA26C,IAQArC,EAAAxkE,UAAA+V,MAAA,SAAAiF,GACA,UAAAwpD,GAAAthE,KAAAyjE,UAAA5wD,MAAAiF,GAAA9X,KAAA0jE,aAEApC,IAEAr8D,GAAAq8D,gBhGokgBM,SAAU7lE,EAAQwJ,EAAStJ,GAEjC,YiG5qhBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAk5D,GAAAz5D,EAAA,KACAonB,EAAApnB,EAAA,KACAwN,EAAAxN,EAAA,KACAoZ,EAAApZ,EAAA,KACAib,EAAAjb,EAAA,KACAyN,EAAAzN,EAAA,KAUAwlE,EAAA,WACA,QAAAA,GAAAuC,GACA1jE,KAAA0jE,aAkLA,MA3KAvC,GAAArkE,UAAAykE,SAAA,SAAA5wD,EAAA2E,GACA,GAAA3E,EAAA7I,UACA,UAAAq5D,GAAA,GAAA/L,GAAAp5B,cAAA1mB,GAGA,IAAAsuD,GAAA5jE,KAAA0jE,WAAAnnC,yBAAA5rB,EACA,UAAAizD,EAAA,CACA,GAAAC,GAAAD,EAAAjzD,KACAzU,EAAA0nE,EAAA1nE,MACA8W,EAAA+P,EAAArR,KAAAsB,aAAA6wD,EAAAlzD,EAEA,OADAzU,KAAAyc,YAAA3F,EAAAsC,GACA,GAAA6rD,GAAAnhE,KAAA0jE,WAAAr4D,IAAAw4D,EAAA3nE,IAGA,GAAAsgC,GAAA,GAAA44B,GAAAp5B,cAAA1mB,EAEA,WAAA6rD,GADAnhE,KAAA0jE,WAAA9mC,QAAAjsB,EAAA6rB,KAUA2kC,EAAArkE,UAAA0kE,UAAA,SAAA7wD,EAAA2jB,GACA,GAAAwvC,GAAA9jE,IAIA,OAHAmJ,GAAAzB,QAAA4sB,EAAA,SAAAtL,EAAA1T,GACAwuD,IAAAvC,SAAA5wD,EAAAkC,MAAAmW,GAAA1T,KAEAwuD,GASA3C,EAAArkE,UAAAy5D,YAAA,SAAA5lD,GACA,MAAAA,GAAA7I,UACAq5D,EAAA/qC,MAIA,GAAA+qC,GADAnhE,KAAA0jE,WAAA9mC,QAAAjsB,EAAAykD,EAAAp5B,cAAA5F,SAWA+qC,EAAArkE,UAAAulE,iBAAA,SAAA1xD,GACA,aAAA3Q,KAAAiiE,gBAAAtxD,IASAwwD,EAAArkE,UAAAmlE,gBAAA,SAAAtxD,GACA,GAAAizD,GAAA5jE,KAAA0jE,WAAAnnC,yBAAA5rB,EACA,cAAAizD,EACA5jE,KAAA0jE,WACAn4D,IAAAq4D,EAAAjzD,MACAoH,SAAAgL,EAAArR,KAAAsB,aAAA4wD,EAAAjzD,SAGA,MAQAwwD,EAAArkE,UAAAgmE,oBAAA,WACA,GAAAzhD,MACA/L,EAAAtV,KAAA0jE,WAAAxnE,KAgBA,OAfA,OAAAoZ,EAEAA,EAAAoC,cACApC,EAAA6D,aAAAvC,EAAAJ,eAAA,SAAAsB,EAAAsB,GACAiI,EAAAhgB,KAAA,GAAA0T,GAAAiB,UAAA8B,EAAAsB,MAKApZ,KAAA0jE,WAAAriD,SAAA9G,iBAAA,SAAAzC,EAAA2kB,GACA,MAAAA,EAAAvgC,OACAmlB,EAAAhgB,KAAA,GAAA0T,GAAAiB,UAAA8B,EAAA2kB,EAAAvgC,UAIAmlB,GAMA8/C,EAAArkE,UAAAslE,mBAAA,SAAAzxD,GACA,GAAAA,EAAA7I,UACA,MAAA9H,KAGA,IAAAyiE,GAAAziE,KAAAiiE,gBAAAtxD,EACA,OACA,IAAAwwD,GADA,MAAAsB,EACA,GAAArN,GAAAp5B,cAAAymC,GAGAziE,KAAA0jE,WAAAlnC,QAAA7rB,KAQAwwD,EAAArkE,UAAAgL,QAAA,WACA,MAAA9H,MAAA0jE,WAAA57D,WAQAq5D,EAAArkE,UAAAwD,MAAA,SAAAgV,GACA,MAAA6rD,GAAA4C,mBAAAhhD,EAAArR,KAAA0kB,MAAAp2B,KAAA0jE,WAAApuD,IAKA6rD,EAAA/qC,MAAA,GAAA+qC,GAAA,GAAA/L,GAAAp5B,cAAA,OAQAmlC,EAAA4C,mBAAA,SAAA/wD,EAAA6lD,EAAAvjD,GACA,SAAAujD,EAAA38D,MAEA,MAAAoZ,GAAAqD,YAAA3F,EAAA6lD,EAAA38D,MAGA,IAAA8nE,GAAA,IAgBA,OAfAnL,GAAAx3C,SAAA9G,iBAAA,SAAAyO,EAAAyT,GACA,cAAAzT,GAGA5f,EAAAjE,OAAA,OAAAs3B,EAAAvgC,MAAA,6CACA8nE,EAAAvnC,EAAAvgC,OAGAoZ,EAAA6rD,EAAA4C,mBAAA/wD,EAAAH,MAAAmW,GAAAyT,EAAAnnB,KAIAA,EAAAyC,SAAA/E,GAAAlL,WAAA,OAAAk8D,IACA1uD,IAAAqD,YAAA3F,EAAAH,MAAA,aAAAmxD,IAEA1uD,GAGA6rD,IAEAl8D,GAAAk8D,iBjGoshBM,SAAU1lE,EAAQwJ,EAAStJ,GAEjC,YkG54hBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAytB,GAAAhuB,EAAA,KAMAs2B,EAAA,WACA,QAAAA,KACAjyB,KAAAikE,UAAAt6C,EAAA3S,aAAAP,WAQA,MANAwb,GAAAn1B,UAAA21B,QAAA,SAAA9hB,GACA,MAAA3Q,MAAAikE,UAAAlsD,SAAApH,IAEAshB,EAAAn1B,UAAAy3B,eAAA,SAAA5jB,EAAAuzD,GACAlkE,KAAAikE,UAAAjkE,KAAAikE,UAAAtrD,YAAAhI,EAAAuzD,IAEAjyC,IAEAhtB,GAAAgtB,kBlGo6hBM,SAAUx2B,EAAQwJ,EAAStJ,GAEjC,YmGz7hBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAIAk1B,EAAA,WAIA,QAAAA,GAAAszC,GACAnkE,KAAAmkE,OAsDA,MAhDAtzC,GAAA/zB,UAAA+6C,SAAA,SAAAD,GACA,MAAA53C,MAAAmkE,KAAA,kBAAAvsB,GAAAp2C,KAAA,KAEA,SAAAE,GAGA,MAAAA,IAAA,+BAAAA,EAAA8O,MACArH,EAAA+B,IAAA,kEACA,MAGA2S,QAAAE,OAAArc,MAIAmvB,EAAA/zB,UAAA20B,uBAAA,SAAAi8B,GAGA1tD,KAAAmkE,KAAA,8BAAAzW,IAEA78B,EAAA/zB,UAAAsnE,0BAAA,SAAA1W,GACA1tD,KAAAmkE,KAAA,iCAAAzW,IAEA78B,EAAA/zB,UAAAs7C,sBAAA,WACA,GAAAisB,GAAA,0DACArkE,KAAAmkE,KAAAjiE,KACA,gFAEA,eAAAlC,MAAAmkE,KAAA7yC,QACA+yC,GACA,uJAIA,kBAAArkE,MAAAmkE,KAAA7yC,QACA+yC,GACA,2JAKAA,GACA,kKAIAl7D,EAAAyC,KAAAy4D,IAEAxzC,IAEA5rB,GAAA4rB,qBnGi9hBM,SAAUp1B,EAAQwJ,EAAStJ,GAEjC,YoGrhiBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KAMA+iC,EAAA,WACA,QAAAA,KACA1+B,KAAAskE,aAWA,MATA5lC,GAAA5hC,UAAAi7B,iBAAA,SAAA71B,EAAAqiE,OACA,KAAAA,IAAgCA,EAAA,GAChCn7D,EAAA/B,SAAArH,KAAAskE,UAAApiE,KACAlC,KAAAskE,UAAApiE,GAAA,GACAlC,KAAAskE,UAAApiE,IAAAqiE,GAEA7lC,EAAA5hC,UAAAyO,IAAA,WACA,MAAApC,GAAAvD,SAAA5F,KAAAskE,YAEA5lC,IAEAz5B,GAAAy5B,mBpG6iiBM,SAAUjjC,EAAQwJ,EAAStJ,GAEjC,YqGtkiBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA+zB,EAAA/zB,EAAA,KAIA6oE,EAAA,IACAC,EAAA,IAMA3yC,EAAA,WAKA,QAAAA,GAAA4yC,EAAAzzC,GACAjxB,KAAAixB,UACAjxB,KAAA2kE,kBACA3kE,KAAAowB,eAAA,GAAAV,GAAA6H,cAAAmtC,EACA,IAAAniE,GAAAiiE,GACAC,EAAAD,GAAAz3D,KAAA4a,QACAve,GAAAoI,sBAAAxR,KAAA4kE,aAAAz5D,KAAAnL,MAAA+M,KAAAC,MAAAzK,IAsBA,MApBAuvB,GAAAh1B,UAAAk7B,YAAA,SAAAJ,GACA53B,KAAA2kE,eAAA/sC,IAAA,GAEA9F,EAAAh1B,UAAA8nE,aAAA,WACA,GAAA9kE,GAAAE,KACAo3B,EAAAp3B,KAAAowB,eAAA7kB,MACAs5D,KACAC,GAAA,CACA37D,GAAAzB,QAAA0vB,EAAA,SAAAQ,EAAA17B,GACAA,EAAA,GAAAiN,EAAA9B,SAAAvH,EAAA6kE,eAAA/sC,KACAitC,EAAAjtC,GAAA17B,EACA4oE,GAAA,KAGAA,GACA9kE,KAAAixB,QAAA6kB,YAAA+uB,GAGAz7D,EAAAoI,sBAAAxR,KAAA4kE,aAAAz5D,KAAAnL,MAAA+M,KAAAC,MAAA,EAAAD,KAAA4a,SAnCA,OAqCAmK,IAEA7sB,GAAA6sB,iBrG8liBM,SAAUr2B,EAAQwJ,EAAStJ,GAEjC,YsGjpiBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAeA20B,EAAA,WACA,QAAAA,KAKAtwB,KAAA+kE,eAMA/kE,KAAAglE,gBAAA,EA+EA,MA1EA10C,GAAAxzB,UAAAm4B,YAAA,SAAAgwC,GAGA,OADAC,GAAA,KACA5mE,EAAA,EAAuBA,EAAA2mE,EAAA1mE,OAA0BD,IAAA,CACjD,GAAAy6C,GAAAksB,EAAA3mE,GACA6mE,EAAApsB,EAAAmc,SACA,QAAAgQ,GAAAC,EAAAxxD,OAAAuxD,EAAAhQ,aACAl1D,KAAA+kE,YAAA1jE,KAAA6jE,GACAA,EAAA,MAEA,OAAAA,IACAA,EAAA,GAAAE,GAAAD,IAEAD,EAAAh3B,IAAA6K,GAEAmsB,GACAllE,KAAA+kE,YAAA1jE,KAAA6jE,IAYA50C,EAAAxzB,UAAAk6B,kBAAA,SAAArmB,EAAAs0D,GACAjlE,KAAAi1B,YAAAgwC,GACAjlE,KAAAqlE,oCAAA,SAAAF,GACA,MAAAA,GAAAxxD,OAAAhD,MAYA2f,EAAAxzB,UAAAk2B,0BAAA,SAAAgD,EAAAivC,GACAjlE,KAAAi1B,YAAAgwC,GACAjlE,KAAAqlE,oCAAA,SAAAF,GACA,MAAAA,GAAA99D,SAAA2uB,MAAA3uB,SAAA89D,MAOA70C,EAAAxzB,UAAAuoE,oCAAA,SAAAhpC,GACAr8B,KAAAglE,iBAEA,QADAM,IAAA,EACAhnE,EAAA,EAAuBA,EAAA0B,KAAA+kE,YAAAxmE,OAA6BD,IAAA,CACpD,GAAAinE,GAAAvlE,KAAA+kE,YAAAzmE,EACA,IAAAinE,EAAA,CAEAlpC,EADAkpC,EAAArQ,YAEAl1D,KAAA+kE,YAAAzmE,GAAAknE,QACAxlE,KAAA+kE,YAAAzmE,GAAA,MAGAgnE,GAAA,GAIAA,IACAtlE,KAAA+kE,gBAEA/kE,KAAAglE,mBAEA10C,IAEArrB,GAAAqrB,YAKA,IAAA80C,GAAA,WACA,QAAAA,GAAArhD,GACA/jB,KAAA+jB,QAKA/jB,KAAAylE,WA8BA,MAzBAL,GAAAtoE,UAAAoxC,IAAA,SAAA6K,GACA/4C,KAAAylE,QAAApkE,KAAA03C,IAKAqsB,EAAAtoE,UAAA0oE,MAAA,WACA,OAAAlnE,GAAA,EAAuBA,EAAA0B,KAAAylE,QAAAlnE,OAAyBD,IAAA,CAChD,GAAAy6C,GAAA/4C,KAAAylE,QAAAnnE,EACA,WAAAy6C,EAAA,CACA/4C,KAAAylE,QAAAnnE,GAAA,IACA,IAAAonE,GAAA3sB,EAAAmb,gBACA/qD,GAAAuB,QACAvB,EAAA+B,IAAA,UAAA6tC,EAAAhpC,YAEA5G,EAAA6H,eAAA00D,MAOAN,EAAAtoE,UAAAo4D,QAAA,WACA,MAAAl1D,MAAA+jB,OAEAqhD,IAEAngE,GAAAmgE,atGyqiBM,SAAU3pE,EAAQwJ,EAAStJ,GAEjC,YuGp0iBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAgqE,EAAAhqE,EAAA,KACAwN,EAAAxN,EAAA,KAIAi4C,EAAA,SAAA1+B,GAEA,QAAA0+B,KACA,GACAgyB,GACAC,EAFA/lE,EAAAoV,EAAAzY,KAAAuD,MAAA,aAAAA,IAqCA,OAlCA,oBAAAyM,WACA,oBAAAA,UAAAQ,mBACA,oBAAAR,UAAA,QAEAo5D,EAAA,mBACAD,EAAA,UAEA,oBAAAn5D,UAAA,WACAo5D,EAAA,sBACAD,EAAA,aAEA,oBAAAn5D,UAAA,UACAo5D,EAAA,qBACAD,EAAA,YAEA,oBAAAn5D,UAAA,eACAo5D,EAAA,yBACAD,EAAA,iBAOA9lE,EAAAmzC,UAAA,EACA4yB,GACAp5D,SAAAQ,iBAAA44D,EAAA,WACA,GAAAnvB,IAAAjqC,SAAAm5D,EACAlvB,KAAA52C,EAAAmzC,WACAnzC,EAAAmzC,SAAAyD,EACA52C,EAAA84C,QAAA,UAAAlC,MAEa,GAEb52C,EAaA,MApDA+U,GAAAM,UAAAy+B,EAAA1+B,GAyCA0+B,EAAA1U,YAAA,WACA,UAAA0U,IAMAA,EAAA92C,UAAAk8C,gBAAA,SAAAv0B,GAEA,MADAtb,GAAAhE,OAAA,YAAAsf,EAAA,uBAAAA,IACAzkB,KAAAizC,WAEAW,GACC+xB,EAAAltB,aACDxzC,GAAA2uC,qBvG41iBM,SAAUn4C,EAAQwJ,EAAStJ,GAEjC,YwG55iBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAwN,EAAAxN,EAAA,KACAgqE,EAAAhqE,EAAA,KACAyN,EAAAzN,EAAA,KAUAm4C,EAAA,SAAA5+B,GAEA,QAAA4+B,KACA,GAAAh0C,GAAAoV,EAAAzY,KAAAuD,MAAA,YAAAA,IAsBA,OArBAF,GAAAgmE,SAAA,EAKA,oBAAAvmE,SACA,oBAAAA,QAAA0N,kBACA7D,EAAAjD,oBACA5G,OAAA0N,iBAAA,oBACAnN,EAAAgmE,UACAhmE,EAAAgmE,SAAA,EACAhmE,EAAA84C,QAAA,gBAEa,GACbr5C,OAAA0N,iBAAA,qBACAnN,EAAAgmE,UACAhmE,EAAAgmE,SAAA,EACAhmE,EAAA84C,QAAA,gBAEa,IAEb94C,EAmBA,MA3CA+U,GAAAM,UAAA2+B,EAAA5+B,GA0BA4+B,EAAA5U,YAAA,WACA,UAAA4U,IAMAA,EAAAh3C,UAAAk8C,gBAAA,SAAAv0B,GAEA,MADAtb,GAAAhE,OAAA,WAAAsf,EAAA,uBAAAA,IACAzkB,KAAA8lE,UAKAhyB,EAAAh3C,UAAAy7C,gBAAA,WACA,MAAAv4C,MAAA8lE,SAEAhyB,GACC6xB,EAAAltB,aACDxzC,GAAA6uC,iBxGo7iBM,SAAUr4C,EAAQwJ,EAAStJ,GAEjC,YyGl/iBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA6pE,GAAApqE,EAAA,KACAqqE,EAAArqE,EAAA,KACAwN,EAAAxN,EAAA,KASA+9C,EAAA,WAIA,QAAAA,GAAA10B,GACAhlB,KAAAimE,gBAAAjhD,GA6DA,MA3DAjpB,QAAAuB,eAAAo8C,EAAA,kBAKAnuC,IAAA,WACA,OAAAw6D,EAAAhoB,sBAAAioB,EAAAziB,sBAEAtmD,YAAA,EACAE,cAAA,IAMAu8C,EAAA58C,UAAAmpE,gBAAA,SAAAjhD,GACA,GAAAkhD,GAAAF,EAAAziB,qBAAAyiB,EAAAziB,oBAAA,cACA4iB,EAAAD,IAAAF,EAAAziB,oBAAA0B,kBAMA,IALAjgC,EAAA0gB,gBACAwgC,GACA/8D,EAAAyC,KAAA,mFACAu6D,GAAA,GAEAA,EACAnmE,KAAAomE,aAAAJ,EAAAziB,yBAEA,CACA,GAAA8iB,GAAArmE,KAAAomE,cACAj9D,GAAAoF,KAAAmrC,EAAA4sB,eAAA,SAAAhoE,EAAAioE,GACAA,KAAA,eACAF,EAAAhlE,KAAAklE,OASA7sB,EAAA58C,UAAA+8C,iBAAA,WACA,GAAA75C,KAAAomE,YAAA7nE,OAAA,EACA,MAAAyB,MAAAomE,YAAA,EAGA,UAAAz6D,OAAA,4BAOA+tC,EAAA58C,UAAA+/C,iBAAA,WACA,MAAA78C,MAAAomE,YAAA7nE,OAAA,EACAyB,KAAAomE,YAAA,GAGA,MAGA1sB,IAEAz0C,GAAAy0C,oBzG0gjBM,SAAUj+C,EAAQwJ,EAAStJ,GAEjC,Y0G5ljBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KAMA0iD,EAAA,WAIA,QAAAA,GAAAjF,GACAp5C,KAAAo5C,aACAp5C,KAAAwmE,oBACAxmE,KAAAymE,mBAAA,EACAzmE,KAAA0mE,oBAAA,EACA1mE,KAAA2mE,QAAA,KAiDA,MA/CAtoB,GAAAvhD,UAAAmiD,WAAA,SAAA2nB,EAAAl4D,GACA1O,KAAA0mE,mBAAAE,EACA5mE,KAAA2mE,QAAAj4D,EACA1O,KAAA0mE,mBAAA1mE,KAAAymE,qBACAzmE,KAAA2mE,UACA3mE,KAAA2mE,QAAA,OAUAtoB,EAAAvhD,UAAAqiD,eAAA,SAAA0nB,EAAA16D,GACA,GAAArM,GAAAE,IACAA,MAAAwmE,iBAAAK,GAAA16D,CAwBA,KAvBA,GAsBA26D,GAAA9mE,KACAA,KAAAwmE,iBAAAxmE,KAAAymE,qBAAA,CAEA,aAzBA,WACA,GAAAM,GAAAD,EAAAN,iBAAAM,EAAAL,0BACAK,GAAAN,iBAAAM,EAAAL,mBAQA,QAAAnoE,GAAA,EAA2BA,EAAAyoE,EAAAxoE,SAAsBD,GAPjD,SAAAA,GACAyoE,EAAAzoE,IACA6K,EAAA6H,eAAA,WACAlR,EAAAs5C,WAAA2tB,EAAAzoE,OAKAA,EAEA,IAAAwoE,EAAAL,qBAAAK,EAAAJ,mBAKA,MAJAI,GAAAH,UACAG,EAAAH,UACAG,EAAAH,QAAA,MAEA,OAEAG,GAAAL,wBAMA,QAGApoB,IAEAp5C,GAAAo5C,kB1GonjBM,SAAU5iD,EAAQwJ,EAAStJ,GAEjC,Y2GzrjBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA2Y,GAAAlZ,EAAA,KACAwN,EAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACA0N,EAAA1N,EAAA,KACA2N,EAAA3N,EAAA,KACA4N,EAAA5N,EAAA,KACAq2C,EAAAr2C,EAAA,KAMAu1B,EAAA,SAAAhc,GAQA,QAAAgc,GAAAlB,EAAAmB,EAAAghB,GACA,GAAAryC,GAAAoV,EAAAzY,KAAAuD,WAaA,OAZAF,GAAAkwB,YACAlwB,EAAAqxB,gBACArxB,EAAAqyC,qBAEAryC,EAAA60B,KAAAvrB,EAAAoC,WAAA,WAOA1L,EAAAyyC,YACAzyC,EA6HA,MAlJA+U,GAAAM,UAAA+b,EAAAhc,GAuBAgc,EAAAp0B,UAAAg5C,YAAA,SAAA1e,GACA,SAAAzrB,OAAA,4BAQAulB,EAAA81C,aAAA,SAAAv2D,EAAA4hB,GACA,WAAAxO,KAAAwO,EACA,OAAAA,GAGAlpB,EAAAhE,OAAAsL,EAAA63B,iBAAA8L,YAAA,kDACA3jC,EAAAE,KAAAZ,aAIAmhB,EAAAp0B,UAAAg2B,OAAA,SAAAriB,EAAA6hB,EAAAD,EAAAE,GACA,GAAAzyB,GAAAE,KACAqS,EAAA5B,EAAAE,KAAAZ,UACA/P,MAAA20B,KAAA,qBAAAtiB,EAAA,IAAA5B,EAAAg6B,kBAEA,IAAAw8B,GAAA/1C,EAAA81C,aAAAv2D,EAAA4hB,GACA60C,IACAlnE,MAAAuyC,SAAA00B,GAAAC,CACA,IAAAC,GAAA12D,EACA63B,iBACA8+B,6BACApnE,MAAAqnE,aAAAh1D,EAAA,QAAA80D,EAAA,SAAAzlE,EAAAyc,GACA,GAAAhS,GAAAgS,CAQA,IAPA,MAAAzc,IACAyK,EAAA,KACAzK,EAAA,MAEA,OAAAA,GACA5B,EAAAqxB,cAAA9e,EAAAlG,GAAA,EAAAkmB,GAEA/oB,EAAArB,QAAAnI,EAAAyyC,SAAA00B,KAAAC,EAAA,CACA,GAAAI,EAKAA,GAJA5lE,EAGA,KAAAA,EACA,oBAGA,cAAAA,EANA,KAQA6wB,EAAA+0C,EAAA,UAKAp2C,EAAAp0B,UAAAm2B,SAAA,SAAAxiB,EAAA4hB,GACA,GAAA40C,GAAA/1C,EAAA81C,aAAAv2D,EAAA4hB,SACAryB,MAAAuyC,SAAA00B,IAGA/1C,EAAAp0B,UAAA60B,iBAAA,SAAAD,KAYAR,EAAAp0B,UAAAuqE,aAAA,SAAAh1D,EAAAk1D,EAAA74D,GACA,GAAA5O,GAAAE,SACA,KAAAunE,IAA+CA,MAC/CA,EAAA,gBACAvnE,KAAAmyC,mBACA0F,UAAA,GACAr2C,KAAA,SAAAgmE,GACA,GAAAC,GAAAD,KAAA1vB,WACA2vB,KACAF,EAAA,KAAAE,EAEA,IAAAnoC,IAAAx/B,EAAAkwB,UAAAkD,OAAA,sBACApzB,EAAAkwB,UAAA/K,KACA5S,EACA,IACA9I,EAAApB,YAAAo/D,EACAznE,GAAA60B,KAAA,4BAAA2K,EACA,IAAAooC,GAAA,GAAAC,eACAD,GAAA7kB,mBAAA,WACA,GAAAn0C,GAAA,IAAAg5D,EAAAh7D,WAAA,CACA5M,EAAA60B,KAAA,qBAAA2K,EAAA,qBAAAooC,EAAA7lE,OAAA,YAAA6lE,EAAAE,aACA,IAAAhlC,GAAA,IACA,IAAA8kC,EAAA7lE,QAAA,KAAA6lE,EAAA7lE,OAAA,KACA,IACA+gC,EAAAv5B,EAAA1C,SAAA+gE,EAAAE,cAEA,MAAA74D,GACA3F,EAAAwC,KAAA,qCACA0zB,EACA,KACAooC,EAAAE,cAEAl5D,EAAA,KAAAk0B,OAIA,OAAA8kC,EAAA7lE,QAAA,MAAA6lE,EAAA7lE,QACAuH,EAAAwC,KAAA,sCACA0zB,EACA,YACAooC,EAAA7lE,QAEA6M,EAAAg5D,EAAA7lE,OAEA6M,GAAA,OAGAg5D,EAAAjtB,KAAA,MAAAnb,GAAA,GACAooC,EAAA1rB,UAGA9qB,GACC8gB,EAAAwG,cACDvzC,GAAAisB,sB3GitjBM,SAAUz1B,EAAQwJ,EAAStJ,GAEjC,Y4Gr3jBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAyN,EAAAzN,EAAA,KACAkb,EAAAlb,EAAA,KACAib,EAAAjb,EAAA,KACAqrC,EAAArrC,EAAA,KACAsrC,EAAAtrC,EAAA,KACAuqD,EAAAvqD,EAAA,KACAksE,EAAAlsE,EAAA,KACAmsE,EAAAnsE,EAAA,KACA0N,EAAA1N,EAAA,KAOA49B,EAAA,WACA,QAAAA,KACAv5B,KAAA+nE,WAAA,EACA/nE,KAAAgoE,WAAA,EACAhoE,KAAAioE,eAAA,EACAjoE,KAAAkoE,SAAA,EACAloE,KAAAmoE,aAAA,EACAnoE,KAAAooE,OAAA,EACApoE,KAAAqoE,UAAA,GACAroE,KAAAsoE,iBAAA,KACAtoE,KAAAuoE,gBAAA,GACAvoE,KAAAwoE,eAAA,KACAxoE,KAAAyoE,cAAA,GACAzoE,KAAAq7B,OAAAzkB,EAAAJ,eAmWA,MA9VA+iB,GAAAz8B,UAAA0qC,SAAA,WACA,MAAAxnC,MAAAgoE,WAKAzuC,EAAAz8B,UAAA4rE,eAAA,WACA,WAAA1oE,KAAAqoE,UAKAroE,KAAAgoE,UAGAhoE,KAAAqoE,YAAA9uC,EAAAovC,yBAAAC,gBAOArvC,EAAAz8B,UAAA2qC,mBAAA,WAEA,MADAt+B,GAAAhE,OAAAnF,KAAAgoE,UAAA,oCACAhoE,KAAAsoE,kBAOA/uC,EAAAz8B,UAAAgrC,kBAAA,WAEA,MADA3+B,GAAAhE,OAAAnF,KAAAgoE,UAAA,oCACAhoE,KAAAioE,cACAjoE,KAAAuoE,gBAGAn/D,EAAA+D,UAMAosB,EAAAz8B,UAAA4qC,OAAA,WACA,MAAA1nC,MAAAkoE,SAMA3uC,EAAAz8B,UAAA6qC,iBAAA,WAEA,MADAx+B,GAAAhE,OAAAnF,KAAAkoE,QAAA,kCACAloE,KAAAwoE,gBAOAjvC,EAAAz8B,UAAAirC,gBAAA,WAEA,MADA5+B,GAAAhE,OAAAnF,KAAAkoE,QAAA,kCACAloE,KAAAmoE,YACAnoE,KAAAyoE,cAGAr/D,EAAAgE,UAMAmsB,EAAAz8B,UAAAqrC,SAAA,WACA,MAAAnoC,MAAA+nE,WAKAxuC,EAAAz8B,UAAAsrC,iBAAA,WACA,MAAApoC,MAAA+nE,WAAA,KAAA/nE,KAAAqoE,WAMA9uC,EAAAz8B,UAAA+rE,SAAA,WAEA,MADA1/D,GAAAhE,OAAAnF,KAAA+nE,UAAA,oCACA/nE,KAAAooE,QAKA7uC,EAAAz8B,UAAAwhC,SAAA,WACA,MAAAt+B,MAAAq7B,QAMA9B,EAAAz8B,UAAAgsE,MAAA,WACA,GAAAn7C,GAAA,GAAA4L,EAaA,OAZA5L,GAAAo6C,UAAA/nE,KAAA+nE,UACAp6C,EAAAy6C,OAAApoE,KAAAooE,OACAz6C,EAAAq6C,UAAAhoE,KAAAgoE,UACAr6C,EAAA26C,iBAAAtoE,KAAAsoE,iBACA36C,EAAAs6C,cAAAjoE,KAAAioE,cACAt6C,EAAA46C,gBAAAvoE,KAAAuoE,gBACA56C,EAAAu6C,QAAAloE,KAAAkoE,QACAv6C,EAAA66C,eAAAxoE,KAAAwoE,eACA76C,EAAAw6C,YAAAnoE,KAAAmoE,YACAx6C,EAAA86C,cAAAzoE,KAAAyoE,cACA96C,EAAA0N,OAAAr7B,KAAAq7B,OACA1N,EAAA06C,UAAAroE,KAAAqoE,UACA16C,GAMA4L,EAAAz8B,UAAA6sC,MAAA,SAAAo/B,GACA,GAAAh/B,GAAA/pC,KAAA8oE,OAIA,OAHA/+B,GAAAg+B,WAAA,EACAh+B,EAAAq+B,OAAAW,EACAh/B,EAAAs+B,UAAA,GACAt+B,GAMAxQ,EAAAz8B,UAAA4sC,aAAA,SAAAq/B,GACA,GAAAh/B,GAAA/pC,KAAA8oE,OAIA,OAHA/+B,GAAAg+B,WAAA,EACAh+B,EAAAq+B,OAAAW,EACAh/B,EAAAs+B,UAAA9uC,EAAAovC,yBAAAC,eACA7+B,GAMAxQ,EAAAz8B,UAAA8sC,YAAA,SAAAm/B,GACA,GAAAh/B,GAAA/pC,KAAA8oE,OAIA,OAHA/+B,GAAAg+B,WAAA,EACAh+B,EAAAq+B,OAAAW,EACAh/B,EAAAs+B,UAAA9uC,EAAAovC,yBAAAK,gBACAj/B,GAOAxQ,EAAAz8B,UAAAstC,QAAA,SAAA/zB,EAAA5X,GACA,GAAAsrC,GAAA/pC,KAAA8oE,OAcA,OAbA/+B,GAAAi+B,WAAA,MACAnkD,KAAAxN,IACAA,EAAA,MAEA0zB,EAAAu+B,iBAAAjyD,EACA,MAAA5X,GACAsrC,EAAAk+B,eAAA,EACAl+B,EAAAw+B,gBAAA9pE,IAGAsrC,EAAAk+B,eAAA,EACAl+B,EAAAw+B,gBAAA,IAEAx+B,GAOAxQ,EAAAz8B,UAAAutC,MAAA,SAAAh0B,EAAA5X,GACA,GAAAsrC,GAAA/pC,KAAA8oE,OAcA,OAbA/+B,GAAAm+B,SAAA,MACArkD,KAAAxN,IACAA,EAAA,MAEA0zB,EAAAy+B,eAAAnyD,MACAwN,KAAAplB,GACAsrC,EAAAo+B,aAAA,EACAp+B,EAAA0+B,cAAAhqE,IAGAsrC,EAAAo+B,aAAA,EACAp+B,EAAA0+B,cAAA,IAEA1+B,GAMAxQ,EAAAz8B,UAAAktC,QAAA,SAAArwB,GACA,GAAAowB,GAAA/pC,KAAA8oE,OAEA,OADA/+B,GAAA1O,OAAA1hB,EACAowB,GAKAxQ,EAAAz8B,UAAA0tC,eAAA,WACA,GAAAy+B,GAAA1vC,EAAAovC,yBACA/6D,IAaA,IAZA5N,KAAAgoE,YACAp6D,EAAAq7D,EAAAC,mBAAAlpE,KAAAsoE,iBACAtoE,KAAAioE,gBACAr6D,EAAAq7D,EAAAE,kBAAAnpE,KAAAuoE,kBAGAvoE,KAAAkoE,UACAt6D,EAAAq7D,EAAAG,iBAAAppE,KAAAwoE,eACAxoE,KAAAmoE,cACAv6D,EAAAq7D,EAAAI,gBAAArpE,KAAAyoE,gBAGAzoE,KAAA+nE,UAAA,CACAn6D,EAAAq7D,EAAAK,OAAAtpE,KAAAooE,MACA,IAAAmB,GAAAvpE,KAAAqoE,SACA,MAAAkB,IAEAA,EADAvpE,KAAA0oE,iBACAO,EAAAL,eAGAK,EAAAD,iBAGAp7D,EAAAq7D,EAAAO,WAAAD,EAMA,MAHAvpE,MAAAq7B,SAAAzkB,EAAAJ,iBACA5I,EAAAq7D,EAAAQ,OAAAzpE,KAAAq7B,OAAAtrB,YAEAnC,GAKA2rB,EAAAz8B,UAAAwzC,aAAA,WACA,QAAAtwC,KAAAgoE,WAAAhoE,KAAAkoE,SAAAloE,KAAA+nE,YAKAxuC,EAAAz8B,UAAAs3C,UAAA,WACA,MAAAp0C,MAAAswC,gBAAAtwC,KAAAq7B,QAAAzkB,EAAAJ,gBAKA+iB,EAAAz8B,UAAA69D,cAAA,WACA,MAAA36D,MAAAswC,eACA,GAAA4V,GAAAroB,cAAA79B,KAAAs+B,YAEAt+B,KAAAmoC,WACA,GAAA0/B,GAAA6B,cAAA1pE,MAGA,GAAA8nE,GAAA3hB,aAAAnmD,OAQAu5B,EAAAz8B,UAAAsqE,4BAAA,WACA,GAAAuC,GAAApwC,EAAAqwC,sBACAC,IACA,IAAA7pE,KAAAo0C,YACA,MAAAy1B,EAEA,IAAA7/B,EAmCA,OAlCAhqC,MAAAq7B,SAAAzkB,EAAAJ,eACAwzB,EAAA2/B,EAAAnzD,eAEAxW,KAAAq7B,SAAA2L,EAAAiB,YACA+B,EAAA2/B,EAAA1hC,YAEAjoC,KAAAq7B,SAAAxkB,EAAAwE,UACA2uB,EAAA2/B,EAAAtuD,WAGAlS,EAAAhE,OAAAnF,KAAAq7B,iBAAA4L,GAAAe,UAAA,4BACAgC,EAAAhqC,KAAAq7B,OAAAtrB,YAEA85D,EAAAF,EAAAG,UAAAzgE,EAAAzC,UAAAojC,GACAhqC,KAAAgoE,YACA6B,EAAAF,EAAAI,UAAA1gE,EAAAzC,UAAA5G,KAAAsoE,kBACAtoE,KAAAioE,gBACA4B,EAAAF,EAAAI,WAAA,IAAA1gE,EAAAzC,UAAA5G,KAAAuoE,mBAGAvoE,KAAAkoE,UACA2B,EAAAF,EAAAK,QAAA3gE,EAAAzC,UAAA5G,KAAAwoE,gBACAxoE,KAAAmoE,cACA0B,EAAAF,EAAAK,SAAA,IAAA3gE,EAAAzC,UAAA5G,KAAAyoE,iBAGAzoE,KAAA+nE,YACA/nE,KAAA0oE,iBACAmB,EAAAF,EAAAM,gBAAAjqE,KAAAooE,OAGAyB,EAAAF,EAAAO,eAAAlqE,KAAAooE,QAGAyB,GAQAtwC,EAAAovC,0BACAO,kBAAA,KACAC,iBAAA,KACAC,gBAAA,KACAC,eAAA,KACAC,MAAA,IACAE,UAAA,KACAZ,eAAA,IACAI,gBAAA,IACAS,MAAA,KAQAlwC,EAAAqwC,uBACAE,SAAA,UACAtzD,eAAA,YACAyxB,YAAA,SACA5sB,UAAA,OACA0uD,SAAA,UACAC,OAAA,QACAC,eAAA,eACAC,cAAA,eAOA3wC,EAAAC,QAAA,GAAAD,GACAA,IAEAt0B,GAAAs0B,e5G64jBM,SAAU99B,EAAQwJ,EAAStJ,GAEjC,Y6GlxkBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA4rE,GAAAnsE,EAAA,KACAguB,EAAAhuB,EAAA,KACAoZ,EAAApZ,EAAA,KACAwN,EAAAxN,EAAA,KACAiiC,EAAAjiC,EAAA,KAOA+tE,EAAA,WAIA,QAAAA,GAAA9iC,GACA5mC,KAAAmqE,cAAA,GAAArC,GAAA3hB,aAAAvf,GACA5mC,KAAAq7B,OAAAuL,EAAAtI,WACAt+B,KAAAooE,OAAAxhC,EAAAiiC,WACA7oE,KAAAoqE,UAAAxjC,EAAA8hC,iBA0NA,MArNAgB,GAAA5sE,UAAA6b,YAAA,SAAAqb,EAAAv1B,EAAAk+B,EAAA1I,EAAA6J,EAAAC,GAIA,MAHA/9B,MAAAmqE,cAAAxjB,QAAA,GAAA5xC,GAAAiB,UAAAvX,EAAAk+B,MACAA,EAAAhT,EAAA3S,aAAAP,YAEAud,EAAAnc,kBAAApZ,GAAAkV,OAAAgpB,GAEA3I,EAEAA,EAAAnb,cAAA7Y,KAAAooE,OACApoE,KAAAmqE,cACA9rC,mBACA1lB,YAAAqb,EAAAv1B,EAAAk+B,EAAA1I,EAAA6J,EAAAC,GAGA/9B,KAAAqqE,sBAAAr2C,EAAAv1B,EAAAk+B,EAAAmB,EAAAC,IAMA2rC,EAAA5sE,UAAAohC,eAAA,SAAAxV,EAAAyV,EAAAJ,GACA,GAAAkT,EACA,IAAA9S,EAAAzmB,cAAAymB,EAAAr2B,UAEAmpC,EAAAtnB,EAAA3S,aAAAP,WAAA2E,UAAApb,KAAAq7B,YAGA,MAAAr7B,KAAAooE,OAAAjqC,EAAAtlB,eACAslB,EAAA3iB,UAAAxb,KAAAq7B,QAAA,CAEA4V,EAAAtnB,EAAA3S,aAAAP,WAAA2E,UAAApb,KAAAq7B,OAEA,IAAAzgB,OAAA,EAEAA,GADA5a,KAAAoqE,SACAjsC,EAAAjjB,uBAAAlb,KAAAmqE,cAAAzjB,aAAA1mD,KAAAq7B,QAGA8C,EAAAzjB,gBAAA1a,KAAAmqE,cAAA1jB,eAAAzmD,KAAAq7B,OAGA,KADA,GAAAviB,GAAA,EACA8B,EAAA4S,WAAA1U,EAAA9Y,KAAAooE,QAAA,CACA,GAAAttD,GAAAF,EAAAI,UACAsvD,MAAA,EASA,MAPAA,EADAtqE,KAAAoqE,SAEApqE,KAAAq7B,OAAAjmB,QAAApV,KAAAmqE,cAAA1jB,eAAA3rC,IAAA,EAIA9a,KAAAq7B,OAAAjmB,QAAA0F,EAAA9a,KAAAmqE,cAAAzjB,eAAA,GAQA,KALAzV,KAAA/4B,qBAAA4C,EAAA5Y,KAAA4Y,EAAAxF,MACAwD,SAQA,CAEAm4B,EAAA9S,EAAA/iB,UAAApb,KAAAq7B,QAEA4V,IAAAt5B,eAAAgS,EAAA3S,aAAAP,WACA,IAAAkE,OAAA,GACAQ,MAAA,GACAzH,MAAA,GACAkH,MAAA,EACA,IAAA5a,KAAAoqE,SAAA,CACAxvD,EAAAq2B,EAAAh2B,mBAAAjb,KAAAq7B,QACA1gB,EAAA3a,KAAAmqE,cAAAzjB,aACAvrC,EAAAnb,KAAAmqE,cAAA1jB,cACA,IAAA8jB,GAAAvqE,KAAAq7B,OAAA5Q,YACA/W,GAAA,SAAA3R,EAAAuL,GAA2C,MAAAi9D,GAAAj9D,EAAAvL,QAG3C6Y,GAAAq2B,EAAAx2B,YAAAza,KAAAq7B,QACA1gB,EAAA3a,KAAAmqE,cAAA1jB,eACAtrC,EAAAnb,KAAAmqE,cAAAzjB,aACAhzC,EAAA1T,KAAAq7B,OAAA5Q,YAIA,KAFA,GAAA3R,GAAA,EACA0xD,GAAA,EACA5vD,EAAA4S,WAAA,CACA,GAAA1S,GAAAF,EAAAI,WACAwvD,GAAA92D,EAAAiH,EAAAG,IAAA,IAEA0vD,GAAA,EAEA,IAAAF,GAAAE,GAAA1xD,EAAA9Y,KAAAooE,QAAA10D,EAAAoH,EAAAK,IAAA,CACAmvD,GACAxxD,IAGAm4B,IAAA/4B,qBAAA4C,EAAA5Y,KAAAynB,EAAA3S,aAAAP,aAKA,MAAAzW,MAAAmqE,cACA9rC,mBACAH,eAAAxV,EAAAuoB,EAAAlT,IAKA2rC,EAAA5sE,UAAA6a,eAAA,SAAA+Q,EAAAnQ,GAEA,MAAAmQ,IAKAghD,EAAA5sE,UAAAshC,aAAA,WACA,UAKAsrC,EAAA5sE,UAAAuhC,iBAAA,WACA,MAAAr+B,MAAAmqE,cAAA9rC,oBAKAqrC,EAAA5sE,UAAAwhC,SAAA,WACA,MAAAt+B,MAAAq7B,QAWAquC,EAAA5sE,UAAAutE,sBAAA,SAAAr2C,EAAAhL,EAAAmT,EAAA2B,EAAA2sC,GAEA,GAAA/2D,EACA,IAAA1T,KAAAoqE,SAAA,CACA,GAAAM,GAAA1qE,KAAAq7B,OAAA5Q,YACA/W,GAAA,SAAA3R,EAAAuL,GAAmC,MAAAo9D,GAAAp9D,EAAAvL,QAGnC2R,GAAA1T,KAAAq7B,OAAA5Q,YAEA,IAAAm1C,GAAA5rC,CACA7qB,GAAAhE,OAAAy6D,EAAA/mD,eAAA7Y,KAAAooE,OAAA,GACA,IAAAuC,GAAA,GAAA51D,GAAAiB,UAAAgT,EAAAmT,GACAyuC,EAAA5qE,KAAAoqE,SACAxK,EAAAzlD,cAAAna,KAAAq7B,QACAukC,EAAAvlD,aAAAra,KAAAq7B,QACAivC,EAAAtqE,KAAAmqE,cAAAxjB,QAAAgkB,EACA,IAAA/K,EAAA3nD,SAAA+Q,GAAA,CAGA,IAFA,GAAA6hD,GAAAjL,EAAA/nD,kBAAAmR,GACAqU,EAAAS,EAAAoiC,mBAAAlgE,KAAAq7B,OAAAuvC,EAAA5qE,KAAAoqE,UACA,MAAA/sC,IACAA,EAAAn7B,MAAA8mB,GAAA42C,EAAA3nD,SAAAolB,EAAAn7B,QAIAm7B,EAAAS,EAAAoiC,mBAAAlgE,KAAAq7B,OAAAgC,EAAAr9B,KAAAoqE,SAEA,IAAAU,GAAA,MAAAztC,EAAA,EAAA3pB,EAAA2pB,EAAAstC,EAEA,IADAL,IAAAnuC,EAAAr0B,WAAAgjE,GAAA,EAKA,MAHA,OAAAL,GACAA,EAAAxsC,iBAAAL,EAAApV,OAAAY,mBAAAJ,EAAAmT,EAAA0uC,IAEAjL,EAAA1nD,qBAAA8Q,EAAAmT,EAGA,OAAAsuC,GACAA,EAAAxsC,iBAAAL,EAAApV,OAAAU,mBAAAF,EAAA6hD,GAEA,IAAA5P,GAAA2E,EAAA1nD,qBAAA8Q,EAAAW,EAAA3S,aAAAP,WAEA,OADA,OAAA4mB,GAAAr9B,KAAAmqE,cAAAxjB,QAAAtpB,IAEA,MAAAotC,GACAA,EAAAxsC,iBAAAL,EAAApV,OAAAO,iBAAAsU,EAAAn7B,KAAAm7B,EAAA/nB,OAEA2lD,EAAA/iD,qBAAAmlB,EAAAn7B,KAAAm7B,EAAA/nB,OAGA2lD,EAIA,MAAA9+B,GAAAr0B,UAEAksB,EAEAs2C,GACA52D,EAAAk3D,EAAAD,IAAA,GACA,MAAAF,IACAA,EAAAxsC,iBAAAL,EAAApV,OAAAU,mBAAA0hD,EAAA1oE,KAAA0oE,EAAAt1D,OACAm1D,EAAAxsC,iBAAAL,EAAApV,OAAAO,iBAAAC,EAAAmT,KAEAyjC,EACA1nD,qBAAA8Q,EAAAmT,GACAjkB,qBAAA0yD,EAAA1oE,KAAAynB,EAAA3S,aAAAP,aAOAud,GAGA01C,IAEAzkE,GAAAykE,iB7G0ykBM,SAAUjuE,EAAQwJ,EAAStJ,GAEjC,Y8G5hlBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAoBA6uE,GApBA5hE,EAAAxN,EAAA,KACAmnC,EAAAnnC,EAAA,KACAg3D,EAAAh3D,EAAA,KACAonB,EAAApnB,EAAA,KACAqvE,EAAArvE,EAAA,KACAib,EAAAjb,EAAA,KACAyN,EAAAzN,EAAA,KACAuzB,EAAAvzB,EAAA,KACA+M,EAAA/M,EAAA,KACA0N,EAAA1N,EAAA,KACAwzB,EAAAxzB,EAAA,KACAguB,EAAAhuB,EAAA,KACAu9B,EAAAv9B,EAAA,MASA,SAAAovE,GAIAA,IAAA,aAGAA,IAAA,eAGAA,IAAA,yBAGAA,IAAA,uCAEAA,IAAA,8BACCA,EAAA9lE,EAAA8lE,oBAAA9lE,EAAA8lE,uBAQD7xC,EAAAnJ,KAAAk7C,yBAAA,GAKA/xC,EAAAnJ,KAAAjzB,UAAAi1B,mBAAA,WAOA/xB,KAAAkrE,sBAAA,GAAAF,GAAAG,MAUAjyC,EAAAnJ,KAAAjzB,UAAA29B,iBAAA,SAAA9pB,EAAAypB,EAAA7H,EAAA8H,GACAr6B,KAAA20B,KAAA,kBAAAhkB,EAEA,IAAAw4B,GAAA,aACAiiC,EAAA,GAAAtoC,GAAAzJ,UAAAr5B,KAAA2Q,EACAy6D,GAAA7iC,GAAA,QAAAY,EACA,IAAAkiC,GAAA,WACAD,EAAAliC,IAAA,QAAAC,IAGAhP,GACAxpB,OACAzG,OAAAkwB,EACA7H,aAEA1wB,OAAA,KAEAypE,MAAAliE,EAAAU,gBAEAuwB,eAEAkxC,WAAA,EAEAF,YAEAG,YAAA,KACAC,eAAA,KACAC,qBAAA,KACAC,yBAAA,KACAC,8BAAA,MAGAC,EAAA7rE,KAAA8rE,gBAAAn7D,EACAwpB,GAAAuxC,qBAAAG,CACA,IAAAn3C,GAAAyF,EAAAjwB,OAAA2hE,EAAAr9D,MACA,QAAAqV,KAAA6Q,GAKA,GAHAyF,EAAAkxC,YACAlxC,EAAAwxC,yBAAA,KACAxxC,EAAAyxC,8BAAA,KACAzxC,EAAA5H,WAAA,CAEA,GAAA1J,GAAA,GAAA8pC,GAAAx3B,aAAAhB,EAAAuxC,qBAAA,GAAA5oC,GAAAzJ,UAAAr5B,KAAAm6B,EAAAxpB,MAAAiG,EAAAJ,eACA2jB,GAAA5H,WAAA,QAAA1J,QAGA,CACAngB,EAAAob,qBAAA,qCAAA4Q,EAAAyF,EAAAxpB,MAEAwpB,EAAAt4B,OAAAkpE,EAAAgB,GACA,IAAAC,GAAAhsE,KAAAkrE,sBAAAe,QAAAt7D,GACAu7D,EAAAF,EAAAv/C,cACAy/C,GAAA7qE,KAAA84B,GACA6xC,EAAA5kD,SAAA8kD,EAIA,IAAAC,OAAA,EACA,qBAAAz3C,IACA,OAAAA,GACArrB,EAAAhC,SAAAqtB,EAAA,aACAy3C,EAAA9iE,EAAApB,QAAAysB,EAAA,aACAvrB,EAAAhE,OAAAuD,EAAA6a,gBAAA4oD,GAAA,wHAGA,CAGAA,GAFAnsE,KAAA6yB,gBAAA2c,uBAAA7+B,IACAgZ,EAAA3S,aAAAP,YACAlB,cAAA/G,MAEA29D,EAAsDA,CACtD,IAAAv3C,GAAA50B,KAAAszB,uBACAuB,EAAA1F,EAAAza,aAAAggB,EAAAy3C,GACAr2D,EAAAoZ,EAAA4F,6BAAAD,EAAAD,EACAuF,GAAAwxC,yBAAA92C,EACAsF,EAAAyxC,8BAAA91D,EACAqkB,EAAAsxC,eAAAzrE,KAAAw0B,iBACA,IAAAzB,GAAA/yB,KAAA6yB,gBAAAmC,mBAAArkB,EAAAmF,EAAAqkB,EAAAsxC,eAAAtxC,EAAAE,aACAr6B,MAAAqwB,YAAA2C,0BAAAriB,EAAAoiB,GACA/yB,KAAAosE,2BASAlzC,EAAAnJ,KAAAjzB,UAAAgvE,gBAAA,SAAAn7D,EAAA07D,GACA,MAAArsE,MAAA6yB,gBAAA2c,uBAAA7+B,EAAA07D,IACA1iD,EAAA3S,aAAAP,YAYAyiB,EAAAnJ,KAAAjzB,UAAAsvE,uBAAA,SAAA92D,GACA,GAAAxV,GAAAE,IAMA,QALA,KAAAsV,IAA0BA,EAAAtV,KAAAkrE,uBAE1B51D,GACAtV,KAAAssE,qCAAAh3D,GAEA,OAAAA,EAAAmX,WAAA,CACA,GAAA8/C,GAAAvsE,KAAAwsE,uBAAAl3D,EACAnM,GAAAhE,OAAAonE,EAAAhuE,OAAA,0CACAguE,GAAAjlE,MAAA,SAAA6yB,GAAyD,MAAAA,GAAAt4B,SAAAkpE,EAAAgB,OAGzD/rE,KAAAysE,sBAAAn3D,EAAA3E,OAAA47D,OAGAj3D,GAAAsmB,eACAtmB,EAAA6D,aAAA,SAAAC,GACAtZ,EAAAssE,uBAAAhzD,MAWA8f,EAAAnJ,KAAAjzB,UAAA2vE,sBAAA,SAAA97D,EAAA47D,GASA,OARAzsE,GAAAE,KAEA0sE,EAAAH,EAAAvkE,IAAA,SAAA2kE,GACA,MAAAA,GAAAlB,iBAEAmB,EAAA5sE,KAAA8rE,gBAAAn7D,EAAA+7D,GACAG,EAAAD,EACAE,EAAAF,EAAAtzD,OACAhb,EAAA,EAAmBA,EAAAiuE,EAAAhuE,OAAkBD,IAAA,CACrC,GAAAquE,GAAAJ,EAAAjuE,EACA6K,GAAAhE,OAAAwnE,EAAA9qE,SAAAkpE,EAAAgB,IAAA,iEACAY,EAAA9qE,OAAAkpE,EAAAgC,KACAJ,EAAApB,YACA,IAAAv4D,GAAA+P,EAAArR,KAAAsB,aAAArC,EAAAg8D,EAAAh8D,KAEAk8D,KAAAl0D,YAAA3F,EAAyE25D,EAAAhB,0BAEzE,GAAAqB,GAAAH,EAAAr+D,KAAA,GACAy+D,EAAAt8D,CAEA3Q,MAAAixB,QAAAiE,IAAA+3C,EAAAl9D,WAAAi9D,EAAA,SAAAnrE,GACA/B,EAAA60B,KAAA,4BACAhkB,KAAAs8D,EAAAl9D,WACAlO,UAEA,IAAAkxB,KACA,WAAAlxB,EAAA,CAIA,OADA+mC,MACAtqC,EAAA,EAA2BA,EAAAiuE,EAAAhuE,OAAkBD,IAAA,CAG7C,GAFAiuE,EAAAjuE,GAAAuD,OAAAkpE,EAAAmC,UACAn6C,IAAAv3B,OAAAsE,EAAA+yB,gBAAAyC,aAAAi3C,EAAAjuE,GAAAmtE,iBACAc,EAAAjuE,GAAAi0B,WAAA,CAEA,GAAAjd,GAAAi3D,EAAAjuE,GAAAstE,8BACAxqE,EAAA,GAAA0hC,GAAAzJ,UAAAv5B,EAAAysE,EAAAjuE,GAAAqS,MACAkY,EAAA,GAAA8pC,GAAAx3B,aAAA7lB,EAAAlU,EAAAwV,EAAAJ,eACAoyB,GAAAvnC,KAAAkrE,EAAAjuE,GAAAi0B,WAAApnB,KAAA,aAAA0d,IAEA0jD,EAAAjuE,GAAA+sE,YAGAvrE,EAAAwsE,qCAAAxsE,EAAAorE,sBAAAe,QAAAt7D,IAEA7Q,EAAAssE,yBACAtsE,EAAAuwB,YAAA2C,0BAAAriB,EAAAoiB,EAEA,QAAAz0B,GAAA,EAA2BA,EAAAsqC,EAAArqC,OAAsBD,IACjD8K,EAAA4H,eAAA43B,EAAAtqC,QAGA,CAEA,iBAAAuD,EACA,OAAAvD,GAAA,EAA+BA,EAAAiuE,EAAAhuE,OAAkBD,IACjDiuE,EAAAjuE,GAAAuD,SAAAkpE,EAAAoC,iBACAZ,EAAAjuE,GAAAuD,OAAAkpE,EAAAqC,YAEAb,EAAAjuE,GAAAuD,OAAAkpE,EAAAgB,QAGA,CACA3iE,EAAAwC,KAAA,kBAAAqhE,EAAAl9D,WAAA,YAAAlO,EACA,QAAAvD,GAAA,EAA+BA,EAAAiuE,EAAAhuE,OAAkBD,IACjDiuE,EAAAjuE,GAAAuD,OAAAkpE,EAAAqC,YACAb,EAAAjuE,GAAAktE,YAAA3pE,EAGA/B,EAAAo0B,mBAAAvjB,KAEKm8D,IAcL5zC,EAAAnJ,KAAAjzB,UAAAo3B,mBAAA,SAAA8B,GACA,GAAAq3C,GAAArtE,KAAAstE,4BAAAt3C,GACArlB,EAAA08D,EAAA18D,OACA47D,EAAAvsE,KAAAwsE,uBAAAa,EAEA,OADArtE,MAAAutE,uBAAAhB,EAAA57D,GACAA,GASAuoB,EAAAnJ,KAAAjzB,UAAAywE,uBAAA,SAAAhB,EAAA57D,GACA,OAAA47D,EAAAhuE,OAAA,CAcA,OATAqqC,MACA7V,KAEAy6C,EAAAjB,EAAA/7B,OAAA,SAAA9wB,GACA,MAAAA,GAAA7d,SAAAkpE,EAAAgB,MAEAW,EAAAc,EAAAxlE,IAAA,SAAA0X,GACA,MAAAA,GAAA+rD,iBAEAntE,EAAA,EAAmBA,EAAAiuE,EAAAhuE,OAAkBD,IAAA,CACrC,GAAA67B,GAAAoyC,EAAAjuE,GACA0U,EAAA+P,EAAArR,KAAAsB,aAAArC,EAAAwpB,EAAAxpB,MACA88D,GAAA,EAAAjC,MAAA,EAEA,IADAriE,EAAAhE,OAAA,OAAA6N,EAAA,iEACAmnB,EAAAt4B,SAAAkpE,EAAAqC,YACAK,GAAA,EACAjC,EAAArxC,EAAAqxC,YACAz4C,IAAAv3B,OAAAwE,KAAA6yB,gBAAAyC,aAAA6E,EAAAsxC,gBAAA,QAEA,IAAAtxC,EAAAt4B,SAAAkpE,EAAAgB,IACA,GAAA5xC,EAAAoxC,YAAAryC,EAAAnJ,KAAAk7C,yBACAwC,GAAA,EACAjC,EAAA,WACAz4C,IAAAv3B,OAAAwE,KAAA6yB,gBAAAyC,aAAA6E,EAAAsxC,gBAAA,QAEA,CAEA,GAAAiC,GAAA1tE,KAAA8rE,gBAAA3xC,EAAAxpB,KAAA+7D,EACAvyC,GAAAuxC,qBAAAgC,CACA,IAAA3X,GAAAwW,EAAAjuE,GAAA4L,OAAAwjE,EAAAl/D,MACA,QAAAqV,KAAAkyC,EAAA,CACArtD,EAAAob,qBAAA,qCAAAiyC,EAAA57B,EAAAxpB,KACA,IAAAg9D,GAAAx+C,EAAAza,aAAAqhD,GACA6X,EAAA,iBAAA7X,IACA,MAAAA,GACA1sD,EAAAhC,SAAA0uD,EAAA,YACA6X,KAEAD,IAAAh2D,eAAA+1D,EAAAn4D,eAEA,IAAAs4D,GAAA1zC,EAAAsxC,eACA72C,EAAA50B,KAAAszB,uBACAw6C,EAAA5+C,EAAA4F,6BAAA64C,EAAA/4C,EACAuF,GAAAwxC,yBAAAgC,EACAxzC,EAAAyxC,8BAAAkC,EACA3zC,EAAAsxC,eAAAzrE,KAAAw0B,kBAEAk4C,EAAAzzB,OAAAyzB,EAAA3gE,QAAA8hE,GAAA,GACA96C,IAAAv3B,OAAAwE,KAAA6yB,gBAAAmC,mBAAAmF,EAAAxpB,KAAAm9D,EAAA3zC,EAAAsxC,eAAAtxC,EAAAE,eACAtH,IAAAv3B,OAAAwE,KAAA6yB,gBAAAyC,aAAAu4C,GAAA,QAGAJ,IAAA,EACAjC,EAAA,SACAz4C,IAAAv3B,OAAAwE,KAAA6yB,gBAAAyC,aAAA6E,EAAAsxC,gBAAA,IAMA,GAFAzrE,KAAAqwB,YAAA2C,0BAAAriB,EAAAoiB,GACAA,KACA06C,IAEAlB,EAAAjuE,GAAAuD,OAAAkpE,EAAAmC,UAGA,SAAA7B,GACAv+D,WAAAu+D,EAAAt+D,KAAAC,MAAA,KACau/D,EAAAjuE,GAAA+sE,WACbkB,EAAAjuE,GAAAi0B,YACA,cAAAi5C,EAAA,CACA,GAAApqE,GAAA,GAAA0hC,GAAAzJ,UAAAr5B,KAAAusE,EAAAjuE,GAAAqS,MAEAo9D,EAAmDxB,EAAAjuE,GAAAotE,qBACnD7iD,EAAA,GAAA8pC,GAAAx3B,aAAA4yC,EAAA3sE,EAAAwV,EAAAJ,eACAoyB,GAAAvnC,KAAAkrE,EAAAjuE,GAAAi0B,WAAApnB,KAAA,aAAA0d,QAGA+f,GAAAvnC,KAAAkrE,EAAAjuE,GAAAi0B,WAAApnB,KAAA,QAAAQ,OAAA6/D,IAAA,SAMAxrE,KAAAssE,qCAAAtsE,KAAAkrE,sBAEA,QAAA5sE,GAAA,EAAmBA,EAAAsqC,EAAArqC,OAAsBD,IACzC8K,EAAA4H,eAAA43B,EAAAtqC,GAGA0B,MAAAosE,2BAUAlzC,EAAAnJ,KAAAjzB,UAAAwwE,4BAAA,SAAA38D,GAIA,IAHA,GAAAqH,GAEAg2D,EAAAhuE,KAAAkrE,sBACA,QAAAlzD,EAAArH,EAAAsB,aACA,OAAA+7D,EAAAvhD,YACAuhD,IAAA/B,QAAAj0D,GACArH,IAAAwB,UAEA,OAAA67D,IASA90C,EAAAnJ,KAAAjzB,UAAA0vE,uBAAA,SAAAwB,GAEA,GAAAC,KAMA,OALAjuE,MAAAkuE,mCAAAF,EAAAC,GAEAA,EAAAjgE,KAAA,SAAAjM,EAAAuL,GACA,MAAAvL,GAAAupE,MAAAh+D,EAAAg+D,QAEA2C,GAOA/0C,EAAAnJ,KAAAjzB,UAAAoxE,mCAAA,SAAA54D,EAAAi3D,GACA,GAAAzsE,GAAAE,KACAksE,EAAA52D,EAAAmX,UACA,WAAAy/C,EACA,OAAA5tE,GAAA,EAAuBA,EAAA4tE,EAAA3tE,OAAsBD,IAC7CiuE,EAAAlrE,KAAA6qE,EAAA5tE,GAGAgX,GAAA6D,aAAA,SAAAtG,GACA/S,EAAAouE,mCAAAr7D,EAAA05D,MASArzC,EAAAnJ,KAAAjzB,UAAAwvE,qCAAA,SAAAh3D,GACA,GAAAxV,GAAAE,KACAusE,EAAAj3D,EAAAmX,UACA,IAAA8/C,EAAA,CAEA,OADAjoE,GAAA,EACA6pE,EAAA,EAA0BA,EAAA5B,EAAAhuE,OAAqB4vE,IAC/C5B,EAAA4B,GAAAtsE,SAAAkpE,EAAAmC,YACAX,EAAAjoE,GAAAioE,EAAA4B,GACA7pE,IAGAioE,GAAAhuE,OAAA+F,EACAgR,EAAA8R,SAAAmlD,EAAAhuE,OAAA,EAAAguE,EAAA,MAEAj3D,EAAA6D,aAAA,SAAAC,GACAtZ,EAAAwsE,qCAAAlzD,MAWA8f,EAAAnJ,KAAAjzB,UAAA04B,mBAAA,SAAA7kB,GACA,GAAA7Q,GAAAE,KACAi0B,EAAAj0B,KAAAstE,4BAAA38D,UACAq9D,EAAAhuE,KAAAkrE,sBAAAe,QAAAt7D,EAQA,OAPAq9D,GAAAI,gBAAA,SAAA94D,GACAxV,EAAAuuE,yBAAA/4D,KAEAtV,KAAAquE,yBAAAL,GACAA,EAAAM,kBAAA,SAAAh5D,GACAxV,EAAAuuE,yBAAA/4D,KAEA2e,GAQAiF,EAAAnJ,KAAAjzB,UAAAuxE,yBAAA,SAAA/4D,GACA,GAAAi3D,GAAAj3D,EAAAmX,UACA,WAAA8/C,EAAA,CAQA,OALA3jC,MAGA7V,KACAw7C,GAAA,EACAjwE,EAAA,EAAuBA,EAAAiuE,EAAAhuE,OAAkBD,IACzC,GAAAiuE,EAAAjuE,GAAAuD,SAAAkpE,EAAAoC,sBAGA,IAAAZ,EAAAjuE,GAAAuD,SAAAkpE,EAAAgC,KACA5jE,EAAAhE,OAAAopE,IAAAjwE,EAAA,qDACAiwE,EAAAjwE,EAEAiuE,EAAAjuE,GAAAuD,OAAAkpE,EAAAoC,iBACAZ,EAAAjuE,GAAAktE,YAAA,UAOA,IAJAriE,EAAAhE,OAAAonE,EAAAjuE,GAAAuD,SAAAkpE,EAAAgB,IAAA,0CAEAQ,EAAAjuE,GAAA+sE,YACAt4C,IAAAv3B,OAAAwE,KAAA6yB,gBAAAyC,aAAAi3C,EAAAjuE,GAAAmtE,gBAAA,IACAc,EAAAjuE,GAAAi0B,WAAA,CAEAqW,EAAAvnC,KAAAkrE,EAAAjuE,GAAAi0B,WAAApnB,KAAA,QAAAQ,OAAA,UADA,QAKA,IAAA4iE,EAEAj5D,EAAA8R,SAAA,MAIAmlD,EAAAhuE,OAAAgwE,EAAA,EAGAvuE,KAAAqwB,YAAA2C,0BAAA1d,EAAA3E,OAAAoiB,EACA,QAAAz0B,GAAA,EAAuBA,EAAAsqC,EAAArqC,OAAsBD,IAC7C8K,EAAA4H,eAAA43B,EAAAtqC,O9GujlBM,SAAU7C,EAAQwJ,EAAStJ,GAEjC,Y+GxlmBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAiN,GAAAxN,EAAA,KACAonB,EAAApnB,EAAA,KACAyN,EAAAzN,EAAA,KAIA6yE,EAAA,WACA,QAAAA,KAGAxuE,KAAAqhB,YACArhB,KAAAyuE,WAAA,EACAzuE,KAAA9D,MAAA,KAEA,MAAAsyE,KAEAvpE,GAAAupE,UAMA,IAAArD,GAAA,WAOA,QAAAA,GAAA9d,EAAAqhB,EAAAt2C,OACA,KAAAi1B,IAA+BA,EAAA,QAC/B,KAAAqhB,IAAiCA,EAAA,UACjC,KAAAt2C,IAA+BA,EAAA,GAAAo2C,IAC/BxuE,KAAAqtD,QACArtD,KAAA0uE,UACA1uE,KAAAo4B,QA0KA,MAlKA+yC,GAAAruE,UAAAmvE,QAAA,SAAA0C,GAIA,IAFA,GACA7zD,GADAnK,EAAAg+D,YAAA5rD,GAAArR,KAAAi9D,EAAA,GAAA5rD,GAAArR,KAAAi9D,GACA97D,EAAA7S,KACA,QAAA8a,EAAAnK,EAAAsB,aAAA,CAEAY,EAAA,GAAAs4D,GAAArwD,EAAAjI,EADAzJ,EAAAnB,QAAA4K,EAAAulB,MAAA/W,SAAAvG,IAAA,GAAA0zD,IAEA79D,IAAAwB,WAEA,MAAAU,IAOAs4D,EAAAruE,UAAA2vB,SAAA,WACA,MAAAzsB,MAAAo4B,MAAAl8B,OAOAivE,EAAAruE,UAAAsqB,SAAA,SAAAlrB,GACAiN,EAAAhE,OAAA,oBAAAjJ,GAAA,iCACA8D,KAAAo4B,MAAAl8B,QACA8D,KAAA4uE,kBAKAzD,EAAAruE,UAAAwxC,MAAA,WACAtuC,KAAAo4B,MAAAl8B,MAAA,KACA8D,KAAAo4B,MAAA/W,YACArhB,KAAAo4B,MAAAq2C,WAAA,EACAzuE,KAAA4uE,kBAKAzD,EAAAruE,UAAA8+B,YAAA,WACA,MAAA57B,MAAAo4B,MAAAq2C,WAAA,GAKAtD,EAAAruE,UAAAgL,QAAA,WACA,cAAA9H,KAAAysB,aAAAzsB,KAAA47B,eAOAuvC,EAAAruE,UAAAqc,aAAA,SAAAmB,GACA,GAAAxa,GAAAE,IACAoJ,GAAA1B,QAAA1H,KAAAo4B,MAAA/W,SAAA,SAAAxO,EAAA4pB,GACAniB,EAAA,GAAA6wD,GAAAt4D,EAAA/S,EAAA28B,OAYA0uC,EAAAruE,UAAAwxE,kBAAA,SAAAh0D,EAAAu0D,EAAAC,GACAD,IAAAC,GACAx0D,EAAAta,MACAA,KAAAmZ,aAAA,SAAAtG,GACAA,EAAAy7D,kBAAAh0D,GAAA,EAAAw0D,KAEAD,GAAAC,GACAx0D,EAAAta,OAUAmrE,EAAAruE,UAAAsxE,gBAAA,SAAA9zD,EAAAu0D,GAEA,IADA,GAAAv5D,GAAAu5D,EAAA7uE,UAAA2S,SACA,OAAA2C,GAAA,CACA,GAAAgF,EAAAhF,GACA,QAEAA,KAAA3C,SAEA,UASAw4D,EAAAruE,UAAAiyE,oCAAA,SAAAz0D,GACAta,KAAAmZ,aAAA,SAAAtG,GACA,OAAAA,EAAA4Z,WACAnS,EAAAzH,GAEAA,EAAAk8D,oCAAAz0D,MAMA6wD,EAAAruE,UAAA6T,KAAA,WACA,UAAAoS,GAAArR,KAAA,OAAA1R,KAAA0uE,QACA1uE,KAAAqtD,MACArtD,KAAA0uE,QAAA/9D,OAAA,IAAA3Q,KAAAqtD,QAKA8d,EAAAruE,UAAAoF,KAAA,WACA,MAAAlC,MAAAqtD,OAKA8d,EAAAruE,UAAA6V,OAAA,WACA,MAAA3S,MAAA0uE,SAOAvD,EAAAruE,UAAA8xE,eAAA,WACA,OAAA5uE,KAAA0uE,SACA1uE,KAAA0uE,QAAAM,aAAAhvE,KAAAqtD,MAAArtD,OASAmrE,EAAAruE,UAAAkyE,aAAA,SAAAl3D,EAAAjF,GACA,GAAAo8D,GAAAp8D,EAAA/K,UACAonE,EAAA9lE,EAAA/B,SAAArH,KAAAo4B,MAAA/W,SAAAvJ,EACAm3D,IAAAC,SACAlvE,MAAAo4B,MAAA/W,SAAAvJ,GACA9X,KAAAo4B,MAAAq2C,aACAzuE,KAAA4uE,kBAEAK,GAAAC,IACAlvE,KAAAo4B,MAAA/W,SAAAvJ,GAAAjF,EAAAulB,MACAp4B,KAAAo4B,MAAAq2C,aACAzuE,KAAA4uE,mBAGAzD,IAEAlmE,GAAAkmE,Q/GgnmBM,SAAU1vE,EAAQwJ,EAAStJ,GAEjC,YgHl0mBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAA8pE,GAAArqE,EAAA,KACAoqE,EAAApqE,EAAA,IAQAsJ,GAAAkqE,iBAAA,WACAnJ,EAAAziB,oBAAA3D,gBACAmmB,EAAAhoB,sBAAA2B,cAEAz6C,EAAAmqE,gBAAA,WACArJ,EAAAhoB,sBAAA6B,iBAGA36C,EAAAihE,sBAAA,WACA,MAAAF,GAAAziB,oBAAA,eAEAt+C,EAAAoqE,yBAAA,SAAAjuE,EAAAsN,GACAtN,EAAAk4B,KAAA3I,sBAAAmiB,uBAAApkC,GAEAzJ,EAAAmyB,MAAA,SAAAh2B,EAAAi2B,GACAj2B,EAAAk4B,KAAAlC,MAAAC,IAEApyB,EAAA4yB,sBAAA,SAAAz2B,EAAA02B,GACA12B,EAAAk4B,KAAAzB,sBAAAC,IAEA7yB,EAAAkrB,gBAAA,SAAA/uB,GACA,MAAAA,GAAAk4B,KAAAnJ,iBAEAlrB,EAAAqqE,oBAAA,SAAAluE,EAAAsN,GACA,MAAAtN,GAAAk4B,KAAAnF,qBAAAzlB,KhH21mBM,SAAUjT,EAAQwJ,EAAStJ,GAEjC,YiH/3mBAI,QAAAuB,eAAA2H,EAAA,cAA8C/I,OAAA,GAC9C,IAAAmpC,GAAA1pC,EAAA,KACAi0B,EAAAj0B,EAAA,KACAonC,EAAApnC,EAAA,KACAo2C,EAAAp2C,EAAA,IACAsJ,GAAAsqE,eAAA3/C,EAAA2B,qBAKA3B,EAAA2B,qBAAAz0B,UAAA0yE,aAAA,SAAAn9D,EAAAkgB,GACAvyB,KAAAg0C,YAAA,KAA2BhvC,EAAAqN,GAAgBkgB,IAM3C3C,EAAA2B,qBAAAz0B,UAAA2yE,KAAA,SAAAtjE,EAAAujE,GACA1vE,KAAAg0C,YAAA,QAA8B73B,EAAAhQ,GAAUujE,IAGxCzqE,EAAA0qE,mBAAA59B,EAAAgG,WAKA9yC,EAAA2qE,WAAA,SAAAC,GACA,GAAAC,GAAAlgD,EAAA2B,qBAAAz0B,UAAAo4B,GAOA,OANAtF,GAAA2B,qBAAAz0B,UAAAo4B,IAAA,SAAA7iB,EAAAlG,EAAA4jE,EAAAC,OACAnsD,KAAAmsD,IACAA,EAAAH,KAEAC,EAAArzE,KAAAuD,KAAAqS,EAAAlG,EAAA4jE,EAAAC,IAEA,WACApgD,EAAA2B,qBAAAz0B,UAAAo4B,IAAA46C,IAMA7qE,EAAAgrE,iBAAA5qC,EAAAO,SAKA3gC,EAAAwlC,gBAAA,SAAAh6B,GACA,MAAAA,GAAAg6B,mBAMAxlC,EAAAirE,QAAA,SAAAC,GACA,MAAAA,GAAA72C,KAAA3I,sBAAA4hB,UAOAttC,EAAAgrB,gBAAA,SAAAA,GACA8S,EAAAhE,YAAAG,cAAAjP,qBjHw5mBM,SAAUx0B,EAAQwJ,GkHt+mBxBxJ,EAAAwJ,SAAkB+lB,UAAYolD,OAAA,0CAAAC,WAAA,kCAAAC,YAAA,yCAAAC,UAAA,kBAAAC,cAAA,8BAAAC,kBAAA","file":"static/js/0.0e57c0dd.chunk.js","sourcesContent":["webpackJsonp([0],Array(130).concat([\n/* 130 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_transition_group__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_transition_group___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_transition_group__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_helmet__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Input__ = __webpack_require__(227);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_DecoderText__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_Button__ = __webpack_require__(141);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_Firebase__ = __webpack_require__(230);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_ScrollToTop__ = __webpack_require__(152);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _templateObject=_taggedTemplateLiteral(['\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  min-height: 100vh;\\n  width: 100%;\\n  padding-left: 80px;\\n\\n  @media (max-width: ',') {\\n    padding-left: 60px;\\n  }\\n\\n  @media (max-width: ',') {\\n    padding-left: 0;\\n  }\\n\\n  @media (max-width: ','), (max-height: ',') {\\n    padding-left: 0;\\n  }\\n'],['\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  min-height: 100vh;\\n  width: 100%;\\n  padding-left: 80px;\\n\\n  @media (max-width: ',') {\\n    padding-left: 60px;\\n  }\\n\\n  @media (max-width: ',') {\\n    padding-left: 0;\\n  }\\n\\n  @media (max-width: ','), (max-height: ',') {\\n    padding-left: 0;\\n  }\\n']),_templateObject2=_taggedTemplateLiteral(['\\n  max-width: 440px;\\n  width: 100%;\\n  padding: 40px 20px;\\n\\n  @media (max-width: ',') {\\n    padding: 120px 20px 40px;\\n    align-self: flex-start;\\n  }\\n'],['\\n  max-width: 440px;\\n  width: 100%;\\n  padding: 40px 20px;\\n\\n  @media (max-width: ',') {\\n    padding: 120px 20px 40px;\\n    align-self: flex-start;\\n  }\\n']),_templateObject3=_taggedTemplateLiteral(['\\n  font-size: 32px;\\n  font-weight: 500;\\n  margin-bottom: 40px;\\n  line-height: 1;\\n  margin-top: 0;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 90px, 0);\\n  opacity: 0;\\n  height: 32px;\\n\\n  ','\\n\\n  ','\\n'],['\\n  font-size: 32px;\\n  font-weight: 500;\\n  margin-bottom: 40px;\\n  line-height: 1;\\n  margin-top: 0;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 90px, 0);\\n  opacity: 0;\\n  height: 32px;\\n\\n  ','\\n\\n  ','\\n']),_templateObject4=_taggedTemplateLiteral(['\\n  margin-bottom: 80px;\\n  width: 100%;\\n  height: 1px;\\n  background: ',';\\n  position: relative;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 90px, 0);\\n  opacity: 0;\\n\\n  &:before {\\n    content: \\'\\';\\n    height: 10px;\\n    width: 90px;\\n    background: ',';\\n    position: absolute;\\n    bottom: 0;\\n    transform: translateY(100%);\\n    clip-path: polygon(\\n      0 0,\\n      100% 0,\\n      100% calc(100% - 10px),\\n      calc(100% - 10px) 100%,\\n      10px 100%,\\n      0 0\\n    );\\n  }\\n\\n  ','\\n\\n  ','\\n'],['\\n  margin-bottom: 80px;\\n  width: 100%;\\n  height: 1px;\\n  background: ',';\\n  position: relative;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 90px, 0);\\n  opacity: 0;\\n\\n  &:before {\\n    content: \\'\\';\\n    height: 10px;\\n    width: 90px;\\n    background: ',';\\n    position: absolute;\\n    bottom: 0;\\n    transform: translateY(100%);\\n    clip-path: polygon(\\n      0 0,\\n      100% 0,\\n      100% calc(100% - 10px),\\n      calc(100% - 10px) 100%,\\n      10px 100%,\\n      0 0\\n    );\\n  }\\n\\n  ','\\n\\n  ','\\n']),_templateObject5=_taggedTemplateLiteral(['\\n  padding-bottom: 40px;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n\\n  ','\\n'],['\\n  padding-bottom: 40px;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n\\n  ','\\n']),_templateObject6=_taggedTemplateLiteral(['\\n  margin-top: 20px;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-delay: ',';\\n  transition-duration: ',';\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n\\n  ','\\n\\n  ','\\n'],['\\n  margin-top: 20px;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-delay: ',';\\n  transition-duration: ',';\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n\\n  ','\\n\\n  ','\\n']),_templateObject7=_taggedTemplateLiteral(['\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 30px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n'],['\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 30px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n']),_templateObject8=_taggedTemplateLiteral(['\\n  font-weight: 500;\\n  font-size: 32px;\\n  margin: 0;\\n  text-align: center;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n'],['\\n  font-weight: 500;\\n  font-size: 32px;\\n  margin: 0;\\n  text-align: center;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n']),_templateObject9=_taggedTemplateLiteral(['\\n  font-size: 18px;\\n  text-align: center;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n'],['\\n  font-size: 18px;\\n  text-align: center;\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n\\n  ','\\n']),_templateObject10=_taggedTemplateLiteral(['\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n  padding-left: 3px;\\n\\n  ','\\n'],['\\n  transition-property: transform, opacity;\\n  transition-timing-function: ',';\\n  transition-duration: 0.8s;\\n  transition-delay: ','ms;\\n  transform: translate3d(0, 80px, 0);\\n  opacity: 0;\\n  padding-left: 3px;\\n\\n  ','\\n']);function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var prerender=window.location.port==='45678';var initDelay=300;var Contact=function(_PureComponent){_inherits(Contact,_PureComponent);function Contact(){var _ref;var _temp,_this,_ret;_classCallCheck(this,Contact);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=Contact.__proto__||Object.getPrototypeOf(Contact)).call.apply(_ref,[this].concat(args))),_this),_this.state={emailValue:'',messageValue:'',sending:false,complete:false},_this.updateEmail=function(event){_this.setState({emailValue:event.target.value});},_this.updateMessage=function(event){_this.setState({messageValue:event.target.value});},_this.onSubmit=function(event){var _this$state=_this.state,emailValue=_this$state.emailValue,messageValue=_this$state.messageValue,sending=_this$state.sending;event.preventDefault();if(!sending){_this.setState({sending:true});__WEBPACK_IMPORTED_MODULE_8__utils_Firebase__[\"a\" /* default */].database().ref('messages').push({email:emailValue,message:messageValue}).then(function(){_this.setState({complete:true,sending:false});}).catch(function(error){_this.setState({sending:false});alert(error);});}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(Contact,[{key:'render',value:function render(){var _this2=this;var status=this.props.status;var _state=this.state,emailValue=_state.emailValue,messageValue=_state.messageValue,sending=_state.sending,complete=_state.complete;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactWrapper,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9__utils_ScrollToTop__[\"a\" /* default */],{status:status}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_helmet__[\"Helmet\"],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('title',null,'Contact me'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('meta',{name:'description',content:'Please send me a message if you\\'re interested in discussing a project or even if you just want to say hello!'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_transition_group__[\"TransitionGroup\"],{component:__WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment},!complete&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_transition_group__[\"Transition\"],{appear:true,timeout:1600,mountOnEnter:true,unmountOnExit:true},function(status){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactForm,{autoComplete:'off',method:'post',onSubmit:_this2.onSubmit,role:'form'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactTitle,{status:status,delay:50},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__components_DecoderText__[\"a\" /* default */],{text:'Say hello',start:status==='entering'&&!prerender,offset:140})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactDivider,{status:status,delay:100}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactInput,{status:status,delay:200,onChange:_this2.updateEmail,label:'Your Email',id:'email',type:'email',hasValue:!!emailValue,value:emailValue,maxLength:320,required:true}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactInput,{status:status,delay:300,onChange:_this2.updateMessage,label:'Message',id:'message',hasValue:!!messageValue,value:messageValue,maxLength:2000,required:true,multiline:true}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactButton,{disabled:sending,sending:sending,loading:sending,status:status,delay:400,icon:'send',type:'submit'},'Send Message'));}),complete&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_transition_group__[\"Transition\"],{appear:true,timeout:0,mountOnEnter:true,unmountOnExit:true},function(status){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactComplete,null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactCompleteTitle,{status:status,delay:0},'Message Sent'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactCompleteText,{status:status,delay:200},'I\\'ll get back to you within a couple days, promise!'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ContactCompleteButton,{secondary:true,to:'/',status:status,delay:400,icon:'chevronRight'},'Back to homepage'));})));}}]);return Contact;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (Contact);var ContactWrapper=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].section(_templateObject,__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"c\" /* Media */].tablet,__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"c\" /* Media */].mobile,__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"c\" /* Media */].mobile,__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"c\" /* Media */].mobile);var ContactForm=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].form(_templateObject2,__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"c\" /* Media */].mobile);var ContactTitle=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].h1(_templateObject3,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay+initDelay;},function(props){return(props.status==='entering'||props.status==='entered')&&!prerender&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';},function(props){return props.status==='exiting'&&'\\n    transition-duration: 0.4s;\\n    transition-delay: 0s;\\n    transform: translate3d(0, -40px, 0);\\n    opacity: 0;\\n  ';});var ContactDivider=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].div(_templateObject4,function(props){return props.theme.colorPrimary(1);},function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay+initDelay;},function(props){return props.theme.colorPrimary(1);},function(props){return(props.status==='entering'||props.status==='entered')&&!prerender&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';},function(props){return props.status==='exiting'&&'\\n    transition-duration: 0.4s;\\n    transition-delay: 0s;\\n    transform: translate3d(0, -40px, 0);\\n    opacity: 0;\\n  ';});var ContactInput=Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_4__components_Input__[\"a\" /* default */])(_templateObject5,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay+initDelay;},function(props){return(props.status==='entering'||props.status==='entered')&&!prerender&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';},function(props){return props.status==='exiting'&&'\\n    transition-duration: 0.4s;\\n    transition-delay: 0s;\\n    transform: translate3d(0, -40px, 0);\\n    opacity: 0;\\n  ';});var ContactButton=Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_6__components_Button__[\"c\" /* default */])(_templateObject6,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.status==='entered'?'0ms':props.delay+initDelay+'ms';},function(props){return props.status==='entered'?'0.4s':'0.8s';},function(props){return props.sending&&'\\n    svg {\\n      transition: transform '+props.curveFastoutSlowin+', opacity 0.3s ease 0.8s;\\n      transition-duration: 0.8s;\\n      transform: translate3d(150px, 0, 0);\\n      opacity: 0;\\n    }\\n\\n    div {\\n      opacity: 0;\\n      animation: '+__WEBPACK_IMPORTED_MODULE_7__utils_StyleUtils__[\"a\" /* AnimFade */]+' 0.5s ease 0.6s forwards;\\n    }\\n  ';},function(props){return(props.status==='entering'||props.status==='entered')&&!prerender&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';},function(props){return props.status==='exiting'&&'\\n    transition-duration: 0.4s;\\n    transition-delay: 0s;\\n    transform: translate3d(0, -40px, 0);\\n    opacity: 0;\\n  ';});var ContactComplete=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].div(_templateObject7);var ContactCompleteTitle=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].h1(_templateObject8,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay;},function(props){return props.status==='entered'&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';});var ContactCompleteText=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].p(_templateObject9,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay;},function(props){return props.status==='entered'&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';});var ContactCompleteButton=Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_6__components_Button__[\"b\" /* RouterButton */])(_templateObject10,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.delay;},function(props){return props.status==='entered'&&'\\n    transform: translate3d(0, 0, 0);\\n    opacity: 1;\\n  ';});\n\n/***/ }),\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = __webpack_require__(170);\nexports.assert = assert_1.assert;\nexports.assertionError = assert_1.assertionError;\nvar crypt_1 = __webpack_require__(171);\nexports.base64 = crypt_1.base64;\nexports.base64Decode = crypt_1.base64Decode;\nexports.base64Encode = crypt_1.base64Encode;\nvar constants_1 = __webpack_require__(161);\nexports.CONSTANTS = constants_1.CONSTANTS;\nvar deepCopy_1 = __webpack_require__(232);\nexports.deepCopy = deepCopy_1.deepCopy;\nexports.deepExtend = deepCopy_1.deepExtend;\nexports.patchProperty = deepCopy_1.patchProperty;\nvar deferred_1 = __webpack_require__(233);\nexports.Deferred = deferred_1.Deferred;\nvar environment_1 = __webpack_require__(234);\nexports.getUA = environment_1.getUA;\nexports.isMobileCordova = environment_1.isMobileCordova;\nexports.isNodeSdk = environment_1.isNodeSdk;\nexports.isReactNative = environment_1.isReactNative;\nvar errors_1 = __webpack_require__(235);\nexports.ErrorFactory = errors_1.ErrorFactory;\nexports.FirebaseError = errors_1.FirebaseError;\nexports.patchCapture = errors_1.patchCapture;\nvar json_1 = __webpack_require__(172);\nexports.jsonEval = json_1.jsonEval;\nexports.stringify = json_1.stringify;\nvar jwt_1 = __webpack_require__(236);\nexports.decode = jwt_1.decode;\nexports.isAdmin = jwt_1.isAdmin;\nexports.issuedAtTime = jwt_1.issuedAtTime;\nexports.isValidFormat = jwt_1.isValidFormat;\nexports.isValidTimestamp = jwt_1.isValidTimestamp;\nvar obj_1 = __webpack_require__(173);\nexports.clone = obj_1.clone;\nexports.contains = obj_1.contains;\nexports.every = obj_1.every;\nexports.extend = obj_1.extend;\nexports.findKey = obj_1.findKey;\nexports.findValue = obj_1.findValue;\nexports.forEach = obj_1.forEach;\nexports.getAnyKey = obj_1.getAnyKey;\nexports.getCount = obj_1.getCount;\nexports.getValues = obj_1.getValues;\nexports.isEmpty = obj_1.isEmpty;\nexports.isNonNullObject = obj_1.isNonNullObject;\nexports.map = obj_1.map;\nexports.safeGet = obj_1.safeGet;\nvar query_1 = __webpack_require__(237);\nexports.querystring = query_1.querystring;\nexports.querystringDecode = query_1.querystringDecode;\nvar sha1_1 = __webpack_require__(238);\nexports.Sha1 = sha1_1.Sha1;\nvar subscribe_1 = __webpack_require__(240);\nexports.async = subscribe_1.async;\nexports.createSubscribe = subscribe_1.createSubscribe;\nvar validation_1 = __webpack_require__(241);\nexports.errorPrefix = validation_1.errorPrefix;\nexports.validateArgCount = validation_1.validateArgCount;\nexports.validateCallback = validation_1.validateCallback;\nexports.validateContextObject = validation_1.validateContextObject;\nexports.validateNamespace = validation_1.validateNamespace;\nvar utf8_1 = __webpack_require__(242);\nexports.stringLength = utf8_1.stringLength;\nexports.stringToByteArray = utf8_1.stringToByteArray;\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar util_3 = __webpack_require__(134);\nvar util_4 = __webpack_require__(134);\nvar util_5 = __webpack_require__(134);\nvar util_6 = __webpack_require__(134);\nvar storage_1 = __webpack_require__(154);\nvar util_7 = __webpack_require__(134);\nvar logger_1 = __webpack_require__(246);\nvar logClient = new logger_1.Logger('@firebase/database');\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexports.LUIDGenerator = (function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n})();\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexports.sha1 = function (str) {\n    var utf8Bytes = util_5.stringToByteArray(str);\n    var sha1 = new util_4.Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return util_3.base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) ||\n            (var_args[i] &&\n                typeof var_args[i] === 'object' &&\n                typeof var_args[i].length === 'number')) {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        }\n        else if (typeof var_args[i] === 'object') {\n            message += util_6.stringify(var_args[i]);\n        }\n        else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexports.logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexports.enableLogging = function (logger_, persistent) {\n    util_1.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        logClient.logLevel = logger_1.LogLevel.VERBOSE;\n        exports.logger = logClient.log.bind(logClient);\n        if (persistent)\n            storage_1.SessionStorage.set('logging_enabled', true);\n    }\n    else if (typeof logger_ === 'function') {\n        exports.logger = logger_;\n    }\n    else {\n        exports.logger = null;\n        storage_1.SessionStorage.remove('logging_enabled');\n    }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexports.log = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (exports.logger === null && storage_1.SessionStorage.get('logging_enabled') === true)\n            exports.enableLogging(true);\n    }\n    if (exports.logger) {\n        var message = buildLogMessage_.apply(null, var_args);\n        exports.logger(message);\n    }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexports.logWrapper = function (prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        exports.log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\n * @param {...string} var_args\n */\nexports.error = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n    logClient.error(message);\n};\n/**\n * @param {...string} var_args\n */\nexports.fatal = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\n    logClient.error(message);\n    throw new Error(message);\n};\n/**\n * @param {...*} var_args\n */\nexports.warn = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n    logClient.warn(message);\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexports.warnIfPageIsSecure = function () {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' &&\n        window.location &&\n        window.location.protocol &&\n        window.location.protocol.indexOf('https:') !== -1) {\n        exports.warn('Insecure Firebase access from a secure page. ' +\n            'Please use https in calls to new Firebase().');\n    }\n};\n/**\n * @param {!String} methodName\n */\nexports.warnAboutUnsupportedMethod = function (methodName) {\n    exports.warn(methodName +\n        ' is unsupported and will likely change soon.  ' +\n        'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexports.isInvalidJSONNumber = function (data) {\n    return (typeof data === 'number' &&\n        (data != data || // NaN\n            data == Number.POSITIVE_INFINITY ||\n            data == Number.NEGATIVE_INFINITY));\n};\n/**\n * @param {function()} fn\n */\nexports.executeWhenDOMReady = function (fn) {\n    if (util_7.isNodeSdk() || document.readyState === 'complete') {\n        fn();\n    }\n    else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function () {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        }\n        else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete')\n                    wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexports.MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexports.MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexports.nameCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a === exports.MIN_NAME || b === exports.MAX_NAME) {\n        return -1;\n    }\n    else if (b === exports.MIN_NAME || a === exports.MAX_NAME) {\n        return 1;\n    }\n    else {\n        var aAsInt = exports.tryParseInt(a), bAsInt = exports.tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (bAsInt !== null) {\n            return 1;\n        }\n        else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexports.stringCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexports.requireKey = function (key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    }\n    else {\n        throw new Error('Missing required key (' + key + ') in object: ' + util_6.stringify(obj));\n    }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nexports.ObjectToUniqueKey = function (obj) {\n    if (typeof obj !== 'object' || obj === null)\n        return util_6.stringify(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0)\n            key += ',';\n        key += util_6.stringify(keys[i]);\n        key += ':';\n        key += exports.ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexports.splitStringBySize = function (str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        }\n        else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexports.each = function (obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    }\n    else {\n        /**\n         * in the conversion of code we removed the goog.object.forEach\n         * function which did a value,key callback. We standardized on\n         * a single impl that does a key, value callback. So we invert\n         * to not have to touch the `each` code points\n         */\n        util_2.forEach(obj, function (key, val) { return fn(val, key); });\n    }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexports.bindCallback = function (callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexports.doubleToIEEE754String = function (v) {\n    util_1.assert(!exports.isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11, fbits = 52;\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    }\n    else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        }\n        else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1)\n            hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexports.isChromeExtensionContentScript = function () {\n    return !!(typeof window === 'object' &&\n        window['chrome'] &&\n        window['chrome']['extension'] &&\n        !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexports.isWindowsStoreApp = function () {\n    // Check for the presence of a couple WinRT globals\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexports.errorForServerCode = function (code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason =\n            'The data requested exceeds the maximum size ' +\n                'that can be accessed with a single request.';\n    }\n    else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    }\n    else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexports.INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexports.tryParseInt = function (str) {\n    if (exports.INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexports.exceptionGuard = function (fn) {\n    try {\n        fn();\n    }\n    catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            exports.warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexports.callUserCallback = function (callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exports.exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexports.beingCrawled = function () {\n    var userAgent = (typeof window === 'object' &&\n        window['navigator'] &&\n        window['navigator']['userAgent']) ||\n        '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexports.exportPropGetter = function (object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexports.setTimeoutNonBlocking = function (fn, time) {\n    var timeout = setTimeout(fn, time);\n    if (typeof timeout === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n//# sourceMappingURL=util.js.map\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\nvar util_2 = __webpack_require__(134);\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\nvar Path = /** @class */ (function () {\n    /**\n     * @param {string|Array.<string>} pathOrString Path string to parse,\n     *      or another path, or the raw tokens array\n     * @param {number=} pieceNum\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        }\n        else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\n         * Singleton to represent an empty path\n         *\n         * @const\n         */\n        get: function () {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\n     * @return {number} The number of segments in this path\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\n     * @return {!Path}\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\n     * @return {?string}\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length)\n            return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\n     * Shallow copy of the parts of the path.\n     *\n     * @param {number=} begin\n     * @return {!Array<string>}\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) { begin = 0; }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\n     * @return {?Path}\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\n            pieces.push(this.pieces_[i]);\n        return new Path(pieces, 0);\n    };\n    /**\n     * @param {string|!Path} childPathObj\n     * @return {!Path}\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\n            pieces.push(this.pieces_[i]);\n        if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        }\n        else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0)\n                    pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\n     * @return {boolean} True if there are no segments in this path\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\n     * @param {!Path} outerPath\n     * @param {!Path} innerPath\n     * @return {!Path} The path from outerPath to innerPath\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        }\n        else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        }\n        else {\n            throw new Error('INTERNAL ERROR: innerPath (' +\n                innerPath +\n                ') is not within ' +\n                'outerPath (' +\n                outerPath +\n                ')');\n        }\n    };\n    /**\n     * @param {!Path} left\n     * @param {!Path} right\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = util_1.nameCompare(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0)\n                return cmp;\n        }\n        if (leftKeys.length === rightKeys.length)\n            return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\n     *\n     * @param {Path} other\n     * @return {boolean} true if paths are the same.\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     *\n     * @param {!Path} other\n     * @return {boolean} True if this path is a parent (or the same as) other\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}()); // end Path\nexports.Path = Path;\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nvar ValidationPath = /** @class */ (function () {\n    /**\n     * @param {!Path} path Initial Path.\n     * @param {string} errorPrefix_ Prefix for any error messages.\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += util_2.stringLength(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function () {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function () {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += util_2.stringLength(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= util_2.stringLength(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ +\n                'has a key path longer than ' +\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\n                ' bytes (' +\n                this.byteLength_ +\n                ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ +\n                'path specified exceeds the maximum depth that can be written (' +\n                ValidationPath.MAX_PATH_DEPTH +\n                ') or object contains a cycle ' +\n                this.toErrorString());\n        }\n    };\n    /**\n     * String for use in error messages - uses '.' notation for path.\n     *\n     * @return {string}\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}());\nexports.ValidationPath = ValidationPath;\n\n//# sourceMappingURL=Path.js.map\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar Index_1 = __webpack_require__(156);\nvar util_1 = __webpack_require__(135);\nvar Node_1 = __webpack_require__(140);\nvar LeafNode_1 = __webpack_require__(157);\nvar nodeFromJSON;\nvar MAX_NODE;\nfunction setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nexports.setNodeFromJSON = setNodeFromJSON;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar PriorityIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new Node_1.NamedNode(util_1.MAX_NAME, new LeafNode_1.LeafNode('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, new LeafNode_1.LeafNode('[PRIORITY-POST]', priorityNode));\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(Index_1.Index));\nexports.PriorityIndex = PriorityIndex;\nexports.PRIORITY_INDEX = new PriorityIndex();\n\n//# sourceMappingURL=PriorityIndex.js.map\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar SortedMap_1 = __webpack_require__(158);\nvar Node_1 = __webpack_require__(140);\nvar snap_1 = __webpack_require__(180);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar KeyIndex_1 = __webpack_require__(150);\nvar IndexMap_1 = __webpack_require__(182);\nvar LeafNode_1 = __webpack_require__(157);\nvar comparators_1 = __webpack_require__(184);\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nvar ChildrenNode = /** @class */ (function () {\n    /**\n     *\n     * @param {!SortedMap.<string, !Node>} children_ List of children\n     * of this node..\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n     * @param {!IndexMap} indexMap_\n     */\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\n        this.children_ = children_;\n        this.priorityNode_ = priorityNode_;\n        this.indexMap_ = indexMap_;\n        this.lazyHash_ = null;\n        /**\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n         * class instead of an empty ChildrenNode.\n         */\n        if (this.priorityNode_) {\n            snap_1.validatePriorityNode(this.priorityNode_);\n        }\n        if (this.children_.isEmpty()) {\n            util_1.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n        }\n    }\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n        get: function () {\n            return (EMPTY_NODE ||\n                (EMPTY_NODE = new ChildrenNode(new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), null, IndexMap_1.IndexMap.Default)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    ChildrenNode.prototype.isLeafNode = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPriority = function () {\n        return this.priorityNode_ || EMPTY_NODE;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n        if (this.children_.isEmpty()) {\n            // Don't allow priorities on empty nodes\n            return this;\n        }\n        else {\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.getPriority();\n        }\n        else {\n            var child = this.children_.get(childName);\n            return child === null ? EMPTY_NODE : child;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getChild = function (path) {\n        var front = path.getFront();\n        if (front === null)\n            return this;\n        return this.getImmediateChild(front).getChild(path.popFront());\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hasChild = function (childName) {\n        return this.children_.get(childName) !== null;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        util_1.assert(newChildNode, 'We should always be passing snapshot nodes');\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else {\n            var namedNode = new Node_1.NamedNode(childName, newChildNode);\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\n            if (newChildNode.isEmpty()) {\n                newChildren = this.children_.remove(childName);\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n            }\n            else {\n                newChildren = this.children_.insert(childName, newChildNode);\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n            }\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else {\n            util_1.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n            return this.updateImmediateChild(front, newImmediateChild);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.isEmpty = function () {\n        return this.children_.isEmpty();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.numChildren = function () {\n        return this.children_.count();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.val = function (exportFormat) {\n        if (this.isEmpty())\n            return null;\n        var obj = {};\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\n        this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            obj[key] = childNode.val(exportFormat);\n            numKeys++;\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            }\n            else {\n                allIntegerKeys = false;\n            }\n        });\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            var array = [];\n            for (var key in obj)\n                array[key] = obj[key];\n            return array;\n        }\n        else {\n            if (exportFormat && !this.getPriority().isEmpty()) {\n                obj['.priority'] = this.getPriority().val();\n            }\n            return obj;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash_1 = '';\n            if (!this.getPriority().isEmpty())\n                toHash_1 +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.getPriority().val()) +\n                        ':';\n            this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                var childHash = childNode.hash();\n                if (childHash !== '')\n                    toHash_1 += ':' + key + ':' + childHash;\n            });\n            this.lazyHash_ = toHash_1 === '' ? '' : util_2.sha1(toHash_1);\n        }\n        return this.lazyHash_;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            var predecessor = idx.getPredecessorKey(new Node_1.NamedNode(childName, childNode));\n            return predecessor ? predecessor.name : null;\n        }\n        else {\n            return this.children_.getPredecessorKey(childName);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var minKey = idx.minKey();\n            return minKey && minKey.name;\n        }\n        else {\n            return this.children_.minKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n        var minKey = this.getFirstChildName(indexDefinition);\n        if (minKey) {\n            return new Node_1.NamedNode(minKey, this.children_.get(minKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Given an index, return the key name of the largest value we have, according to that index\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var maxKey = idx.maxKey();\n            return maxKey && maxKey.name;\n        }\n        else {\n            return this.children_.maxKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n        var maxKey = this.getLastChildName(indexDefinition);\n        if (maxKey) {\n            return new Node_1.NamedNode(maxKey, this.children_.get(maxKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.forEachChild = function (index, action) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            return idx.inorderTraversal(function (wrappedNode) {\n                return action(wrappedNode.name, wrappedNode.node);\n            });\n        }\n        else {\n            return this.children_.inorderTraversal(action);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n    };\n    /**\n     *\n     * @param {!NamedNode} startPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\n        }\n        else {\n            var iterator = this.children_.getIteratorFrom(startPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n    };\n    /**\n     * @param {!NamedNode} endPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getReverseIteratorFrom(endPost, function (key) {\n                return key;\n            });\n        }\n        else {\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.compareTo = function (other) {\n        if (this.isEmpty()) {\n            if (other.isEmpty()) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (other.isLeafNode() || other.isEmpty()) {\n            return 1;\n        }\n        else if (other === exports.MAX_NODE) {\n            return -1;\n        }\n        else {\n            // Must be another node with children.\n            return 0;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX ||\n            this.indexMap_.hasIndex(indexDefinition)) {\n            return this;\n        }\n        else {\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.isIndexed = function (index) {\n        return index === KeyIndex_1.KEY_INDEX || this.indexMap_.hasIndex(index);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            return false;\n        }\n        else {\n            var otherChildrenNode = other;\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n                return false;\n            }\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\n                var thisIter = this.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var otherIter = otherChildrenNode.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var thisCurrent = thisIter.getNext();\n                var otherCurrent = otherIter.getNext();\n                while (thisCurrent && otherCurrent) {\n                    if (thisCurrent.name !== otherCurrent.name ||\n                        !thisCurrent.node.equals(otherCurrent.node)) {\n                        return false;\n                    }\n                    thisCurrent = thisIter.getNext();\n                    otherCurrent = otherIter.getNext();\n                }\n                return thisCurrent === null && otherCurrent === null;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n     * instead.\n     *\n     * @private\n     * @param {!Index} indexDefinition\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX) {\n            return null;\n        }\n        else {\n            return this.indexMap_.get(indexDefinition.toString());\n        }\n    };\n    /**\n     * @private\n     * @type {RegExp}\n     */\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n    return ChildrenNode;\n}());\nexports.ChildrenNode = ChildrenNode;\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\nvar MaxNode = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxNode, _super);\n    function MaxNode() {\n        return _super.call(this, new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap_1.IndexMap.Default) || this;\n    }\n    MaxNode.prototype.compareTo = function (other) {\n        if (other === this) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    MaxNode.prototype.equals = function (other) {\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\n        return other === this;\n    };\n    MaxNode.prototype.getPriority = function () {\n        return this;\n    };\n    MaxNode.prototype.getImmediateChild = function (childName) {\n        return ChildrenNode.EMPTY_NODE;\n    };\n    MaxNode.prototype.isEmpty = function () {\n        return false;\n    };\n    return MaxNode;\n}(ChildrenNode));\nexports.MaxNode = MaxNode;\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\nexports.MAX_NODE = new MaxNode();\nObject.defineProperties(Node_1.NamedNode, {\n    MIN: {\n        value: new Node_1.NamedNode(util_2.MIN_NAME, ChildrenNode.EMPTY_NODE)\n    },\n    MAX: {\n        value: new Node_1.NamedNode(util_2.MAX_NAME, exports.MAX_NODE)\n    }\n});\n/**\n * Reference Extensions\n */\nKeyIndex_1.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode_1.LeafNode.__childrenNodeConstructor = ChildrenNode;\nsnap_1.setMaxNode(exports.MAX_NODE);\nPriorityIndex_1.setMaxNode(exports.MAX_NODE);\n\n//# sourceMappingURL=ChildrenNode.js.map\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/* harmony export (immutable) */ __webpack_exports__[\"__makeTemplateObject\"] = __makeTemplateObject;\n/* harmony export (immutable) */ __webpack_exports__[\"__importStar\"] = __importStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__importDefault\"] = __importDefault;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nvar NamedNode = /** @class */ (function () {\n    function NamedNode(name, node) {\n        this.name = name;\n        this.node = node;\n    }\n    /**\n     *\n     * @param {!string} name\n     * @param {!Node} node\n     * @return {NamedNode}\n     */\n    NamedNode.Wrap = function (name, node) {\n        return new NamedNode(name, node);\n    };\n    return NamedNode;\n}());\nexports.NamedNode = NamedNode;\n\n//# sourceMappingURL=Node.js.map\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LinkButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return RouterButton; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_dom__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Loader__ = __webpack_require__(142);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_Icon__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_Theme__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_StyleUtils__ = __webpack_require__(18);\nvar _templateObject=_taggedTemplateLiteral(['\\n  background: none;\\n  height: 56px;\\n  padding: 0 26px;\\n  border: 0;\\n  margin: 0;\\n  cursor: pointer;\\n  transition: all 0.3s ',';\\n  display: flex;\\n  display: inline-flex;\\n  align-items: center;\\n  color: ',';\\n  text-decoration: none;\\n  font-family: inherit;\\n  position: relative;\\n\\n  ','\\n\\n  ','\\n\\n  &:active {\\n    transform: scale(1);\\n    transition-duration: 0.1s;\\n  }\\n\\n  ','\\n\\n  ','\\n'],['\\n  background: none;\\n  height: 56px;\\n  padding: 0 26px;\\n  border: 0;\\n  margin: 0;\\n  cursor: pointer;\\n  transition: all 0.3s ',';\\n  display: flex;\\n  display: inline-flex;\\n  align-items: center;\\n  color: ',';\\n  text-decoration: none;\\n  font-family: inherit;\\n  position: relative;\\n\\n  ','\\n\\n  ','\\n\\n  &:active {\\n    transform: scale(1);\\n    transition-duration: 0.1s;\\n  }\\n\\n  ','\\n\\n  ','\\n']),_templateObject2=_taggedTemplateLiteral(['\\n  font-size: 18px;\\n  font-weight: 500;\\n  position: relative;\\n  line-height: 1.2;\\n\\n  ','\\n\\n  ','\\n'],['\\n  font-size: 18px;\\n  font-weight: 500;\\n  position: relative;\\n  line-height: 1.2;\\n\\n  ','\\n\\n  ','\\n']),_templateObject3=_taggedTemplateLiteral(['\\n  margin-left: ',';\\n  margin-right: ',';\\n  transition: all 0.3s ',';\\n  fill: ',';\\n\\n  ','\\n\\n  ',':hover &,\\n  ',':focus &,\\n  ',':hover &,\\n  ',':focus &,\\n  ',':hover &,\\n  ',':focus & {\\n    ','\\n  }\\n\\n  ','\\n'],['\\n  margin-left: ',';\\n  margin-right: ',';\\n  transition: all 0.3s ',';\\n  fill: ',';\\n\\n  ','\\n\\n  ',':hover &,\\n  ',':focus &,\\n  ',':hover &,\\n  ',':focus &,\\n  ',':hover &,\\n  ',':focus & {\\n    ','\\n  }\\n\\n  ','\\n']);function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var ButtonContent=function ButtonContent(_ref){var iconRight=_ref.iconRight,icon=_ref.icon,children=_ref.children,secondary=_ref.secondary,loading=_ref.loading;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment,null,icon&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonIcon,{loading:loading,left:true,icon:icon,secondary:secondary}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonText,{loading:loading,secondary:secondary},children),iconRight&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonIcon,{loading:loading,icon:iconRight,secondary:secondary}),loading&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__components_Loader__[\"a\" /* default */],{style:{position:'absolute',left:'50%',transform:'translateX(-50%)'},size:'24',color:__WEBPACK_IMPORTED_MODULE_5__utils_Theme__[\"a\" /* default */].colorBackground(1)}));};var Button=function Button(_ref2){var props=_objectWithoutProperties(_ref2,[]),className=_ref2.className,style=_ref2.style,secondary=_ref2.secondary;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonContainer,Object.assign({className:className,style:style,secondary:secondary},props),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonContent,props));};var LinkButton=function LinkButton(_ref3){var props=_objectWithoutProperties(_ref3,[]),className=_ref3.className,style=_ref3.style,secondary=_ref3.secondary,href=_ref3.href,rel=_ref3.rel,target=_ref3.target;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LinkButtonContainer,{className:className,style:style,secondary:secondary,href:href,rel:rel,target:target},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonContent,props));};var RouterButton=function RouterButton(_ref4){var props=_objectWithoutProperties(_ref4,[]),className=_ref4.className,style=_ref4.style,secondary=_ref4.secondary,to=_ref4.to;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(RouterButtonContainer,{className:className,style:style,to:to,secondary:secondary?1:0},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ButtonContent,props));};var ButtonContainer=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].button(_templateObject,function(props){return props.theme.curveFastoutSlowin;},function(props){return props.theme.colorBackground(1);},function(props){return!props.secondary&&'\\n    &:before {\\n      content: \\'\\';\\n      transition: all 0.4s '+props.theme.curveFastoutSlowin+';\\n      background: '+props.theme.colorPrimary(0.4)+';\\n      clip-path: '+props.theme.clipPath(10)+';\\n      position: absolute;\\n      top: -5px;\\n      right: -5px;\\n      bottom: -5px;\\n      left: -5px;\\n      z-index: -1;\\n      opacity: 0;\\n    }\\n\\n    &:after {\\n      content: \\'\\';\\n      transition: all 0.4s '+props.theme.curveFastoutSlowin+';\\n      background: '+props.theme.colorPrimary(1)+';\\n      clip-path: '+props.theme.clipPath(8)+';\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n      z-index: -1;\\n    }\\n  ';},function(props){return!props.disabled&&!props.secondary&&'\\n    &:hover,\\n    &:focus {\\n      outline: none;\\n      transform: scale(1.05);\\n    }\\n\\n    &:hover:after,\\n    &:focus:after {\\n      background: '+Object(__WEBPACK_IMPORTED_MODULE_6__utils_StyleUtils__[\"b\" /* ColorTint */])(props.theme.colorPrimary(1),0.2)+';\\n    }\\n\\n    &:focus:before {\\n      opacity: 1;\\n    }\\n  ';},function(props){return props.secondary&&'\\n    background: none;\\n    color: '+props.theme.colorPrimary(1)+';\\n    padding: 0 10px;\\n    position: relative;\\n    left: -10px;\\n\\n    &:after {\\n      content: \\'\\';\\n      height: 30px;\\n      position: absolute;\\n      top: 50%;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n      background: '+props.theme.colorPrimary(0.2)+';\\n      transform: scale3d(0, 1, 1) translateY(-50%);\\n      transform-origin: right;\\n      transition: transform 0.4s '+props.theme.curveFastoutSlowin+';\\n    }\\n\\n    &:hover,\\n    &:focus,\\n    &:active {\\n      outline: none;\\n      transform: none;\\n      background: transparent;\\n    }\\n\\n    &:hover:after,\\n    &:focus:after,\\n    &:active:after {\\n      transform: scale3d(1, 1, 1) translateY(-50%);\\n      transform-origin: left;\\n    }\\n  ';},function(props){return props.icon&&'\\n    padding-right: 32px;\\n  ';});var LinkButtonContainer=ButtonContainer.withComponent('a');var RouterButtonContainer=ButtonContainer.withComponent(__WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"a\" /* Link */]);var ButtonText=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].span(_templateObject2,function(props){return props.loading&&'\\n    visibility: hidden;\\n  ';},function(props){return props.secondary?'\\n    color: '+props.theme.colorPrimary(1)+';\\n  ':'\\n    color: '+props.theme.colorBackground(1)+';\\n  ';});var ButtonIcon=Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */])(__WEBPACK_IMPORTED_MODULE_4__utils_Icon__[\"a\" /* default */])(_templateObject3,function(props){return props.left?'0':'10px';},function(props){return props.left?'10px':'0';},function(props){return props.theme.curveFastoutSlowin;},function(props){return props.theme.colorBackground(1);},function(props){return props.secondary&&'\\n    fill: '+props.theme.colorPrimary(1)+';\\n  ';},ButtonContainer,ButtonContainer,LinkButtonContainer,LinkButtonContainer,RouterButtonContainer,RouterButtonContainer,function(props){return props.icon==='arrowRight'&&'\\n      transform: translate3d(3px, 0, 0);\\n    ';},function(props){return props.loading&&'\\n    visibility: hidden;\\n  ';});/* harmony default export */ __webpack_exports__[\"c\"] = (Button);\n\n/***/ }),\n/* 142 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(9);\nvar _templateObject=_taggedTemplateLiteral(['\\n  width: ','px;\\n  height: ','px;\\n  display: flex;\\n  justify-content: center;\\n'],['\\n  width: ','px;\\n  height: ','px;\\n  display: flex;\\n  justify-content: center;\\n']),_templateObject2=_taggedTemplateLiteral(['\\n  0%, 100% {\\n    transform: scaleY(0.4);\\n    opacity: 0.6;\\n  }\\n\\n  50% {\\n    transform: scaleY(0.8);\\n    opacity: 1;\\n  }\\n'],['\\n  0%, 100% {\\n    transform: scaleY(0.4);\\n    opacity: 0.6;\\n  }\\n\\n  50% {\\n    transform: scaleY(0.8);\\n    opacity: 1;\\n  }\\n']),_templateObject3=_taggedTemplateLiteral(['\\n  display: block;\\n  width: 5px;\\n  margin-left: 2px;\\n  height: 100%;\\n  background-color: ',';\\n\\n  &:nth-child(1) {\\n    animation: ',' 1s ease-in-out infinite;\\n    margin-left: 0;\\n  }\\n\\n  &:nth-child(2) {\\n    animation: ',' 1s ease-in-out 0.15s infinite;\\n  }\\n\\n  &:nth-child(3) {\\n    animation: ',' 1s ease-in-out 0.30s infinite;\\n  }\\n\\n  &:nth-child(4) {\\n    animation: ',' 1s ease-in-out 0.45s infinite;\\n  }\\n'],['\\n  display: block;\\n  width: 5px;\\n  margin-left: 2px;\\n  height: 100%;\\n  background-color: ',';\\n\\n  &:nth-child(1) {\\n    animation: ',' 1s ease-in-out infinite;\\n    margin-left: 0;\\n  }\\n\\n  &:nth-child(2) {\\n    animation: ',' 1s ease-in-out 0.15s infinite;\\n  }\\n\\n  &:nth-child(3) {\\n    animation: ',' 1s ease-in-out 0.30s infinite;\\n  }\\n\\n  &:nth-child(4) {\\n    animation: ',' 1s ease-in-out 0.45s infinite;\\n  }\\n']);function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}var Loader=function Loader(_ref){var size=_ref.size,color=_ref.color,style=_ref.style,className=_ref.className;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LoaderContainer,{size:size,style:style,className:className},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LoaderSpan,{color:color}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LoaderSpan,{color:color}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LoaderSpan,{color:color}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LoaderSpan,{color:color}));};var LoaderContainer=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].div(_templateObject,function(props){return props.size;},function(props){return props.size;});var AnimGrow=Object(__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"d\" /* keyframes */])(_templateObject2);var LoaderSpan=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].span(_templateObject3,function(props){return props.color;},AnimGrow,AnimGrow,AnimGrow,AnimGrow);/* harmony default export */ __webpack_exports__[\"a\"] = (Loader);\n\n/***/ }),\n/* 143 */,\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = __webpack_require__(136);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar util_3 = __webpack_require__(134);\nvar util_4 = __webpack_require__(134);\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexports.INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexports.INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\n * @param {*} key\n * @return {boolean}\n */\nexports.isValidKey = function (key) {\n    return (typeof key === 'string' && key.length !== 0 && !exports.INVALID_KEY_REGEX_.test(key));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidPathString = function (pathString) {\n    return (typeof pathString === 'string' &&\n        pathString.length !== 0 &&\n        !exports.INVALID_PATH_REGEX_.test(pathString));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidRootPathString = function (pathString) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    return exports.isValidPathString(pathString);\n};\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexports.isValidPriority = function (priority) {\n    return (priority === null ||\n        typeof priority === 'string' ||\n        (typeof priority === 'number' && !util_2.isInvalidJSONNumber(priority)) ||\n        (priority && typeof priority === 'object' && util_1.contains(priority, '.sv')));\n};\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    exports.validateFirebaseData(util_3.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexports.validateFirebaseData = function (errorPrefix, data, path_) {\n    var path = path_ instanceof Path_1.Path ? new Path_1.ValidationPath(path_, errorPrefix) : path_;\n    if (data === undefined) {\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n    }\n    if (typeof data === 'function') {\n        throw new Error(errorPrefix +\n            'contains a function ' +\n            path.toErrorString() +\n            ' with contents = ' +\n            data.toString());\n    }\n    if (util_2.isInvalidJSONNumber(data)) {\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n    }\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\n    if (typeof data === 'string' &&\n        data.length > exports.MAX_LEAF_SIZE_ / 3 &&\n        util_4.stringLength(data) > exports.MAX_LEAF_SIZE_) {\n        throw new Error(errorPrefix +\n            'contains a string greater than ' +\n            exports.MAX_LEAF_SIZE_ +\n            ' utf8 bytes ' +\n            path.toErrorString() +\n            \" ('\" +\n            data.substring(0, 50) +\n            \"...')\");\n    }\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n    // to save extra walking of large objects.\n    if (data && typeof data === 'object') {\n        var hasDotValue_1 = false, hasActualChild_1 = false;\n        util_1.forEach(data, function (key, value) {\n            if (key === '.value') {\n                hasDotValue_1 = true;\n            }\n            else if (key !== '.priority' && key !== '.sv') {\n                hasActualChild_1 = true;\n                if (!exports.isValidKey(key)) {\n                    throw new Error(errorPrefix +\n                        ' contains an invalid key (' +\n                        key +\n                        ') ' +\n                        path.toErrorString() +\n                        '.  Keys must be non-empty strings ' +\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n                }\n            }\n            path.push(key);\n            exports.validateFirebaseData(errorPrefix, value, path);\n            path.pop();\n        });\n        if (hasDotValue_1 && hasActualChild_1) {\n            throw new Error(errorPrefix +\n                ' contains \".value\" child ' +\n                path.toErrorString() +\n                ' in addition to actual children.');\n        }\n    }\n};\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexports.validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n    var i, curPath;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        var keys = curPath.slice();\n        for (var j = 0; j < keys.length; j++) {\n            if (keys[j] === '.priority' && j === keys.length - 1) {\n                // .priority is OK\n            }\n            else if (!exports.isValidKey(keys[j])) {\n                throw new Error(errorPrefix +\n                    'contains an invalid key (' +\n                    keys[j] +\n                    ') in path ' +\n                    curPath.toString() +\n                    '. Keys must be non-empty strings ' +\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n            }\n        }\n    }\n    // Check that update keys are not descendants of each other.\n    // We rely on the property that sorting guarantees that ancestors come\n    // right before descendants.\n    mergePaths.sort(Path_1.Path.comparePaths);\n    var prevPath = null;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        if (prevPath !== null && prevPath.contains(curPath)) {\n            throw new Error(errorPrefix +\n                'contains a path ' +\n                prevPath.toString() +\n                ' that is ancestor of another path ' +\n                curPath.toString());\n        }\n        prevPath = curPath;\n    }\n};\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    var errorPrefix = util_3.errorPrefix(fnName, argumentNumber, optional);\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n    }\n    var mergePaths = [];\n    util_1.forEach(data, function (key, value) {\n        var curPath = new Path_1.Path(key);\n        exports.validateFirebaseData(errorPrefix, value, path.child(curPath));\n        if (curPath.getBack() === '.priority') {\n            if (!exports.isValidPriority(value)) {\n                throw new Error(errorPrefix +\n                    \"contains an invalid value for '\" +\n                    curPath.toString() +\n                    \"', which must be a valid \" +\n                    'Firebase priority (a string, finite number, server value, or null).');\n            }\n        }\n        mergePaths.push(curPath);\n    });\n    exports.validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\nexports.validatePriority = function (fnName, argumentNumber, priority, optional) {\n    if (optional && priority === undefined)\n        return;\n    if (util_2.isInvalidJSONNumber(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'is ' +\n            priority.toString() +\n            ', but must be a valid Firebase priority (a string, finite number, ' +\n            'server value, or null).');\n    // Special case to allow importing data with a .sv.\n    if (!exports.isValidPriority(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid Firebase priority ' +\n            '(a string, finite number, server value, or null).');\n};\nexports.validateEventType = function (fnName, argumentNumber, eventType, optional) {\n    if (optional && eventType === undefined)\n        return;\n    switch (eventType) {\n        case 'value':\n        case 'child_added':\n        case 'child_removed':\n        case 'child_changed':\n        case 'child_moved':\n            break;\n        default:\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n                '\"child_changed\", or \"child_moved\".');\n    }\n};\nexports.validateKey = function (fnName, argumentNumber, key, optional) {\n    if (optional && key === undefined)\n        return;\n    if (!exports.isValidKey(key))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid key = \"' +\n            key +\n            '\".  Firebase keys must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\nexports.validatePathString = function (fnName, argumentNumber, pathString, optional) {\n    if (optional && pathString === undefined)\n        return;\n    if (!exports.isValidPathString(pathString))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid path = \"' +\n            pathString +\n            '\". Paths must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\nexports.validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    exports.validatePathString(fnName, argumentNumber, pathString, optional);\n};\nexports.validateWritablePath = function (fnName, path) {\n    if (path.getFront() === '.info') {\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n    }\n};\nexports.validateUrl = function (fnName, argumentNumber, parsedUrl) {\n    // TODO = Validate server better.\n    var pathString = parsedUrl.path.toString();\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\n        parsedUrl.repoInfo.host.length === 0 ||\n        (!exports.isValidKey(parsedUrl.repoInfo.namespace) &&\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n        (pathString.length !== 0 && !exports.isValidRootPathString(pathString))) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, false) +\n            'must be a valid firebase URL and ' +\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n    }\n};\nexports.validateCredential = function (fnName, argumentNumber, cred, optional) {\n    if (optional && cred === undefined)\n        return;\n    if (!(typeof cred === 'string'))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid credential (a string).');\n};\nexports.validateBoolean = function (fnName, argumentNumber, bool, optional) {\n    if (optional && bool === undefined)\n        return;\n    if (typeof bool !== 'boolean')\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\nexports.validateString = function (fnName, argumentNumber, string, optional) {\n    if (optional && string === undefined)\n        return;\n    if (!(typeof string === 'string')) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid string.');\n    }\n};\nexports.validateObject = function (fnName, argumentNumber, obj, optional) {\n    if (optional && obj === undefined)\n        return;\n    if (!(obj && typeof obj === 'object') || obj === null) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid object.');\n    }\n};\nexports.validateObjectContainsKey = function (fnName, argumentNumber, obj, key, optional, opt_type) {\n    var objectContainsKey = obj && typeof obj === 'object' && util_1.contains(obj, key);\n    if (!objectContainsKey) {\n        if (optional) {\n            return;\n        }\n        else {\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must contain the key \"' +\n                key +\n                '\"');\n        }\n    }\n    if (opt_type) {\n        var val = util_1.safeGet(obj, key);\n        if ((opt_type === 'number' && !(typeof val === 'number')) ||\n            (opt_type === 'string' && !(typeof val === 'string')) ||\n            (opt_type === 'boolean' && !(typeof val === 'boolean')) ||\n            (opt_type === 'function' && !(typeof val === 'function')) ||\n            (opt_type === 'object' && !(typeof val === 'object') && val)) {\n            if (optional) {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'contains invalid value for key \"' +\n                    key +\n                    '\" (must be of type \"' +\n                    opt_type +\n                    '\")');\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'must contain the key \"' +\n                    key +\n                    '\" with type \"' +\n                    opt_type +\n                    '\"');\n            }\n        }\n    }\n};\n\n//# sourceMappingURL=validation.js.map\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n *\n * @enum\n */\nvar OperationType;\n(function (OperationType) {\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nvar OperationSource = /** @class */ (function () {\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\n        this.fromUser = fromUser;\n        this.fromServer = fromServer;\n        this.queryId = queryId;\n        this.tagged = tagged;\n        util_1.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n    }\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.User = new OperationSource(\n    /*fromUser=*/ true, false, null, \n    /*tagged=*/ false);\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.Server = new OperationSource(false, \n    /*fromServer=*/ true, null, \n    /*tagged=*/ false);\n    /**\n     * @param {string} queryId\n     * @return {!OperationSource}\n     */\n    OperationSource.forServerTaggedQuery = function (queryId) {\n        return new OperationSource(false, \n        /*fromServer=*/ true, queryId, \n        /*tagged=*/ true);\n    };\n    return OperationSource;\n}());\nexports.OperationSource = OperationSource;\n\n//# sourceMappingURL=Operation.js.map\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(9);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _templateObject=_taggedTemplateLiteral(['\\n  &:after {\\n    content: \\'_\\';\\n    opacity: 0;\\n  }\\n'],['\\n  &:after {\\n    content: \\'_\\';\\n    opacity: 0;\\n  }\\n']),_templateObject2=_taggedTemplateLiteral(['\\n  opacity: 0.8;\\n  font-weight: 400;\\n  font-family: \\'Hiragino Sans\\', sans-serif;\\n  line-height: 0;\\n'],['\\n  opacity: 0.8;\\n  font-weight: 400;\\n  font-family: \\'Hiragino Sans\\', sans-serif;\\n  line-height: 0;\\n']);function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DecoderText=function(_PureComponent){_inherits(DecoderText,_PureComponent);function DecoderText(props){_classCallCheck(this,DecoderText);var _this=_possibleConstructorReturn(this,(DecoderText.__proto__||Object.getPrototypeOf(DecoderText)).call(this,props));_this.start=function(){_this.startTime=Date.now();_this.elapsedTime=0;_this.running=true;_this.setState({started:true});_this.anim();};_this.stop=function(){return _this.running=false;};_this.anim=function(){var position=_this.state.position;var elapsedTime=Date.now()-_this.startTime;var deltaTime=elapsedTime-_this.elapsedTime;var needsUpdate=1000/_this.fps<=deltaTime;if(!_this.running)return;if(!needsUpdate){requestAnimationFrame(_this.anim);return;}_this.elapsedTime=elapsedTime;_this.setState({position:_this.elapsedTime/_this.timeOffset|0});if(position>_this.content.length){_this.running=false;var finalArray=_this.setValue(_this.content);_this.setState({output:finalArray});return;}requestAnimationFrame(_this.anim);var textArray=_this.shuffle(_this.content,_this.chars,position);_this.setState({output:textArray});};_this.setValue=function(value){return value.map(function(value){return{type:'actual',value:value};});};_this.shuffle=function(content,chars,position){return content.map(function(value,index){if(index<position){return{type:'actual',value:value};}return{type:'code',value:_this.getRandCharacter(chars)};});};_this.getRandCharacter=function(chars){var randNum=Math.floor(Math.random()*chars.length);var lowChoice=-.5+Math.random();var picketCharacter=chars[randNum];var chosen=lowChoice<0?picketCharacter.toLowerCase():picketCharacter;return chosen;};var _this$props=_this.props,text=_this$props.text,_this$props$offset=_this$props.offset,offset=_this$props$offset===undefined?100:_this$props$offset;_this.content=text.split('');_this.startTime=0;_this.elapsedTime=0;_this.running=false;_this.timeOffset=offset;_this.fps=24;_this.chars=['ア','イ','ウ','エ','オ','カ','キ','ク','ケ','コ','サ','シ','ス','セ','ソ','タ','チ','ツ','テ','ト','ナ','ニ','ヌ','ネ','ノ','ハ','ヒ','フ','ヘ','ホ','マ','ミ','ム','メ','モ','ヤ','ユ','ヨ','ー','ラ','リ','ル','レ','ロ','ワ','ヰ','ヱ','ヲ','ン','ガ','ギ','グ','ゲ','ゴ','ザ','ジ','ズ','ゼ','ゾ','ダ','ヂ','ヅ','デ','ド','バ','ビ','ブ','ベ','ボ','パ','ピ','プ','ペ','ポ'];_this.state={position:0,started:false,output:[{type:'code',value:''}]};return _this;}_createClass(DecoderText,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){var _this2=this;var start=nextProps.start;var started=this.state.started;if(start&&!started)this.timeout=setTimeout(function(){_this2.start();},300);}},{key:'componentWillUnmount',value:function componentWillUnmount(){clearTimeout(this.timeout);this.stop();}},{key:'render',value:function render(){var _props=this.props,text=_props.text,className=_props.className,style=_props.style;var output=this.state.output;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(DecoderSpan,{'aria-label':text,className:className,style:style},output.map(function(item,index){if(item.type==='actual'){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('span',{key:item.value+'_'+index,'aria-hidden':'true'},item.value);}return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(DecoderCode,{key:item.value+'_'+index,'aria-hidden':'true'},item.value);}));}}]);return DecoderText;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"PureComponent\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (DecoderText);var DecoderSpan=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].span(_templateObject);var DecoderCode=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].span(_templateObject2);\n\n/***/ }),\n/* 147 */,\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nvar Change = /** @class */ (function () {\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\n        this.type = type;\n        this.snapshotNode = snapshotNode;\n        this.childName = childName;\n        this.oldSnap = oldSnap;\n        this.prevName = prevName;\n    }\n    /**\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.valueChange = function (snapshot) {\n        return new Change(Change.VALUE, snapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childAddedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childRemovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} newSnapshot\n     * @param {!Node} oldSnapshot\n     * @return {!Change}\n     */\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childMovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\n    };\n    //event types\n    /** Event type for a child added */\n    Change.CHILD_ADDED = 'child_added';\n    /** Event type for a child removed */\n    Change.CHILD_REMOVED = 'child_removed';\n    /** Event type for a child changed */\n    Change.CHILD_CHANGED = 'child_changed';\n    /** Event type for a child moved */\n    Change.CHILD_MOVED = 'child_moved';\n    /** Event type for a value change */\n    Change.VALUE = 'value';\n    return Change;\n}());\nexports.Change = Change;\n\n//# sourceMappingURL=Change.js.map\n\n\n/***/ }),\n/* 149 */,\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar Index_1 = __webpack_require__(156);\nvar Node_1 = __webpack_require__(140);\nvar util_1 = __webpack_require__(135);\nvar util_2 = __webpack_require__(134);\nvar __EMPTY_NODE;\nvar KeyIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyIndex, _super);\n    function KeyIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n        get: function () {\n            return __EMPTY_NODE;\n        },\n        set: function (val) {\n            __EMPTY_NODE = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.compare = function (a, b) {\n        return util_1.nameCompare(a.name, b.name);\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.isDefinedOn = function (node) {\n        // We could probably return true here (since every node has a key), but it's never called\n        // so just leaving unimplemented for now.\n        throw util_2.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return false; // The key for a node never changes.\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.maxPost = function () {\n        // TODO: This should really be created once and cached in a static property, but\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n        return new Node_1.NamedNode(util_1.MAX_NAME, __EMPTY_NODE);\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    KeyIndex.prototype.makePost = function (indexValue, name) {\n        util_2.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n        return new Node_1.NamedNode(indexValue, __EMPTY_NODE);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    KeyIndex.prototype.toString = function () {\n        return '.key';\n    };\n    return KeyIndex;\n}(Index_1.Index));\nexports.KeyIndex = KeyIndex;\nexports.KEY_INDEX = new KeyIndex();\n\n//# sourceMappingURL=KeyIndex.js.map\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = __webpack_require__(138);\nvar LeafNode_1 = __webpack_require__(157);\nvar Node_1 = __webpack_require__(140);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar childSet_1 = __webpack_require__(183);\nvar comparators_1 = __webpack_require__(184);\nvar IndexMap_1 = __webpack_require__(182);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar USE_HINZE = true;\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nfunction nodeFromJSON(json, priority) {\n    if (priority === void 0) { priority = null; }\n    if (json === null) {\n        return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    if (typeof json === 'object' && '.priority' in json) {\n        priority = json['.priority'];\n    }\n    util_2.assert(priority === null ||\n        typeof priority === 'string' ||\n        typeof priority === 'number' ||\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n        json = json['.value'];\n    }\n    // Valid leaf nodes include non-objects or server-value wrapper objects\n    if (typeof json !== 'object' || '.sv' in json) {\n        var jsonLeaf = json;\n        return new LeafNode_1.LeafNode(jsonLeaf, nodeFromJSON(priority));\n    }\n    if (!(json instanceof Array) && USE_HINZE) {\n        var children_1 = [];\n        var childrenHavePriority_1 = false;\n        var hinzeJsonObj_1 = json;\n        util_1.forEach(hinzeJsonObj_1, function (key, child) {\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n                // Ignore metadata nodes\n                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);\n                if (!childNode.isEmpty()) {\n                    childrenHavePriority_1 =\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n                    children_1.push(new Node_1.NamedNode(key, childNode));\n                }\n            }\n        });\n        if (children_1.length == 0) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var childSet = childSet_1.buildChildSet(children_1, comparators_1.NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, comparators_1.NAME_COMPARATOR);\n        if (childrenHavePriority_1) {\n            var sortedChildSet = childSet_1.buildChildSet(children_1, PriorityIndex_1.PRIORITY_INDEX.getCompare());\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap_1.IndexMap({ '.priority': sortedChildSet }, { '.priority': PriorityIndex_1.PRIORITY_INDEX }));\n        }\n        else {\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), IndexMap_1.IndexMap.Default);\n        }\n    }\n    else {\n        var node_1 = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var jsonObj_1 = json;\n        util_1.forEach(jsonObj_1, function (key, childData) {\n            if (util_1.contains(jsonObj_1, key)) {\n                if (key.substring(0, 1) !== '.') {\n                    // ignore metadata nodes.\n                    var childNode = nodeFromJSON(childData);\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\n                        node_1 = node_1.updateImmediateChild(key, childNode);\n                }\n            }\n        });\n        return node_1.updatePriority(nodeFromJSON(priority));\n    }\n}\nexports.nodeFromJSON = nodeFromJSON;\nPriorityIndex_1.setNodeFromJSON(nodeFromJSON);\n\n//# sourceMappingURL=nodeFromJSON.js.map\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ScrollToTop=function(_Component){_inherits(ScrollToTop,_Component);function ScrollToTop(){_classCallCheck(this,ScrollToTop);return _possibleConstructorReturn(this,(ScrollToTop.__proto__||Object.getPrototypeOf(ScrollToTop)).apply(this,arguments));}_createClass(ScrollToTop,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){var prevStatus=this.props.status;var nextStatus=nextProps.status;if(prevStatus==='entering'&&nextStatus==='entered'){window.scrollTo(0,0);}}},{key:'render',value:function render(){return null;}}]);return ScrollToTop;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (ScrollToTop);\n\n/***/ }),\n/* 153 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firebase\", function() { return firebase; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__ = __webpack_require__(231);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar firebase = Object(__WEBPACK_IMPORTED_MODULE_0__src_firebaseApp__[\"a\" /* createFirebaseNamespace */])();\n/* harmony default export */ __webpack_exports__[\"default\"] = (firebase);\n\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DOMStorageWrapper_1 = __webpack_require__(244);\nvar MemoryStorage_1 = __webpack_require__(245);\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nvar createStoragefor = function (domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' &&\n            typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new DOMStorageWrapper_1.DOMStorageWrapper(domStorage);\n        }\n    }\n    catch (e) { }\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new MemoryStorage_1.MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nexports.PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nexports.SessionStorage = createStoragefor('sessionStorage');\n\n//# sourceMappingURL=storage.js.map\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROTOCOL_VERSION = '5';\nexports.VERSION_PARAM = 'v';\nexports.TRANSPORT_SESSION_PARAM = 's';\nexports.REFERER_PARAM = 'r';\nexports.FORGE_REF = 'f';\nexports.FORGE_DOMAIN = 'firebaseio.com';\nexports.LAST_SESSION_PARAM = 'ls';\nexports.WEBSOCKET = 'websocket';\nexports.LONG_POLLING = 'long_polling';\n\n//# sourceMappingURL=Constants.js.map\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = __webpack_require__(140);\nvar util_1 = __webpack_require__(135);\n/**\n *\n * @constructor\n */\nvar Index = /** @class */ (function () {\n    function Index() {\n    }\n    /**\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n     * this index\n     */\n    Index.prototype.getCompare = function () {\n        return this.compare.bind(this);\n    };\n    /**\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n     *\n     * @param {!Node} oldNode\n     * @param {!Node} newNode\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n     */\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n        var oldWrapped = new Node_1.NamedNode(util_1.MIN_NAME, oldNode);\n        var newWrapped = new Node_1.NamedNode(util_1.MIN_NAME, newNode);\n        return this.compare(oldWrapped, newWrapped) !== 0;\n    };\n    /**\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\n     * any other node wrapper, using this index\n     */\n    Index.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    return Index;\n}());\nexports.Index = Index;\n\n//# sourceMappingURL=Index.js.map\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar snap_1 = __webpack_require__(180);\nvar __childrenNodeConstructor;\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nvar LeafNode = /** @class */ (function () {\n    /**\n     * @implements {Node}\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n     *                                         The object type is possible in the event of a deferred value\n     * @param {!Node=} priorityNode_ The priority of this node.\n     */\n    function LeafNode(value_, priorityNode_) {\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\n        this.value_ = value_;\n        this.priorityNode_ = priorityNode_;\n        this.lazyHash_ = null;\n        util_1.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n        snap_1.validatePriorityNode(this.priorityNode_);\n    }\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n        get: function () {\n            return __childrenNodeConstructor;\n        },\n        set: function (val) {\n            __childrenNodeConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    LeafNode.prototype.isLeafNode = function () {\n        return true;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPriority = function () {\n        return this.priorityNode_;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\n        return new LeafNode(this.value_, newPriorityNode);\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getChild = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else if (path.getFront() === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.hasChild = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n        return null;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\n            return this;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else if (newChildNode.isEmpty() && front !== '.priority') {\n            return this;\n        }\n        else {\n            util_1.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.numChildren = function () {\n        return 0;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.forEachChild = function (index, action) {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.val = function (exportFormat) {\n        if (exportFormat && !this.getPriority().isEmpty())\n            return {\n                '.value': this.getValue(),\n                '.priority': this.getPriority().val()\n            };\n        else\n            return this.getValue();\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash = '';\n            if (!this.priorityNode_.isEmpty())\n                toHash +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.priorityNode_.val()) +\n                        ':';\n            var type = typeof this.value_;\n            toHash += type + ':';\n            if (type === 'number') {\n                toHash += util_2.doubleToIEEE754String(this.value_);\n            }\n            else {\n                toHash += this.value_;\n            }\n            this.lazyHash_ = util_2.sha1(toHash);\n        }\n        return this.lazyHash_;\n    };\n    /**\n     * Returns the value of the leaf node.\n     * @return {Object|string|number|boolean} The value of the node.\n     */\n    LeafNode.prototype.getValue = function () {\n        return this.value_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.compareTo = function (other) {\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n            return 1;\n        }\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\n            return -1;\n        }\n        else {\n            util_1.assert(other.isLeafNode(), 'Unknown node type');\n            return this.compareToLeafNode_(other);\n        }\n    };\n    /**\n     * Comparison specifically for two leaf nodes\n     * @param {!LeafNode} otherLeaf\n     * @return {!number}\n     * @private\n     */\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n        var otherLeafType = typeof otherLeaf.value_;\n        var thisLeafType = typeof this.value_;\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n        util_1.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n        util_1.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n        if (otherIndex === thisIndex) {\n            // Same type, compare values\n            if (thisLeafType === 'object') {\n                // Deferred value nodes are all equal, but we should also never get to this point...\n                return 0;\n            }\n            else {\n                // Note that this works because true > false, all others are number or string comparisons\n                if (this.value_ < otherLeaf.value_) {\n                    return -1;\n                }\n                else if (this.value_ === otherLeaf.value_) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            }\n        }\n        else {\n            return thisIndex - otherIndex;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.withIndex = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.isIndexed = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.equals = function (other) {\n        /**\n         * @inheritDoc\n         */\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            var otherLeaf = other;\n            return (this.value_ === otherLeaf.value_ &&\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n     * the same type, the comparison falls back to their value\n     * @type {Array.<!string>}\n     * @const\n     */\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n    return LeafNode;\n}());\nexports.LeafNode = LeafNode;\n\n//# sourceMappingURL=LeafNode.js.map\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An iterator over an LLRBNode.\n */\nvar SortedMapIterator = /** @class */ (function () {\n    /**\n     * @template K, V, T\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n     * @param {?K} startKey\n     * @param {function(K, K): number} comparator\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\n     * @param {(function(K, V):T)=} resultGenerator_\n     */\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\n        this.isReverse_ = isReverse_;\n        this.resultGenerator_ = resultGenerator_;\n        /** @private\n         * @type {Array.<!LLRBNode>}\n         */\n        this.nodeStack_ = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            node = node;\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse_)\n                cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse_) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n                this.nodeStack_.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move to the next one\n                this.nodeStack_.push(node);\n                if (this.isReverse_) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_.pop();\n        var result;\n        if (this.resultGenerator_)\n            result = this.resultGenerator_(node.key, node.value);\n        else\n            result = { key: node.key, value: node.value };\n        if (this.isReverse_) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack_.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\n        if (this.resultGenerator_) {\n            return this.resultGenerator_(node.key, node.value);\n        }\n        else {\n            return { key: node.key, value: node.value };\n        }\n    };\n    return SortedMapIterator;\n}());\nexports.SortedMapIterator = SortedMapIterator;\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nvar LLRBNode = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {!K} key Key associated with this node.\n     * @param {!V} value Value associated with this node.\n     * @param {?boolean} color Whether this node is red.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n     */\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left =\n            left != null ? left : SortedMap.EMPTY_NODE;\n        this.right =\n            right != null ? right : SortedMap.EMPTY_NODE;\n    }\n    /**\n     * Returns a copy of the current node, optionally replacing pieces of it.\n     *\n     * @param {?K} key New key for the node, or null.\n     * @param {?V} value New value for the node, or null.\n     * @param {?boolean} color New color for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n     * @return {!LLRBNode} The node copy.\n     */\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBNode.prototype.count = function () {\n        return this.left.count() + 1 + this.right.count();\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     *   node.  If it returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {*} True if traversal was aborted.\n     */\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    };\n    /**\n     * @return {!Object} The minimum node in the tree.\n     * @private\n     */\n    LLRBNode.prototype.min_ = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min_();\n        }\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.minKey = function () {\n        return this.min_().key;\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    };\n    /**\n     *\n     * @param {!Object} key Key to insert.\n     * @param {!Object} value Value to insert.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with the key/value added.\n     */\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var cmp, n;\n        n = this;\n        cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n     */\n    LLRBNode.prototype.removeMin_ = function () {\n        if (this.left.isEmpty()) {\n            return SortedMap.EMPTY_NODE;\n        }\n        var n = this;\n        if (!n.left.isRed_() && !n.left.left.isRed_())\n            n = n.moveRedLeft_();\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\n        return n.fixUp_();\n    };\n    /**\n     * @param {!Object} key The key of the item to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n     */\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var n, smallest;\n        n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n                n = n.moveRedLeft_();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed_())\n                n = n.rotateRight_();\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n                n = n.moveRedRight_();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return SortedMap.EMPTY_NODE;\n                }\n                else {\n                    smallest = n.right.min_();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this is a RED node.\n     */\n    LLRBNode.prototype.isRed_ = function () {\n        return this.color;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree after performing any needed rotations.\n     */\n    LLRBNode.prototype.fixUp_ = function () {\n        var n = this;\n        if (n.right.isRed_() && !n.left.isRed_())\n            n = n.rotateLeft_();\n        if (n.left.isRed_() && n.left.left.isRed_())\n            n = n.rotateRight_();\n        if (n.left.isRed_() && n.right.isRed_())\n            n = n.colorFlip_();\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedLeft.\n     */\n    LLRBNode.prototype.moveRedLeft_ = function () {\n        var n = this.colorFlip_();\n        if (n.right.left.isRed_()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\n            n = n.rotateLeft_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedRight.\n     */\n    LLRBNode.prototype.moveRedRight_ = function () {\n        var n = this.colorFlip_();\n        if (n.left.left.isRed_()) {\n            n = n.rotateRight_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateLeft.\n     */\n    LLRBNode.prototype.rotateLeft_ = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateRight.\n     */\n    LLRBNode.prototype.rotateRight_ = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after colorFlip.\n     */\n    LLRBNode.prototype.colorFlip_ = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    /**\n     * For testing.\n     *\n     * @private\n     * @return {boolean} True if all is well.\n     */\n    LLRBNode.prototype.checkMaxDepth_ = function () {\n        var blackDepth = this.check_();\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBNode.prototype.check_ = function () {\n        var blackDepth;\n        if (this.isRed_() && this.left.isRed_()) {\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed_()) {\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        blackDepth = this.left.check_();\n        if (blackDepth !== this.right.check_()) {\n            throw new Error('Black depths differ');\n        }\n        else {\n            return blackDepth + (this.isRed_() ? 0 : 1);\n        }\n    };\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}());\nexports.LLRBNode = LLRBNode;\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nvar LLRBEmptyNode = /** @class */ (function () {\n    function LLRBEmptyNode() {\n    }\n    /**\n     * Returns a copy of the current node.\n     *\n     * @return {!LLRBEmptyNode} The node copy.\n     */\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    /**\n     * Returns a copy of the tree, with the specified key/value added.\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with item added.\n     */\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value, null);\n    };\n    /**\n     * Returns a copy of the tree, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBEmptyNode} New tree, with item removed.\n     */\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBEmptyNode.prototype.count = function () {\n        return 0;\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBEmptyNode.prototype.check_ = function () {\n        return 0;\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this node is red.\n     */\n    LLRBEmptyNode.prototype.isRed_ = function () {\n        return false;\n    };\n    return LLRBEmptyNode;\n}());\nexports.LLRBEmptyNode = LLRBEmptyNode;\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nvar SortedMap = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {function(K, K):number} comparator_ Key comparator.\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\n     */\n    function SortedMap(comparator_, root_) {\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\n        this.comparator_ = comparator_;\n        this.root_ = root_;\n    }\n    /**\n     * Returns a copy of the map, with the specified key/value added or replaced.\n     * (TODO: We should perhaps rename this method to 'put')\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @return {!SortedMap.<K, V>} New map, with item added.\n     */\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator_, this.root_\n            .insert(key, value, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns a copy of the map, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @return {!SortedMap.<K, V>} New map, with item removed.\n     */\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator_, this.root_\n            .remove(key, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns the value of the node with the given key, or null.\n     *\n     * @param {!K} key The key to look up.\n     * @return {?V} The value of the node with the given key, or null if the\n     * key doesn't exist.\n     */\n    SortedMap.prototype.get = function (key) {\n        var cmp;\n        var node = this.root_;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    /**\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\n     * @param {K} key The key to find the predecessor of\n     * @return {?K} The predecessor key.\n     */\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var cmp, node = this.root_, rightParent = null;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty())\n                        node = node.right;\n                    return node.key;\n                }\n                else if (rightParent) {\n                    return rightParent.key;\n                }\n                else {\n                    return null; // first item.\n                }\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n    };\n    /**\n     * @return {boolean} True if the map is empty.\n     */\n    SortedMap.prototype.isEmpty = function () {\n        return this.root_.isEmpty();\n    };\n    /**\n     * @return {number} The total number of nodes in the map.\n     */\n    SortedMap.prototype.count = function () {\n        return this.root_.count();\n    };\n    /**\n     * @return {?K} The minimum key in the map.\n     */\n    SortedMap.prototype.minKey = function () {\n        return this.root_.minKey();\n    };\n    /**\n     * @return {?K} The maximum key in the map.\n     */\n    SortedMap.prototype.maxKey = function () {\n        return this.root_.maxKey();\n    };\n    /**\n     * Traverses the map in key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root_.inorderTraversal(action);\n    };\n    /**\n     * Traverses the map in reverse key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} True if the traversal was aborted.\n     */\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root_.reverseTraversal(action);\n    };\n    /**\n     * Returns an iterator over the SortedMap.\n     * @template T\n     * @param {(function(K, V):T)=} resultGenerator\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\n     */\n    SortedMap.prototype.getIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n    };\n    /**\n     * Always use the same empty node, to reduce memory.\n     * @const\n     */\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n    return SortedMap;\n}());\nexports.SortedMap = SortedMap;\n\n//# sourceMappingURL=SortedMap.js.map\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = __webpack_require__(186);\nvar nodeFromJSON_1 = __webpack_require__(151);\nvar Path_1 = __webpack_require__(136);\nvar SparseSnapshotTree_1 = __webpack_require__(187);\nvar SyncTree_1 = __webpack_require__(251);\nvar SnapshotHolder_1 = __webpack_require__(262);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar util_3 = __webpack_require__(134);\nvar AuthTokenProvider_1 = __webpack_require__(263);\nvar StatsManager_1 = __webpack_require__(166);\nvar StatsReporter_1 = __webpack_require__(265);\nvar StatsListener_1 = __webpack_require__(192);\nvar EventQueue_1 = __webpack_require__(266);\nvar PersistentConnection_1 = __webpack_require__(193);\nvar ReadonlyRestClient_1 = __webpack_require__(271);\nvar Database_1 = __webpack_require__(174);\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nvar CacheNode = /** @class */ (function () {\n    /**\n     * @param {!Node} node_\n     * @param {boolean} fullyInitialized_\n     * @param {boolean} filtered_\n     */\n    function CacheNode(node_, fullyInitialized_, filtered_) {\n        this.node_ = node_;\n        this.fullyInitialized_ = fullyInitialized_;\n        this.filtered_ = filtered_;\n    }\n    /**\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFullyInitialized = function () {\n        return this.fullyInitialized_;\n    };\n    /**\n     * Returns whether this node is potentially missing children due to a filter applied to the node\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFiltered = function () {\n        return this.filtered_;\n    };\n    /**\n     * @param {!Path} path\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForPath = function (path) {\n        if (path.isEmpty()) {\n            return this.isFullyInitialized() && !this.filtered_;\n        }\n        var childKey = path.getFront();\n        return this.isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!string} key\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForChild = function (key) {\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\n    };\n    /**\n     * @return {!Node}\n     */\n    CacheNode.prototype.getNode = function () {\n        return this.node_;\n    };\n    return CacheNode;\n}());\nexports.CacheNode = CacheNode;\n\n//# sourceMappingURL=CacheNode.js.map\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nexports.CONSTANTS = {\n    /**\n     * @define {boolean} Whether this is the client Node.js SDK.\n     */\n    NODE_CLIENT: false,\n    /**\n     * @define {boolean} Whether this is the Admin Node.js SDK.\n     */\n    NODE_ADMIN: false,\n    /**\n     * Firebase SDK Version\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n//# sourceMappingURL=constants.js.map\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar onDisconnect_1 = __webpack_require__(178);\nvar TransactionResult_1 = __webpack_require__(247);\nvar util_1 = __webpack_require__(135);\nvar NextPushId_1 = __webpack_require__(248);\nvar Query_1 = __webpack_require__(179);\nvar Repo_1 = __webpack_require__(159);\nvar Path_1 = __webpack_require__(136);\nvar QueryParams_1 = __webpack_require__(272);\nvar validation_1 = __webpack_require__(144);\nvar util_2 = __webpack_require__(134);\nvar util_3 = __webpack_require__(134);\nvar SyncPoint_1 = __webpack_require__(190);\nvar Reference = /** @class */ (function (_super) {\n    tslib_1.__extends(Reference, _super);\n    /**\n     * Call options:\n     *   new Reference(Repo, Path) or\n     *   new Reference(url: string, string|RepoManager)\n     *\n     * Externally - this is the firebase.database.Reference type.\n     *\n     * @param {!Repo} repo\n     * @param {(!Path)} path\n     * @extends {Query}\n     */\n    function Reference(repo, path) {\n        var _this = this;\n        if (!(repo instanceof Repo_1.Repo)) {\n            throw new Error('new Reference() no longer supported - use app.database().');\n        }\n        // call Query's constructor, passing in the repo and path.\n        _this = _super.call(this, repo, path, QueryParams_1.QueryParams.DEFAULT, false) || this;\n        return _this;\n    }\n    /** @return {?string} */\n    Reference.prototype.getKey = function () {\n        util_2.validateArgCount('Reference.key', 0, 0, arguments.length);\n        if (this.path.isEmpty())\n            return null;\n        else\n            return this.path.getBack();\n    };\n    /**\n     * @param {!(string|Path)} pathString\n     * @return {!Reference}\n     */\n    Reference.prototype.child = function (pathString) {\n        util_2.validateArgCount('Reference.child', 1, 1, arguments.length);\n        if (typeof pathString === 'number') {\n            pathString = String(pathString);\n        }\n        else if (!(pathString instanceof Path_1.Path)) {\n            if (this.path.getFront() === null)\n                validation_1.validateRootPathString('Reference.child', 1, pathString, false);\n            else\n                validation_1.validatePathString('Reference.child', 1, pathString, false);\n        }\n        return new Reference(this.repo, this.path.child(pathString));\n    };\n    /** @return {?Reference} */\n    Reference.prototype.getParent = function () {\n        util_2.validateArgCount('Reference.parent', 0, 0, arguments.length);\n        var parentPath = this.path.parent();\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\n    };\n    /** @return {!Reference} */\n    Reference.prototype.getRoot = function () {\n        util_2.validateArgCount('Reference.root', 0, 0, arguments.length);\n        var ref = this;\n        while (ref.getParent() !== null) {\n            ref = ref.getParent();\n        }\n        return ref;\n    };\n    /** @return {!Database} */\n    Reference.prototype.databaseProp = function () {\n        return this.repo.database;\n    };\n    /**\n     * @param {*} newVal\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.set = function (newVal, onComplete) {\n        util_2.validateArgCount('Reference.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.set', this.path);\n        validation_1.validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n        util_2.validateCallback('Reference.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, \n        /*priority=*/ null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.update = function (objectToMerge, onComplete) {\n        util_2.validateArgCount('Reference.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.update', this.path);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_1.warn('Passing an Array to Firebase.update() is deprecated. ' +\n                'Use set() if you want to overwrite the existing data, or ' +\n                'an Object with integer keys if you really do want to ' +\n                'only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n        util_2.validateCallback('Reference.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} newVal\n     * @param {string|number|null} newPriority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n        util_2.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.setWithPriority', this.path);\n        validation_1.validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n        validation_1.validatePriority('Reference.setWithPriority', 2, newPriority, false);\n        util_2.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.setWithPriority failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.remove = function (onComplete) {\n        util_2.validateArgCount('Reference.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('Reference.remove', this.path);\n        util_2.validateCallback('Reference.remove', 1, onComplete, true);\n        return this.set(null, onComplete);\n    };\n    /**\n     * @param {function(*):*} transactionUpdate\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n     * @param {boolean=} applyLocally\n     * @return {!Promise}\n     */\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n        util_2.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.transaction', this.path);\n        util_2.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n        util_2.validateCallback('Reference.transaction', 2, onComplete, true);\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n        // to expose it.\n        validation_1.validateBoolean('Reference.transaction', 3, applyLocally, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.transaction failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        if (applyLocally === undefined)\n            applyLocally = true;\n        var deferred = new util_3.Deferred();\n        if (typeof onComplete === 'function') {\n            deferred.promise.catch(function () { });\n        }\n        var promiseComplete = function (error, committed, snapshot) {\n            if (error) {\n                deferred.reject(error);\n            }\n            else {\n                deferred.resolve(new TransactionResult_1.TransactionResult(committed, snapshot));\n            }\n            if (typeof onComplete === 'function') {\n                onComplete(error, committed, snapshot);\n            }\n        };\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n        return deferred.promise;\n    };\n    /**\n     * @param {string|number|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setPriority = function (priority, onComplete) {\n        util_2.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.setPriority', this.path);\n        validation_1.validatePriority('Reference.setPriority', 1, priority, false);\n        util_2.validateCallback('Reference.setPriority', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*=} value\n     * @param {function(?Error)=} onComplete\n     * @return {!Reference}\n     */\n    Reference.prototype.push = function (value, onComplete) {\n        util_2.validateArgCount('Reference.push', 0, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.push', this.path);\n        validation_1.validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n        util_2.validateCallback('Reference.push', 2, onComplete, true);\n        var now = this.repo.serverTime();\n        var name = NextPushId_1.nextPushId(now);\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n        // We use child() to create handles to two different references. The first is turned into a\n        // ThennableReference below by adding then() and catch() methods and is used as the\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\n        // value of the first ThennableReference.\n        var thennablePushRef = this.child(name);\n        var pushRef = this.child(name);\n        var promise;\n        if (value != null) {\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\n        }\n        else {\n            promise = Promise.resolve(pushRef);\n        }\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\n        if (typeof onComplete === 'function') {\n            promise.catch(function () { });\n        }\n        return thennablePushRef;\n    };\n    /**\n     * @return {!OnDisconnect}\n     */\n    Reference.prototype.onDisconnect = function () {\n        validation_1.validateWritablePath('Reference.onDisconnect', this.path);\n        return new onDisconnect_1.OnDisconnect(this.repo, this.path);\n    };\n    Object.defineProperty(Reference.prototype, \"database\", {\n        get: function () {\n            return this.databaseProp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"key\", {\n        get: function () {\n            return this.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        get: function () {\n            return this.getParent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        get: function () {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Reference;\n}(Query_1.Query));\nexports.Reference = Reference;\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery_1.Query.__referenceConstructor = Reference;\nSyncPoint_1.SyncPoint.__referenceConstructor = Reference;\n\n//# sourceMappingURL=Reference.js.map\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar validation_1 = __webpack_require__(144);\nvar Path_1 = __webpack_require__(136);\nvar PriorityIndex_1 = __webpack_require__(137);\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = __webpack_require__(158);\nvar Path_1 = __webpack_require__(136);\nvar util_1 = __webpack_require__(135);\nvar util_2 = __webpack_require__(134);\nvar emptyChildrenSingleton;\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nvar EmptyChildren = function () {\n    if (!emptyChildrenSingleton) {\n        emptyChildrenSingleton = new SortedMap_1.SortedMap(util_1.stringCompare);\n    }\n    return emptyChildrenSingleton;\n};\n/**\n * A tree with immutable elements.\n */\nvar ImmutableTree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {?T} value\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n     */\n    function ImmutableTree(value, children) {\n        if (children === void 0) { children = EmptyChildren(); }\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @template T\n     * @param {!Object.<string, !T>} obj\n     * @return {!ImmutableTree.<!T>}\n     */\n    ImmutableTree.fromObject = function (obj) {\n        var tree = ImmutableTree.Empty;\n        util_2.forEach(obj, function (childPath, childSnap) {\n            tree = tree.set(new Path_1.Path(childPath), childSnap);\n        });\n        return tree;\n    };\n    /**\n     * True if the value is empty and there are no children\n     * @return {boolean}\n     */\n    ImmutableTree.prototype.isEmpty = function () {\n        return this.value === null && this.children.isEmpty();\n    };\n    /**\n     * Given a path and predicate, return the first node and the path to that node\n     * where the predicate returns true.\n     *\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n     * on the way back out, it may be better to pass down a pathSoFar obj.\n     *\n     * @param {!Path} relativePath The remainder of the path\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\n     *   node\n     * @return {?{path:!Path, value:!T}}\n     */\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n        if (this.value != null && predicate(this.value)) {\n            return { path: Path_1.Path.Empty, value: this.value };\n        }\n        else {\n            if (relativePath.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = relativePath.getFront();\n                var child = this.children.get(front);\n                if (child !== null) {\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n                    if (childExistingPathAndValue != null) {\n                        var fullPath = new Path_1.Path(front).child(childExistingPathAndValue.path);\n                        return { path: fullPath, value: childExistingPathAndValue.value };\n                    }\n                    else {\n                        return null;\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     * Find, if it exists, the shortest subpath of the given path that points a defined\n     * value in the tree\n     * @param {!Path} relativePath\n     * @return {?{path: !Path, value: !T}}\n     */\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\n    };\n    /**\n     * @param {!Path} relativePath\n     * @return {!ImmutableTree.<T>} The subtree at the given path\n     */\n    ImmutableTree.prototype.subtree = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this;\n        }\n        else {\n            var front = relativePath.getFront();\n            var childTree = this.children.get(front);\n            if (childTree !== null) {\n                return childTree.subtree(relativePath.popFront());\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Sets a value at the specified path.\n     *\n     * @param {!Path} relativePath Path to set value at.\n     * @param {?T} toSet Value to set.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\n        if (relativePath.isEmpty()) {\n            return new ImmutableTree(toSet, this.children);\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.set(relativePath.popFront(), toSet);\n            var newChildren = this.children.insert(front, newChild);\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Removes the value at the specified path.\n     *\n     * @param {!Path} relativePath Path to value to remove.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.remove = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            if (this.children.isEmpty()) {\n                return ImmutableTree.Empty;\n            }\n            else {\n                return new ImmutableTree(null, this.children);\n            }\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                var newChild = child.remove(relativePath.popFront());\n                var newChildren = void 0;\n                if (newChild.isEmpty()) {\n                    newChildren = this.children.remove(front);\n                }\n                else {\n                    newChildren = this.children.insert(front, newChild);\n                }\n                if (this.value === null && newChildren.isEmpty()) {\n                    return ImmutableTree.Empty;\n                }\n                else {\n                    return new ImmutableTree(this.value, newChildren);\n                }\n            }\n            else {\n                return this;\n            }\n        }\n    };\n    /**\n     * Gets a value from the tree.\n     *\n     * @param {!Path} relativePath Path to get value for.\n     * @return {?T} Value at path, or null.\n     */\n    ImmutableTree.prototype.get = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this.value;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                return child.get(relativePath.popFront());\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Replace the subtree at the specified path with the given new tree.\n     *\n     * @param {!Path} relativePath Path to replace subtree for.\n     * @param {!ImmutableTree} newTree New tree.\n     * @return {!ImmutableTree} Resulting tree.\n     */\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n        if (relativePath.isEmpty()) {\n            return newTree;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.setTree(relativePath.popFront(), newTree);\n            var newChildren = void 0;\n            if (newChild.isEmpty()) {\n                newChildren = this.children.remove(front);\n            }\n            else {\n                newChildren = this.children.insert(front, newChild);\n            }\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Performs a depth first fold on this tree. Transforms a tree into a single\n     * value, given a function that operates on the path to a node, an optional\n     * current value, and a map of child names to folded subtrees\n     * @template V\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     */\n    ImmutableTree.prototype.fold = function (fn) {\n        return this.fold_(Path_1.Path.Empty, fn);\n    };\n    /**\n     * Recursive helper for public-facing fold() method\n     * @template V\n     * @param {!Path} pathSoFar\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     * @private\n     */\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n        var accum = {};\n        this.children.inorderTraversal(function (childKey, childTree) {\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n        });\n        return fn(pathSoFar, this.value, accum);\n    };\n    /**\n     * Find the first matching value on the given path. Return the result of applying f to it.\n     * @template V\n     * @param {!Path} path\n     * @param {!function(!Path, !T):?V} f\n     * @return {?V}\n     */\n    ImmutableTree.prototype.findOnPath = function (path, f) {\n        return this.findOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n        var result = this.value ? f(pathSoFar, this.value) : false;\n        if (result) {\n            return result;\n        }\n        else {\n            if (pathToFollow.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = pathToFollow.getFront();\n                var nextChild = this.children.get(front);\n                if (nextChild) {\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {!Path} path\n     * @param {!function(!Path, !T)} f\n     * @returns {!ImmutableTree.<T>}\n     */\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\n        return this.foreachOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n        if (pathToFollow.isEmpty()) {\n            return this;\n        }\n        else {\n            if (this.value) {\n                f(currentRelativePath, this.value);\n            }\n            var front = pathToFollow.getFront();\n            var nextChild = this.children.get(front);\n            if (nextChild) {\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Calls the given function for each node in the tree that has a value.\n     *\n     * @param {function(!Path, !T)} f A function to be called with\n     *   the path from the root of the tree to a node, and the value at that node.\n     *   Called in depth-first order.\n     */\n    ImmutableTree.prototype.foreach = function (f) {\n        this.foreach_(Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            childTree.foreach_(currentRelativePath.child(childName), f);\n        });\n        if (this.value) {\n            f(currentRelativePath, this.value);\n        }\n    };\n    /**\n     *\n     * @param {function(string, !T)} f\n     */\n    ImmutableTree.prototype.foreachChild = function (f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            if (childTree.value) {\n                f(childName, childTree.value);\n            }\n        });\n    };\n    ImmutableTree.Empty = new ImmutableTree(null);\n    return ImmutableTree;\n}());\nexports.ImmutableTree = ImmutableTree;\n\n//# sourceMappingURL=ImmutableTree.js.map\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Change_1 = __webpack_require__(148);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar PriorityIndex_1 = __webpack_require__(137);\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\nvar IndexedFilter = /** @class */ (function () {\n    function IndexedFilter(index_) {\n        this.index_ = index_;\n    }\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        util_1.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n        var oldChild = snap.getImmediateChild(key);\n        // Check if anything actually changed.\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n            // to avoid treating these cases as \"nothing changed.\"\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\n                // Nothing changed.\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n                return snap;\n            }\n        }\n        if (optChangeAccumulator != null) {\n            if (newChild.isEmpty()) {\n                if (snap.hasChild(key)) {\n                    optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, oldChild));\n                }\n                else {\n                    util_1.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n                }\n            }\n            else if (oldChild.isEmpty()) {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, newChild));\n            }\n            else {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, newChild, oldChild));\n            }\n        }\n        if (snap.isLeafNode() && newChild.isEmpty()) {\n            return snap;\n        }\n        else {\n            // Make sure the node is indexed\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (optChangeAccumulator != null) {\n            if (!oldSnap.isLeafNode()) {\n                oldSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (!newSnap.hasChild(key)) {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, childNode));\n                    }\n                });\n            }\n            if (!newSnap.isLeafNode()) {\n                newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (oldSnap.hasChild(key)) {\n                        var oldChild = oldSnap.getImmediateChild(key);\n                        if (!oldChild.equals(childNode)) {\n                            optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, childNode, oldChild));\n                        }\n                    }\n                    else {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, childNode));\n                    }\n                });\n            }\n        }\n        return newSnap.withIndex(this.index_);\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        if (oldSnap.isEmpty()) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        else {\n            return oldSnap.updatePriority(newPriority);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.filtersNodes = function () {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndexedFilter = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    return IndexedFilter;\n}());\nexports.IndexedFilter = IndexedFilter;\n\n//# sourceMappingURL=IndexedFilter.js.map\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StatsCollection_1 = __webpack_require__(264);\nvar StatsManager = /** @class */ (function () {\n    function StatsManager() {\n    }\n    StatsManager.getCollection = function (repoInfo) {\n        var hashString = repoInfo.toString();\n        if (!this.collections_[hashString]) {\n            this.collections_[hashString] = new StatsCollection_1.StatsCollection();\n        }\n        return this.collections_[hashString];\n    };\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n        var hashString = repoInfo.toString();\n        if (!this.reporters_[hashString]) {\n            this.reporters_[hashString] = creatorFunction();\n        }\n        return this.reporters_[hashString];\n    };\n    StatsManager.collections_ = {};\n    StatsManager.reporters_ = {};\n    return StatsManager;\n}());\nexports.StatsManager = StatsManager;\n\n//# sourceMappingURL=StatsManager.js.map\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Repo_1 = __webpack_require__(159);\nvar util_2 = __webpack_require__(135);\nvar parser_1 = __webpack_require__(176);\nvar validation_1 = __webpack_require__(144);\n__webpack_require__(274);\n/** @const {string} */\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\n * Creates and caches Repo instances.\n */\nvar RepoManager = /** @class */ (function () {\n    function RepoManager() {\n        /**\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n         */\n        this.repos_ = {};\n        /**\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n         * @private {boolean}\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].interrupt();\n            }\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].resume();\n            }\n        }\n    };\n    /**\n     * This function should only ever be called to CREATE a new database instance.\n     *\n     * @param {!FirebaseApp} app\n     * @return {!Database}\n     */\n    RepoManager.prototype.databaseFromApp = function (app, url) {\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            util_2.fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\n                DATABASE_URL_OPTION +\n                ' option when calling firebase.initializeApp().');\n        }\n        var parsedUrl = parser_1.parseRepoInfo(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        validation_1.validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            util_2.fatal('Database URL must point to the root of a Firebase Database ' +\n                '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\n     * Remove the repo and make sure it is disconnected.\n     *\n     * @param {!Repo} repo\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        var appRepos = util_1.safeGet(this.repos_, repo.app.name);\n        // This should never happen...\n        if (!appRepos || util_1.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n            util_2.fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n        }\n        repo.interrupt();\n        delete appRepos[repo.repoInfo_.toURLString()];\n    };\n    /**\n     * Ensures a repo doesn't already exist and then creates one using the\n     * provided app.\n     *\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\n     * @param {!FirebaseApp} app\n     * @return {!Repo} The Repo object for the specified server / repoName.\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var appRepos = util_1.safeGet(this.repos_, app.name);\n        if (!appRepos) {\n            appRepos = {};\n            this.repos_[app.name] = appRepos;\n        }\n        var repo = util_1.safeGet(appRepos, repoInfo.toURLString());\n        if (repo) {\n            util_2.fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n        }\n        repo = new Repo_1.Repo(repoInfo, this.useRestClient_, app);\n        appRepos[repoInfo.toURLString()] = repo;\n        return repo;\n    };\n    /**\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n     * @param {boolean} forceRestClient\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}());\nexports.RepoManager = RepoManager;\n\n//# sourceMappingURL=RepoManager.js.map\n\n\n/***/ }),\n/* 168 */,\n/* 169 */,\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = __webpack_require__(161);\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nexports.assert = function (assertion, message) {\n    if (!assertion) {\n        throw exports.assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\nexports.assertionError = function (message) {\n    return new Error('Firebase Database (' +\n        constants_1.CONSTANTS.SDK_VERSION +\n        ') INTERNAL ASSERT FAILED: ' +\n        message);\n};\n\n//# sourceMappingURL=assert.js.map\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stringToByteArray = function (str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) == 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\nvar byteArrayToString = function (bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], pos = 0, c = 0;\n    while (pos < bytes.length) {\n        var c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        }\n        else {\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// Static lookup maps, lazily populated by init_()\nexports.base64 = {\n    /**\n     * Maps bytes to characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     * @type {string}\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     * @type {string}\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     * @type {string}\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     * @type {boolean}\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeByteArray: function (input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe\n            ? this.byteToCharMapWebSafe_\n            : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param {string} input A string to encode.\n     * @param {boolean=} opt_webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param {string} input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the\n     *     alternative alphabet.\n     * @return {string} string representing the decoded value.\n     */\n    decodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param {string} input Input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n     * @return {!Array<number>} bytes representing the decoded value.\n     */\n    decodeStringToByteArray: function (input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe\n            ? this.charToByteMapWebSafe_\n            : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_: function () {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexports.base64Encode = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    return exports.base64.encodeByteArray(utf8Bytes, true);\n};\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexports.base64Decode = function (str) {\n    try {\n        return exports.base64.decodeString(str, true);\n    }\n    catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n//# sourceMappingURL=crypt.js.map\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\nexports.jsonEval = jsonEval;\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\nexports.stringify = stringify;\n\n//# sourceMappingURL=json.js.map\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nexports.contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nexports.safeGet = function (obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n        return obj[key];\n    // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.forEach = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexports.extend = function (objTo, objFrom) {\n    exports.forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexports.clone = function (obj) {\n    return exports.extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexports.isNonNullObject = function (obj) {\n    return typeof obj === 'object' && obj !== null;\n};\nexports.isEmpty = function (obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nexports.getCount = function (obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nexports.map = function (obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nexports.findKey = function (obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nexports.findValue = function (obj, fn, opt_this) {\n    var key = exports.findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nexports.getAnyKey = function (obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nexports.getValues = function (obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.every = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n//# sourceMappingURL=obj.js.map\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar util_1 = __webpack_require__(135);\nvar parser_1 = __webpack_require__(176);\nvar Path_1 = __webpack_require__(136);\nvar Reference_1 = __webpack_require__(162);\nvar Repo_1 = __webpack_require__(159);\nvar RepoManager_1 = __webpack_require__(167);\nvar util_2 = __webpack_require__(134);\nvar validation_1 = __webpack_require__(144);\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nvar Database = /** @class */ (function () {\n    /**\n     * The constructor should not be called by users of our public API.\n     * @param {!Repo} repo_\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof Repo_1.Repo)) {\n            util_1.fatal(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new Reference_1.Reference(repo_, Path_1.Path.Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function () {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Database.prototype.ref = function (path) {\n        this.checkDeleted_('ref');\n        util_2.validateArgCount('database.ref', 0, 1, arguments.length);\n        if (path instanceof Reference_1.Reference) {\n            return this.refFromURL(path.toString());\n        }\n        return path !== undefined ? this.root_.child(path) : this.root_;\n    };\n    /**\n     * Returns a reference to the root or the path specified in url.\n     * We throw a exception if the url is not in the same domain as the\n     * current repo.\n     * @param {string} url\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        util_2.validateArgCount(apiName, 1, 1, arguments.length);\n        var parsedURL = parser_1.parseRepoInfo(url);\n        validation_1.validateUrl(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            util_1.fatal(apiName +\n                ': Host name does not match the current database: ' +\n                '(found ' +\n                repoInfo.host +\n                ' but expected ' +\n                this.repo_.repoInfo_.host +\n                ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\n     * @param {string} apiName\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            util_1.fatal('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        util_2.validateArgCount('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        util_2.validateArgCount('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}());\nexports.Database = Database;\nvar DatabaseInternals = /** @class */ (function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                this.database.checkDeleted_('delete');\n                RepoManager_1.RepoManager.getInstance().deleteRepo(this.database.repo_);\n                this.database.repo_ = null;\n                this.database.root_ = null;\n                this.database.INTERNAL = null;\n                this.database = null;\n                return [2 /*return*/];\n            });\n        });\n    };\n    return DatabaseInternals;\n}());\nexports.DatabaseInternals = DatabaseInternals;\n\n//# sourceMappingURL=Database.js.map\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return instances; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LogLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Logger; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A container for all of the Logger instances\n */\nvar instances = [];\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n/**\n * The default log level\n */\nvar defaultLogLevel = LogLevel.INFO;\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nvar defaultLogHandler = function (instance, logType) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (logType < instance.logLevel)\n        return;\n    var now = new Date().toISOString();\n    switch (logType) {\n        /**\n         * By default, `console.debug` is not displayed in the developer console (in\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n         * logs to the `console.log` function.\n         */\n        case LogLevel.DEBUG:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.VERBOSE:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.INFO:\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.WARN:\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.ERROR:\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        default:\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n    }\n};\nvar Logger = /** @class */ (function () {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    function Logger(name) {\n        this.name = name;\n        /**\n         * The log level of the given Logger instance.\n         */\n        this._logLevel = defaultLogLevel;\n        /**\n         * The log handler for the Logger instance.\n         */\n        this._logHandler = defaultLogHandler;\n        /**\n         * Capture the current instance for later use\n         */\n        instances.push(this);\n    }\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\n        get: function () {\n            return this._logLevel;\n        },\n        set: function (val) {\n            if (!(val in LogLevel)) {\n                throw new TypeError('Invalid value assigned to `logLevel`');\n            }\n            this._logLevel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\n        get: function () {\n            return this._logHandler;\n        },\n        set: function (val) {\n            if (typeof val !== 'function') {\n                throw new TypeError('Value assigned to `logHandler` must be a function');\n            }\n            this._logHandler = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The functions below are all based on the `console` interface\n     */\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n    };\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n    };\n    return Logger;\n}());\n\n\n//# sourceMappingURL=logger.js.map\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = __webpack_require__(136);\nvar RepoInfo_1 = __webpack_require__(177);\nvar util_1 = __webpack_require__(135);\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            }\n            catch (e) { }\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\n * @param {!string} queryString\n * @return {!{[key:string]:string}} key value hash\n */\nfunction decodeQuery(queryString) {\n    var results = {};\n    if (queryString.startsWith('?')) {\n        queryString = queryString.substring(1);\n    }\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\n        var segment = _a[_i];\n        if (segment.length === 0) {\n            continue;\n        }\n        var kv = segment.split('=');\n        if (kv.length === 2) {\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n        }\n        else {\n            util_1.warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n        }\n    }\n    return results;\n}\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\nexports.parseRepoInfo = function (dataURL) {\n    var parsedUrl = exports.parseURL(dataURL), namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        util_1.fatal(parsedUrl.host +\n            ' is no longer supported. ' +\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if ((!namespace || namespace == 'undefined') &&\n        parsedUrl.domain !== 'localhost') {\n        util_1.fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        util_1.warnIfPageIsSecure();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new RepoInfo_1.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new Path_1.Path(parsedUrl.pathString)\n    };\n};\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nexports.parseURL = function (dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '', domain = '', subdomain = '', pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true, scheme = 'https', port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host, path, and query string.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        var questionMarkInd = dataURL.indexOf('?');\n        if (questionMarkInd === -1) {\n            questionMarkInd = dataURL.length;\n        }\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n        if (slashInd < questionMarkInd) {\n            // For pathString, questionMarkInd will always come after slashInd\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n        }\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n        else {\n            colonInd = dataURL.length;\n        }\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        }\n        else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\n            domain = 'localhost';\n        }\n        // Support `ns` query param if subdomain not already set\n        if (subdomain === '' && 'ns' in queryParams) {\n            subdomain = queryParams['ns'];\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n//# sourceMappingURL=parser.js.map\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar storage_1 = __webpack_require__(154);\nvar Constants_1 = __webpack_require__(155);\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nvar RepoInfo = /** @class */ (function () {\n    /**\n     * @param {string} host Hostname portion of the url for the repo\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\n     * @param {string} namespace The namespace represented by the repo\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n     * @param {string=} persistenceKey Override the default session persistence storage key\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) { persistenceKey = ''; }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = storage_1.PersistentStorage.get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost || this.isCustomHost();\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                storage_1.PersistentStorage.set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\n     * Returns the websocket URL for this repo\n     * @param {string} type of connection\n     * @param {Object} params list\n     * @return {string} The URL for this repo\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        util_1.assert(typeof type === 'string', 'typeof type must == string');\n        util_1.assert(typeof params === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === Constants_1.WEBSOCKET) {\n            connURL =\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        }\n        else if (type === Constants_1.LONG_POLLING) {\n            connURL =\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        }\n        else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        util_2.forEach(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}());\nexports.RepoInfo = RepoInfo;\n\n//# sourceMappingURL=RepoInfo.js.map\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar validation_1 = __webpack_require__(144);\nvar util_2 = __webpack_require__(135);\nvar util_3 = __webpack_require__(134);\n/**\n * @constructor\n */\nvar OnDisconnect = /** @class */ (function () {\n    /**\n     * @param {!Repo} repo_\n     * @param {!Path} path_\n     */\n    function OnDisconnect(repo_, path_) {\n        this.repo_ = repo_;\n        this.path_ = path_;\n    }\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.cancel = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n        util_1.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.remove = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.remove', this.path_);\n        util_1.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.set = function (value, onComplete) {\n        util_1.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.set', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n        util_1.validateCallback('OnDisconnect.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {number|string|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n        util_1.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n        validation_1.validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n        util_1.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n        util_1.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.update', this.path_);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_2.warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n        util_1.validateCallback('OnDisconnect.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    return OnDisconnect;\n}());\nexports.OnDisconnect = OnDisconnect;\n\n//# sourceMappingURL=onDisconnect.js.map\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar KeyIndex_1 = __webpack_require__(150);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar ValueIndex_1 = __webpack_require__(181);\nvar PathIndex_1 = __webpack_require__(185);\nvar util_2 = __webpack_require__(135);\nvar Path_1 = __webpack_require__(136);\nvar validation_1 = __webpack_require__(144);\nvar util_3 = __webpack_require__(134);\nvar EventRegistration_1 = __webpack_require__(249);\nvar util_4 = __webpack_require__(134);\nvar __referenceConstructor;\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nvar Query = /** @class */ (function () {\n    function Query(repo, path, queryParams_, orderByCalled_) {\n        this.repo = repo;\n        this.path = path;\n        this.queryParams_ = queryParams_;\n        this.orderByCalled_ = orderByCalled_;\n    }\n    Object.defineProperty(Query, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates start/end values for queries.\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateQueryEndpoints_ = function (params) {\n        var startNode = null;\n        var endNode = null;\n        if (params.hasStart()) {\n            startNode = params.getIndexStartValue();\n        }\n        if (params.hasEnd()) {\n            endNode = params.getIndexEndValue();\n        }\n        if (params.getIndex() === KeyIndex_1.KEY_INDEX) {\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\n                'startAt(), endAt(), or equalTo().';\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\n                'or equalTo() must be a string.';\n            if (params.hasStart()) {\n                var startName = params.getIndexStartName();\n                if (startName != util_2.MIN_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof startNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n            if (params.hasEnd()) {\n                var endName = params.getIndexEndName();\n                if (endName != util_2.MAX_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof endNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n        }\n        else if (params.getIndex() === PriorityIndex_1.PRIORITY_INDEX) {\n            if ((startNode != null && !validation_1.isValidPriority(startNode)) ||\n                (endNode != null && !validation_1.isValidPriority(endNode))) {\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n            }\n        }\n        else {\n            util_1.assert(params.getIndex() instanceof PathIndex_1.PathIndex ||\n                params.getIndex() === ValueIndex_1.VALUE_INDEX, 'unknown index type.');\n            if ((startNode != null && typeof startNode === 'object') ||\n                (endNode != null && typeof endNode === 'object')) {\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\n                    'an object.');\n            }\n        }\n    };\n    /**\n     * Validates that limit* has been called with the correct combination of parameters\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateLimit_ = function (params) {\n        if (params.hasStart() &&\n            params.hasEnd() &&\n            params.hasLimit() &&\n            !params.hasAnchoredLimit()) {\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n        }\n    };\n    /**\n     * Validates that no other order by call has been made\n     * @param {!string} fnName\n     * @private\n     */\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n        if (this.orderByCalled_ === true) {\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n        }\n    };\n    /**\n     * @return {!QueryParams}\n     */\n    Query.prototype.getQueryParams = function () {\n        return this.queryParams_;\n    };\n    /**\n     * @return {!Reference}\n     */\n    Query.prototype.getRef = function () {\n        util_3.validateArgCount('Query.ref', 0, 0, arguments.length);\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n        // method gets called.\n        return new Query.__referenceConstructor(this.repo, this.path);\n    };\n    /**\n     * @param {!string} eventType\n     * @param {!function(DataSnapshot, string=)} callback\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\n     * @param {Object=} context\n     * @return {!function(DataSnapshot, string=)}\n     */\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n        util_3.validateArgCount('Query.on', 2, 4, arguments.length);\n        validation_1.validateEventType('Query.on', 1, eventType, false);\n        util_3.validateCallback('Query.on', 2, callback, false);\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n        if (eventType === 'value') {\n            this.onValueEvent(callback, ret.cancel, ret.context);\n        }\n        else {\n            var callbacks = {};\n            callbacks[eventType] = callback;\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\n        }\n        return callback;\n    };\n    /**\n     * @param {!function(!DataSnapshot)} callback\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n        var container = new EventRegistration_1.ValueEventRegistration(callback, cancelCallback || null, context || null);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n        var container = new EventRegistration_1.ChildEventRegistration(callbacks, cancelCallback, context);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {string=} eventType\n     * @param {(function(!DataSnapshot, ?string=))=} callback\n     * @param {Object=} context\n     */\n    Query.prototype.off = function (eventType, callback, context) {\n        util_3.validateArgCount('Query.off', 0, 3, arguments.length);\n        validation_1.validateEventType('Query.off', 1, eventType, true);\n        util_3.validateCallback('Query.off', 2, callback, true);\n        util_3.validateContextObject('Query.off', 3, context, true);\n        var container = null;\n        var callbacks = null;\n        if (eventType === 'value') {\n            var valueCallback = callback || null;\n            container = new EventRegistration_1.ValueEventRegistration(valueCallback, null, context || null);\n        }\n        else if (eventType) {\n            if (callback) {\n                callbacks = {};\n                callbacks[eventType] = callback;\n            }\n            container = new EventRegistration_1.ChildEventRegistration(callbacks, null, context || null);\n        }\n        this.repo.removeEventCallbackForQuery(this, container);\n    };\n    /**\n     * Attaches a listener, waits for the first event, and then removes the listener\n     * @param {!string} eventType\n     * @param {!function(!DataSnapshot, string=)} userCallback\n     * @param cancelOrContext\n     * @param context\n     * @return {!firebase.Promise}\n     */\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n        var _this = this;\n        util_3.validateArgCount('Query.once', 1, 4, arguments.length);\n        validation_1.validateEventType('Query.once', 1, eventType, false);\n        util_3.validateCallback('Query.once', 2, userCallback, true);\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n        // against the Promise specification.\n        var firstCall = true;\n        var deferred = new util_4.Deferred();\n        // A dummy error handler in case a user wasn't expecting promises\n        deferred.promise.catch(function () { });\n        var onceCallback = function (snapshot) {\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n            // triggers multiple events (e.g. child_added or child_changed).\n            if (firstCall) {\n                firstCall = false;\n                _this.off(eventType, onceCallback);\n                if (userCallback) {\n                    userCallback.bind(ret.context)(snapshot);\n                }\n                deferred.resolve(snapshot);\n            }\n        };\n        this.on(eventType, onceCallback, \n        /*cancel=*/ function (err) {\n            _this.off(eventType, onceCallback);\n            if (ret.cancel)\n                ret.cancel.bind(ret.context)(err);\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    };\n    /**\n     * Set a limit and anchor it to the start of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToFirst = function (limit) {\n        util_3.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n    };\n    /**\n     * Set a limit and anchor it to the end of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToLast = function (limit) {\n        util_3.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n    };\n    /**\n     * Given a child path, return a new query ordered by the specified grandchild path.\n     * @param {!string} path\n     * @return {!Query}\n     */\n    Query.prototype.orderByChild = function (path) {\n        util_3.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n        if (path === '$key') {\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n        }\n        else if (path === '$priority') {\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n        }\n        else if (path === '$value') {\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n        }\n        validation_1.validatePathString('Query.orderByChild', 1, path, false);\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\n        var parsedPath = new Path_1.Path(path);\n        if (parsedPath.isEmpty()) {\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n        }\n        var index = new PathIndex_1.PathIndex(parsedPath);\n        var newParams = this.queryParams_.orderBy(index);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the KeyIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByKey = function () {\n        util_3.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\n        var newParams = this.queryParams_.orderBy(KeyIndex_1.KEY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the PriorityIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByPriority = function () {\n        util_3.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n        var newParams = this.queryParams_.orderBy(PriorityIndex_1.PRIORITY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the ValueIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByValue = function () {\n        util_3.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\n        var newParams = this.queryParams_.orderBy(ValueIndex_1.VALUE_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.startAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.startAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.startAt', 2, name, true);\n        var newParams = this.queryParams_.startAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\n                'or equalTo).');\n        }\n        // Calling with no params tells us to start at the beginning.\n        if (value === undefined) {\n            value = null;\n            name = null;\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.endAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.endAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.endAt', 2, name, true);\n        var newParams = this.queryParams_.endAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * Load the selection of children with exactly the specified value, and, optionally,\n     * the specified name.\n     * @param {number|string|boolean|null} value\n     * @param {string=} name\n     * @return {!Query}\n     */\n    Query.prototype.equalTo = function (value, name) {\n        util_3.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n        validation_1.validateKey('Query.equalTo', 2, name, true);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\n                'equalTo).');\n        }\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return this.startAt(value, name).endAt(value, name);\n    };\n    /**\n     * @return {!string} URL for this location.\n     */\n    Query.prototype.toString = function () {\n        util_3.validateArgCount('Query.toString', 0, 0, arguments.length);\n        return this.repo.toString() + this.path.toUrlEncodedString();\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n    Query.prototype.toJSON = function () {\n        // An optional spacer argument is unnecessary for a string.\n        util_3.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n        return this.toString();\n    };\n    /**\n     * An object representation of the query parameters used by this Query.\n     * @return {!Object}\n     */\n    Query.prototype.queryObject = function () {\n        return this.queryParams_.getQueryObject();\n    };\n    /**\n     * @return {!string}\n     */\n    Query.prototype.queryIdentifier = function () {\n        var obj = this.queryObject();\n        var id = util_2.ObjectToUniqueKey(obj);\n        return id === '{}' ? 'default' : id;\n    };\n    /**\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\n     * @param {Query} other\n     * @return {boolean}\n     */\n    Query.prototype.isEqual = function (other) {\n        util_3.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n        if (!(other instanceof Query)) {\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n            throw new Error(error);\n        }\n        var sameRepo = this.repo === other.repo;\n        var samePath = this.path.equals(other.path);\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n        return sameRepo && samePath && sameQueryIdentifier;\n    };\n    /**\n     * Helper used by .on and .once to extract the context and or cancel arguments.\n     * @param {!string} fnName The function name (on or once)\n     * @param {(function(Error)|Object)=} cancelOrContext\n     * @param {Object=} context\n     * @return {{cancel: ?function(Error), context: ?Object}}\n     * @private\n     */\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n        var ret = { cancel: null, context: null };\n        if (cancelOrContext && context) {\n            ret.cancel = cancelOrContext;\n            util_3.validateCallback(fnName, 3, ret.cancel, true);\n            ret.context = context;\n            util_3.validateContextObject(fnName, 4, ret.context, true);\n        }\n        else if (cancelOrContext) {\n            // we have either a cancel callback or a context.\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n                // it's a context!\n                ret.context = cancelOrContext;\n            }\n            else if (typeof cancelOrContext === 'function') {\n                ret.cancel = cancelOrContext;\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, 3, true) +\n                    ' must either be a cancel callback or a context object.');\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Query.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}());\nexports.Query = Query;\n\n//# sourceMappingURL=Query.js.map\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar util_3 = __webpack_require__(134);\nvar MAX_NODE;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nexports.priorityHashText = function (priority) {\n    if (typeof priority === 'number')\n        return 'number:' + util_2.doubleToIEEE754String(priority);\n    else\n        return 'string:' + priority;\n};\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nexports.validatePriorityNode = function (priorityNode) {\n    if (priorityNode.isLeafNode()) {\n        var val = priorityNode.val();\n        util_1.assert(typeof val === 'string' ||\n            typeof val === 'number' ||\n            (typeof val === 'object' && util_3.contains(val, '.sv')), 'Priority must be a string or number.');\n    }\n    else {\n        util_1.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n    }\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n    util_1.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n//# sourceMappingURL=snap.js.map\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar Index_1 = __webpack_require__(156);\nvar Node_1 = __webpack_require__(140);\nvar util_1 = __webpack_require__(135);\nvar nodeFromJSON_1 = __webpack_require__(151);\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar ValueIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return Node_1.NamedNode.MAX;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, valueNode);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(Index_1.Index));\nexports.ValueIndex = ValueIndex;\nexports.VALUE_INDEX = new ValueIndex();\n\n//# sourceMappingURL=ValueIndex.js.map\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar childSet_1 = __webpack_require__(183);\nvar util_2 = __webpack_require__(134);\nvar Node_1 = __webpack_require__(140);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar KeyIndex_1 = __webpack_require__(150);\nvar _defaultIndexMap;\nvar fallbackObject = {};\n/**\n *\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\n * @param {Object.<string, Index>} indexSet\n * @constructor\n */\nvar IndexMap = /** @class */ (function () {\n    function IndexMap(indexes_, indexSet_) {\n        this.indexes_ = indexes_;\n        this.indexSet_ = indexSet_;\n    }\n    Object.defineProperty(IndexMap, \"Default\", {\n        /**\n         * The default IndexMap for nodes without a priority\n         * @type {!IndexMap}\n         * @const\n         */\n        get: function () {\n            util_1.assert(fallbackObject && PriorityIndex_1.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n            _defaultIndexMap =\n                _defaultIndexMap ||\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PriorityIndex_1.PRIORITY_INDEX });\n            return _defaultIndexMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param {!string} indexKey\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    IndexMap.prototype.get = function (indexKey) {\n        var sortedMap = util_2.safeGet(this.indexes_, indexKey);\n        if (!sortedMap)\n            throw new Error('No index defined for ' + indexKey);\n        if (sortedMap === fallbackObject) {\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n            // regular child map\n            return null;\n        }\n        else {\n            return sortedMap;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {boolean}\n     */\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\n        return util_2.contains(this.indexSet_, indexDefinition.toString());\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n        util_1.assert(indexDefinition !== KeyIndex_1.KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n        var childList = [];\n        var sawIndexedValue = false;\n        var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n        var next = iter.getNext();\n        while (next) {\n            sawIndexedValue =\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n            childList.push(next);\n            next = iter.getNext();\n        }\n        var newIndex;\n        if (sawIndexedValue) {\n            newIndex = childSet_1.buildChildSet(childList, indexDefinition.getCompare());\n        }\n        else {\n            newIndex = fallbackObject;\n        }\n        var indexName = indexDefinition.toString();\n        var newIndexSet = util_2.clone(this.indexSet_);\n        newIndexSet[indexName] = indexDefinition;\n        var newIndexes = util_2.clone(this.indexes_);\n        newIndexes[indexName] = newIndex;\n        return new IndexMap(newIndexes, newIndexSet);\n    };\n    /**\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n        var _this = this;\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren, indexName) {\n            var index = util_2.safeGet(_this.indexSet_, indexName);\n            util_1.assert(index, 'Missing index implementation for ' + indexName);\n            if (indexedChildren === fallbackObject) {\n                // Check to see if we need to index everything\n                if (index.isDefinedOn(namedNode.node)) {\n                    // We need to build this index\n                    var childList = [];\n                    var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n                    var next = iter.getNext();\n                    while (next) {\n                        if (next.name != namedNode.name) {\n                            childList.push(next);\n                        }\n                        next = iter.getNext();\n                    }\n                    childList.push(namedNode);\n                    return childSet_1.buildChildSet(childList, index.getCompare());\n                }\n                else {\n                    // No change, this remains a fallback\n                    return fallbackObject;\n                }\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                var newChildren = indexedChildren;\n                if (existingSnap) {\n                    newChildren = newChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                return newChildren.insert(namedNode, namedNode.node);\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    /**\n     * Create a new IndexMap instance with the given value removed\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren) {\n            if (indexedChildren === fallbackObject) {\n                // This is the fallback. Just return it, nothing to do in this case\n                return indexedChildren;\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                if (existingSnap) {\n                    return indexedChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                else {\n                    // No record of this child\n                    return indexedChildren;\n                }\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    return IndexMap;\n}());\nexports.IndexMap = IndexMap;\n\n//# sourceMappingURL=IndexMap.js.map\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = __webpack_require__(158);\nvar SortedMap_2 = __webpack_require__(158);\nvar LOG_2 = Math.log(2);\n/**\n * @constructor\n */\nvar Base12Num = /** @class */ (function () {\n    /**\n     * @param {number} length\n     */\n    function Base12Num(length) {\n        var logBase2 = function (num) {\n            return parseInt((Math.log(num) / LOG_2), 10);\n        };\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\n        this.count = logBase2(length + 1);\n        this.current_ = this.count - 1;\n        var mask = bitMask(this.count);\n        this.bits_ = (length + 1) & mask;\n    }\n    /**\n     * @return {boolean}\n     */\n    Base12Num.prototype.nextBitIsOne = function () {\n        //noinspection JSBitwiseOperatorUsage\n        var result = !(this.bits_ & (0x1 << this.current_));\n        this.current_--;\n        return result;\n    };\n    return Base12Num;\n}());\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nexports.buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n    childList.sort(cmp);\n    var buildBalancedTree = function (low, high) {\n        var length = high - low;\n        var namedNode;\n        var key;\n        if (length == 0) {\n            return null;\n        }\n        else if (length == 1) {\n            namedNode = childList[low];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, null, null);\n        }\n        else {\n            var middle = parseInt((length / 2), 10) + low;\n            var left = buildBalancedTree(low, middle);\n            var right = buildBalancedTree(middle + 1, high);\n            namedNode = childList[middle];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, left, right);\n        }\n    };\n    var buildFrom12Array = function (base12) {\n        var node = null;\n        var root = null;\n        var index = childList.length;\n        var buildPennant = function (chunkSize, color) {\n            var low = index - chunkSize;\n            var high = index;\n            index -= chunkSize;\n            var childTree = buildBalancedTree(low + 1, high);\n            var namedNode = childList[low];\n            var key = keyFn ? keyFn(namedNode) : namedNode;\n            attachPennant(new SortedMap_1.LLRBNode(key, namedNode.node, color, null, childTree));\n        };\n        var attachPennant = function (pennant) {\n            if (node) {\n                node.left = pennant;\n                node = pennant;\n            }\n            else {\n                root = pennant;\n                node = pennant;\n            }\n        };\n        for (var i = 0; i < base12.count; ++i) {\n            var isOne = base12.nextBitIsOne();\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\n            if (isOne) {\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n            }\n            else {\n                // current == 2\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.RED);\n            }\n        }\n        return root;\n    };\n    var base12 = new Base12Num(childList.length);\n    var root = buildFrom12Array(base12);\n    return new SortedMap_2.SortedMap(mapSortFn || cmp, root);\n};\n\n//# sourceMappingURL=childSet.js.map\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\nfunction NAME_ONLY_COMPARATOR(left, right) {\n    return util_1.nameCompare(left.name, right.name);\n}\nexports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;\nfunction NAME_COMPARATOR(left, right) {\n    return util_1.nameCompare(left, right);\n}\nexports.NAME_COMPARATOR = NAME_COMPARATOR;\n\n//# sourceMappingURL=comparators.js.map\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar Index_1 = __webpack_require__(156);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar Node_1 = __webpack_require__(140);\nvar nodeFromJSON_1 = __webpack_require__(151);\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nvar PathIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PathIndex, _super);\n    function PathIndex(indexPath_) {\n        var _this = _super.call(this) || this;\n        _this.indexPath_ = indexPath_;\n        util_1.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n        return _this;\n    }\n    /**\n     * @param {!Node} snap\n     * @return {!Node}\n     * @protected\n     */\n    PathIndex.prototype.extractChild = function (snap) {\n        return snap.getChild(this.indexPath_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.isDefinedOn = function (node) {\n        return !node.getChild(this.indexPath_).isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.compare = function (a, b) {\n        var aChild = this.extractChild(a.node);\n        var bChild = this.extractChild(b.node);\n        var indexCmp = aChild.compareTo(bChild);\n        if (indexCmp === 0) {\n            return util_2.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n        return new Node_1.NamedNode(name, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.maxPost = function () {\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, ChildrenNode_1.MAX_NODE);\n        return new Node_1.NamedNode(util_2.MAX_NAME, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.toString = function () {\n        return this.indexPath_.slice().join('/');\n    };\n    return PathIndex;\n}(Index_1.Index));\nexports.PathIndex = PathIndex;\n\n//# sourceMappingURL=PathIndex.js.map\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Path_1 = __webpack_require__(136);\nvar SparseSnapshotTree_1 = __webpack_require__(187);\nvar LeafNode_1 = __webpack_require__(157);\nvar nodeFromJSON_1 = __webpack_require__(151);\nvar PriorityIndex_1 = __webpack_require__(137);\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nexports.generateWithValues = function (values) {\n    values = values || {};\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\n    return values;\n};\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nexports.resolveDeferredValue = function (value, serverValues) {\n    if (!value || typeof value !== 'object') {\n        return value;\n    }\n    else {\n        util_1.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n        return serverValues[value['.sv']];\n    }\n};\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!SparseSnapshotTree} tree\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nexports.resolveDeferredValueTree = function (tree, serverValues) {\n    var resolvedTree = new SparseSnapshotTree_1.SparseSnapshotTree();\n    tree.forEachTree(new Path_1.Path(''), function (path, node) {\n        resolvedTree.remember(path, exports.resolveDeferredValueSnapshot(node, serverValues));\n    });\n    return resolvedTree;\n};\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nexports.resolveDeferredValueSnapshot = function (node, serverValues) {\n    var rawPri = node.getPriority().val();\n    var priority = exports.resolveDeferredValue(rawPri, serverValues);\n    var newNode;\n    if (node.isLeafNode()) {\n        var leafNode = node;\n        var value = exports.resolveDeferredValue(leafNode.getValue(), serverValues);\n        if (value !== leafNode.getValue() ||\n            priority !== leafNode.getPriority().val()) {\n            return new LeafNode_1.LeafNode(value, nodeFromJSON_1.nodeFromJSON(priority));\n        }\n        else {\n            return node;\n        }\n    }\n    else {\n        var childrenNode = node;\n        newNode = childrenNode;\n        if (priority !== childrenNode.getPriority().val()) {\n            newNode = newNode.updatePriority(new LeafNode_1.LeafNode(priority));\n        }\n        childrenNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n            var newChildNode = exports.resolveDeferredValueSnapshot(childNode, serverValues);\n            if (newChildNode !== childNode) {\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\n            }\n        });\n        return newNode;\n    }\n};\n\n//# sourceMappingURL=ServerValues.js.map\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = __webpack_require__(136);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar CountedSet_1 = __webpack_require__(188);\n/**\n * Helper class to store a sparse set of snapshots.\n *\n * @constructor\n */\nvar SparseSnapshotTree = /** @class */ (function () {\n    function SparseSnapshotTree() {\n        /**\n         * @private\n         * @type {Node}\n         */\n        this.value_ = null;\n        /**\n         * @private\n         * @type {CountedSet}\n         */\n        this.children_ = null;\n    }\n    /**\n     * Gets the node stored at the given path if one exists.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {?Node} The retrieved node, or null.\n     */\n    SparseSnapshotTree.prototype.find = function (path) {\n        if (this.value_ != null) {\n            return this.value_.getChild(path);\n        }\n        else if (!path.isEmpty() && this.children_ != null) {\n            var childKey = path.getFront();\n            path = path.popFront();\n            if (this.children_.contains(childKey)) {\n                var childTree = this.children_.get(childKey);\n                return childTree.find(path);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Stores the given node at the specified path. If there is already a node\n     * at a shallower path, it merges the new data into that snapshot node.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @param {!Node} data The new data, or null.\n     */\n    SparseSnapshotTree.prototype.remember = function (path, data) {\n        if (path.isEmpty()) {\n            this.value_ = data;\n            this.children_ = null;\n        }\n        else if (this.value_ !== null) {\n            this.value_ = this.value_.updateChild(path, data);\n        }\n        else {\n            if (this.children_ == null) {\n                this.children_ = new CountedSet_1.CountedSet();\n            }\n            var childKey = path.getFront();\n            if (!this.children_.contains(childKey)) {\n                this.children_.add(childKey, new SparseSnapshotTree());\n            }\n            var child = this.children_.get(childKey);\n            path = path.popFront();\n            child.remember(path, data);\n        }\n    };\n    /**\n     * Purge the data at path from the cache.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {boolean} True if this node should now be removed.\n     */\n    SparseSnapshotTree.prototype.forget = function (path) {\n        if (path.isEmpty()) {\n            this.value_ = null;\n            this.children_ = null;\n            return true;\n        }\n        else {\n            if (this.value_ !== null) {\n                if (this.value_.isLeafNode()) {\n                    // We're trying to forget a node that doesn't exist\n                    return false;\n                }\n                else {\n                    var value = this.value_;\n                    this.value_ = null;\n                    var self_1 = this;\n                    value.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, tree) {\n                        self_1.remember(new Path_1.Path(key), tree);\n                    });\n                    return this.forget(path);\n                }\n            }\n            else if (this.children_ !== null) {\n                var childKey = path.getFront();\n                path = path.popFront();\n                if (this.children_.contains(childKey)) {\n                    var safeToRemove = this.children_.get(childKey).forget(path);\n                    if (safeToRemove) {\n                        this.children_.remove(childKey);\n                    }\n                }\n                if (this.children_.isEmpty()) {\n                    this.children_ = null;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Recursively iterates through all of the stored tree and calls the\n     * callback on each one.\n     *\n     * @param {!Path} prefixPath Path to look up node for.\n     * @param {!Function} func The function to invoke for each tree.\n     */\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n        if (this.value_ !== null) {\n            func(prefixPath, this.value_);\n        }\n        else {\n            this.forEachChild(function (key, tree) {\n                var path = new Path_1.Path(prefixPath.toString() + '/' + key);\n                tree.forEachTree(path, func);\n            });\n        }\n    };\n    /**\n     * Iterates through each immediate child and triggers the callback.\n     *\n     * @param {!Function} func The function to invoke for each child.\n     */\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\n        if (this.children_ !== null) {\n            this.children_.each(function (key, tree) {\n                func(key, tree);\n            });\n        }\n    };\n    return SparseSnapshotTree;\n}());\nexports.SparseSnapshotTree = SparseSnapshotTree;\n\n//# sourceMappingURL=SparseSnapshotTree.js.map\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nvar CountedSet = /** @class */ (function () {\n    function CountedSet() {\n        this.set = {};\n    }\n    /**\n     * @param {!K} item\n     * @param {V} val\n     */\n    CountedSet.prototype.add = function (item, val) {\n        this.set[item] = val !== null ? val : true;\n    };\n    /**\n     * @param {!K} key\n     * @return {boolean}\n     */\n    CountedSet.prototype.contains = function (key) {\n        return util_1.contains(this.set, key);\n    };\n    /**\n     * @param {!K} item\n     * @return {V}\n     */\n    CountedSet.prototype.get = function (item) {\n        return this.contains(item) ? this.set[item] : undefined;\n    };\n    /**\n     * @param {!K} item\n     */\n    CountedSet.prototype.remove = function (item) {\n        delete this.set[item];\n    };\n    /**\n     * Deletes everything in the set\n     */\n    CountedSet.prototype.clear = function () {\n        this.set = {};\n    };\n    /**\n     * True if there's nothing in the set\n     * @return {boolean}\n     */\n    CountedSet.prototype.isEmpty = function () {\n        return util_1.isEmpty(this.set);\n    };\n    /**\n     * @return {number} The number of items in the set\n     */\n    CountedSet.prototype.count = function () {\n        return util_1.getCount(this.set);\n    };\n    /**\n     * Run a function on each k,v pair in the set\n     * @param {function(K, V)} fn\n     */\n    CountedSet.prototype.each = function (fn) {\n        util_1.forEach(this.set, function (k, v) { return fn(k, v); });\n    };\n    /**\n     * Mostly for debugging\n     * @return {Array.<K>} The keys present in this CountedSet\n     */\n    CountedSet.prototype.keys = function () {\n        var keys = [];\n        util_1.forEach(this.set, function (k) {\n            keys.push(k);\n        });\n        return keys;\n    };\n    return CountedSet;\n}());\nexports.CountedSet = CountedSet;\n\n//# sourceMappingURL=CountedSet.js.map\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = __webpack_require__(145);\nvar Path_1 = __webpack_require__(136);\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nvar Overwrite = /** @class */ (function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));\n        }\n        else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}());\nexports.Overwrite = Overwrite;\n\n//# sourceMappingURL=Overwrite.js.map\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = __webpack_require__(160);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar ViewCache_1 = __webpack_require__(191);\nvar View_1 = __webpack_require__(255);\nvar __referenceConstructor;\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nvar SyncPoint = /** @class */ (function () {\n    function SyncPoint() {\n        /**\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\n         * queryId and the value is the View for that query.\n         *\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n         *\n         * @type {!Object.<!string, !View>}\n         * @private\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            util_1.assert(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return util_2.isEmpty(this.views_);\n    };\n    /**\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} optCompleteServerCache\n     * @return {!Array.<!Event>}\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = util_2.safeGet(this.views_, queryId);\n            util_1.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        }\n        else {\n            var events_1 = [];\n            util_2.forEach(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache Complete server cache, if we have it.\n     * @param {boolean} serverCacheComplete\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = util_2.safeGet(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            }\n            else if (serverCache instanceof ChildrenNode_1.ChildrenNode) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            }\n            else {\n                eventCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new ViewCache_1.ViewCache(new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\n            view = new View_1.View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n     *\n     * If query is the default query, we'll check all views for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            util_2.forEach(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        }\n        else {\n            // remove the callback from the specific view.\n            var view = util_2.safeGet(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\n     * @return {!Array.<!View>}\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\n        return values.filter(function (view) {\n            return !view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n    };\n    /**\n     *\n     * @param {!Path} path The path to the desired complete snapshot\n     * @return {?Node} A complete cache, if it exists\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        util_2.forEach(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\n     * @param {!Query} query\n     * @return {?View}\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        }\n        else {\n            var queryId = query.queryIdentifier();\n            return util_2.safeGet(this.views_, queryId);\n        }\n    };\n    /**\n     * @param {!Query} query\n     * @return {boolean}\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\n     * @return {?View}\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = util_2.findValue(this.views_, function (view) {\n            return view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}());\nexports.SyncPoint = SyncPoint;\n\n//# sourceMappingURL=SyncPoint.js.map\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = __webpack_require__(138);\nvar CacheNode_1 = __webpack_require__(160);\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nvar ViewCache = /** @class */ (function () {\n    /**\n     *\n     * @param {!CacheNode} eventCache_\n     * @param {!CacheNode} serverCache_\n     */\n    function ViewCache(eventCache_, serverCache_) {\n        this.eventCache_ = eventCache_;\n        this.serverCache_ = serverCache_;\n    }\n    /**\n     * @param {!Node} eventSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n        return new ViewCache(new CacheNode_1.CacheNode(eventSnap, complete, filtered), this.serverCache_);\n    };\n    /**\n     * @param {!Node} serverSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n        return new ViewCache(this.eventCache_, new CacheNode_1.CacheNode(serverSnap, complete, filtered));\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getEventCache = function () {\n        return this.eventCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteEventSnap = function () {\n        return this.eventCache_.isFullyInitialized()\n            ? this.eventCache_.getNode()\n            : null;\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getServerCache = function () {\n        return this.serverCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteServerSnap = function () {\n        return this.serverCache_.isFullyInitialized()\n            ? this.serverCache_.getNode()\n            : null;\n    };\n    /**\n     * @const\n     * @type {ViewCache}\n     */\n    ViewCache.Empty = new ViewCache(new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false), new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false));\n    return ViewCache;\n}());\nexports.ViewCache = ViewCache;\n\n//# sourceMappingURL=ViewCache.js.map\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = /** @class */ (function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = util_1.clone(newStats);\n        if (this.last_) {\n            util_1.forEach(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}());\nexports.StatsListener = StatsListener;\n\n//# sourceMappingURL=StatsListener.js.map\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar app_1 = __webpack_require__(153);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar util_3 = __webpack_require__(134);\nvar util_4 = __webpack_require__(135);\nvar Path_1 = __webpack_require__(136);\nvar VisibilityMonitor_1 = __webpack_require__(267);\nvar OnlineMonitor_1 = __webpack_require__(268);\nvar util_5 = __webpack_require__(134);\nvar Connection_1 = __webpack_require__(195);\nvar util_6 = __webpack_require__(134);\nvar util_7 = __webpack_require__(134);\nvar ServerActions_1 = __webpack_require__(198);\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    tslib_1.__extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body) {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nvar EventEmitter = /** @class */ (function () {\n    /**\n     * @param {!Array.<string>} allowedEvents_\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        util_1.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\n     * To be called by derived classes to trigger events.\n     * @param {!string} eventType\n     * @param {...*} var_args\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback &&\n                (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        util_1.assert(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n\n//# sourceMappingURL=EventEmitter.js.map\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\nvar storage_1 = __webpack_require__(154);\nvar Constants_1 = __webpack_require__(155);\nvar TransportManager_1 = __webpack_require__(269);\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = /** @class */ (function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = util_1.logWrapper('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ &&\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\n                            _this.conn_.bytesReceived +\n                            ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    }\n                    else if (_this.conn_ &&\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\n                            _this.conn_.bytesSent +\n                            ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    }\n                    else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            }\n            else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            }\n            else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                if (conn === _this.rx_) {\n                    _this.onPrimaryMessageReceived_(message);\n                }\n                else if (conn === _this.secondaryConn_) {\n                    _this.onSecondaryMessageReceived_(message);\n                }\n                else {\n                    _this.log_('message on old connection');\n                }\n            }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            }\n            else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ ||\n                    this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        }\n        else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        }\n        else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        }\n        else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        }\n        else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            }\n            else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            }\n            else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            }\n            else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            }\n            else if (cmd === CONTROL_ERROR) {\n                util_1.error('Server Error: ' + payload);\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            }\n            else {\n                util_1.error('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n            this.conn_.start();\n            this.onConnectionEstablished_(this.conn_, timestamp);\n            if (Constants_1.PROTOCOL_VERSION !== version) {\n                util_1.warn('Protocol version mismatch detected');\n            }\n            // TODO: do we want to upgrade? when? maybe a delay?\n            this.tryStartUpgrade_();\n        }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ =\n            conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        util_1.setTimeoutNonBlocking(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n            this.close();\n        }\n        else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        }\n        else {\n            util_1.setTimeoutNonBlocking(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n            this.log_('sending ping on primary.');\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n            this.log_('Realtime connection failed.');\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n            if (this.repoInfo_.isCacheableHost()) {\n                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                this.repoInfo_.internalHost = this.repoInfo_.host;\n            }\n        }\n        else if (this.state_ === 1 /* CONNECTED */) {\n            this.log_('Realtime connection lost.');\n        }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n            throw 'Connection is not connected';\n        }\n        else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n            this.log_('Closing realtime connection.');\n            this.state_ = 2 /* DISCONNECTED */;\n            this.closeConnections_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_();\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\nvar CountedSet_1 = __webpack_require__(188);\nvar StatsManager_1 = __webpack_require__(166);\nvar PacketReceiver_1 = __webpack_require__(270);\nvar Constants_1 = __webpack_require__(155);\nvar util_2 = __webpack_require__(134);\nvar util_3 = __webpack_require__(134);\n// URL query parameters associated with longpolling\nexports.FIREBASE_LONGPOLL_START_PARAM = 'start';\nexports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexports.FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nvar BrowserPollConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId An identifier for this connection, used for logging\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\n     *                                         transport session\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n     *                                     connection previously\n     */\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.repoInfo = repoInfo;\n        this.transportSessionId = transportSessionId;\n        this.lastSessionId = lastSessionId;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.everConnected_ = false;\n        this.log_ = util_1.logWrapper(connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.urlFn = function (params) {\n            return repoInfo.connectionURL(Constants_1.LONG_POLLING, params);\n        };\n    }\n    /**\n     *\n     * @param {function(Object)} onMessage Callback when messages arrive\n     * @param {function()} onDisconnect Callback with connection lost.\n     */\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.curSegmentNum = 0;\n        this.onDisconnect_ = onDisconnect;\n        this.myPacketOrderer = new PacketReceiver_1.PacketReceiver(onMessage);\n        this.isClosed_ = false;\n        this.connectTimeoutTimer_ = setTimeout(function () {\n            _this.log_('Timed out trying to connect.');\n            // Make sure we clear the host cache\n            _this.onClosed_();\n            _this.connectTimeoutTimer_ = null;\n        }, Math.floor(LP_CONNECT_TIMEOUT));\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\n        util_1.executeWhenDOMReady(function () {\n            if (_this.isClosed_)\n                return;\n            //Set up a callback that gets triggered once a connection is set up.\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var command = args[0], arg1 = args[1], arg2 = args[2], arg3 = args[3], arg4 = args[4];\n                _this.incrementIncomingBytes_(args);\n                if (!_this.scriptTagHolder)\n                    return; // we closed the connection.\n                if (_this.connectTimeoutTimer_) {\n                    clearTimeout(_this.connectTimeoutTimer_);\n                    _this.connectTimeoutTimer_ = null;\n                }\n                _this.everConnected_ = true;\n                if (command == exports.FIREBASE_LONGPOLL_START_PARAM) {\n                    _this.id = arg1;\n                    _this.password = arg2;\n                }\n                else if (command === exports.FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\n                    if (arg1) {\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\n                        // through our already open polls), so don't send any more.\n                        _this.scriptTagHolder.sendNewPolls = false;\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\n                        // all of the responses up to this one before closing\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\n                            _this.onClosed_();\n                        });\n                    }\n                    else {\n                        _this.onClosed_();\n                    }\n                }\n                else {\n                    throw new Error('Unrecognized command received: ' + command);\n                }\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var pN = args[0], data = args[1];\n                _this.incrementIncomingBytes_(args);\n                _this.myPacketOrderer.handleResponse(pN, data);\n            }, function () {\n                _this.onClosed_();\n            }, _this.urlFn);\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n            //from cache.\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_START_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\n                urlParams[exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n            urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n            if (_this.transportSessionId) {\n                urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n            }\n            if (_this.lastSessionId) {\n                urlParams[Constants_1.LAST_SESSION_PARAM] = _this.lastSessionId;\n            }\n            if (!util_3.isNodeSdk() &&\n                typeof location !== 'undefined' &&\n                location.href &&\n                location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n                urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n            }\n            var connectURL = _this.urlFn(urlParams);\n            _this.log_('Connecting via long-poll to ' + connectURL);\n            _this.scriptTagHolder.addTag(connectURL, function () {\n                /* do nothing */\n            });\n        });\n    };\n    /**\n     * Call this when a handshake has completed successfully and we want to consider the connection established\n     */\n    BrowserPollConnection.prototype.start = function () {\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\n        this.addDisconnectPingFrame(this.id, this.password);\n    };\n    /**\n     * Forces long polling to be considered as a potential transport\n     */\n    BrowserPollConnection.forceAllow = function () {\n        BrowserPollConnection.forceAllow_ = true;\n    };\n    /**\n     * Forces longpolling to not be considered as a potential transport\n     */\n    BrowserPollConnection.forceDisallow = function () {\n        BrowserPollConnection.forceDisallow_ = true;\n    };\n    // Static method, use string literal so it can be accessed in a generic way\n    BrowserPollConnection.isAvailable = function () {\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n        return (BrowserPollConnection.forceAllow_ ||\n            (!BrowserPollConnection.forceDisallow_ &&\n                typeof document !== 'undefined' &&\n                document.createElement != null &&\n                !util_1.isChromeExtensionContentScript() &&\n                !util_1.isWindowsStoreApp() &&\n                !util_3.isNodeSdk()));\n    };\n    /**\n     * No-op for polling\n     */\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\n    /**\n     * Stops polling and cleans up the iframe\n     * @private\n     */\n    BrowserPollConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.scriptTagHolder) {\n            this.scriptTagHolder.close();\n            this.scriptTagHolder = null;\n        }\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n        if (this.myDisconnFrame) {\n            document.body.removeChild(this.myDisconnFrame);\n            this.myDisconnFrame = null;\n        }\n        if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n        }\n    };\n    /**\n     * Triggered when this transport is closed\n     * @private\n     */\n    BrowserPollConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is closing itself');\n            this.shutdown_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_(this.everConnected_);\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n     * that we've left.\n     */\n    BrowserPollConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is being closed.');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n     * broken into chunks (since URLs have a small maximum length).\n     * @param {!Object} data The JSON data to transmit.\n     */\n    BrowserPollConnection.prototype.send = function (data) {\n        var dataStr = util_2.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //first, lets get the base64-encoded data\n        var base64data = util_2.base64Encode(dataStr);\n        //We can only fit a certain amount in each URL, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_1.splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n        //of segments so that we can reassemble the packet on the server.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n            this.curSegmentNum++;\n        }\n    };\n    /**\n     * This is how we notify the server that we're leaving.\n     * We aren't able to send requests with DHTML on a window close event, but we can\n     * trigger XHR requests in some browsers (everything but Opera basically).\n     * @param {!string} id\n     * @param {!string} pw\n     */\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n        if (util_3.isNodeSdk())\n            return;\n        this.myDisconnFrame = document.createElement('iframe');\n        var urlParams = {};\n        urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n        urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = id;\n        urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = pw;\n        this.myDisconnFrame.src = this.urlFn(urlParams);\n        this.myDisconnFrame.style.display = 'none';\n        document.body.appendChild(this.myDisconnFrame);\n    };\n    /**\n     * Used to track the bytes received by this client\n     * @param {*} args\n     * @private\n     */\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n        var bytesReceived = util_2.stringify(args).length;\n        this.bytesReceived += bytesReceived;\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\n    };\n    return BrowserPollConnection;\n}());\nexports.BrowserPollConnection = BrowserPollConnection;\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\n    /**\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\n     */\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n        this.onDisconnect = onDisconnect;\n        this.urlFn = urlFn;\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n        //problems in some browsers.\n        /**\n         * @type {CountedSet.<number, number>}\n         */\n        this.outstandingRequests = new CountedSet_1.CountedSet();\n        //A queue of the pending segments waiting for transmission to the server.\n        this.pendingSegs = [];\n        //A serial number. We use this for two things:\n        // 1) A way to ensure the browser doesn't cache responses to polls\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n        //    JSONP code in the order it was added to the iframe.\n        this.currentSerial = Math.floor(Math.random() * 100000000);\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n        // incoming data from the server that we're waiting for).\n        this.sendNewPolls = true;\n        if (!util_3.isNodeSdk()) {\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n            //iframes where we put the long-polling script tags. We have two callbacks:\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\n            //   2) Message Callback - Triggered when new data arrives.\n            this.uniqueCallbackIdentifier = util_1.LUIDGenerator();\n            window[exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n            window[exports.FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n            //Create an iframe for us to add script tags to.\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n            // Set the iframe's contents.\n            var script = '';\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n            // for ie9, but ie8 needs to do it again in the document itself.\n            if (this.myIFrame.src &&\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n                var currentDomain = document.domain;\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n            }\n            var iframeContents = '<html><body>' + script + '</body></html>';\n            try {\n                this.myIFrame.doc.open();\n                this.myIFrame.doc.write(iframeContents);\n                this.myIFrame.doc.close();\n            }\n            catch (e) {\n                util_1.log('frame writing exception');\n                if (e.stack) {\n                    util_1.log(e.stack);\n                }\n                util_1.log(e);\n            }\n        }\n        else {\n            this.commandCB = commandCB;\n            this.onMessageCB = onMessageCB;\n        }\n    }\n    /**\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n     * actually use.\n     * @private\n     * @return {Element}\n     */\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\n        var iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        // This is necessary in order to initialize the document inside the iframe\n        if (document.body) {\n            document.body.appendChild(iframe);\n            try {\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n                var a = iframe.contentWindow.document;\n                if (!a) {\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n                    util_1.log('No IE domain setting required');\n                }\n            }\n            catch (e) {\n                var domain = document.domain;\n                iframe.src =\n                    \"javascript:void((function(){document.open();document.domain='\" +\n                        domain +\n                        \"';document.close();})())\";\n            }\n        }\n        else {\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n            // never gets hit.\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n        }\n        // Get the document of the iframe in a browser-specific way.\n        if (iframe.contentDocument) {\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n        }\n        else if (iframe.contentWindow) {\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\n        }\n        else if (iframe.document) {\n            iframe.doc = iframe.document; //others?\n        }\n        return iframe;\n    };\n    /**\n     * Cancel all outstanding queries and remove the frame.\n     */\n    FirebaseIFrameScriptHolder.prototype.close = function () {\n        var _this = this;\n        //Mark this iframe as dead, so no new requests are sent.\n        this.alive = false;\n        if (this.myIFrame) {\n            //We have to actually remove all of the html inside this iframe before removing it from the\n            //window, or IE will continue loading and executing the script tags we've already added, which\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n            this.myIFrame.doc.body.innerHTML = '';\n            setTimeout(function () {\n                if (_this.myIFrame !== null) {\n                    document.body.removeChild(_this.myIFrame);\n                    _this.myIFrame = null;\n                }\n            }, Math.floor(0));\n        }\n        if (util_3.isNodeSdk() && this.myID) {\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            var theURL = this.urlFn(urlParams);\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n        }\n        // Protect from being called recursively.\n        var onDisconnect = this.onDisconnect;\n        if (onDisconnect) {\n            this.onDisconnect = null;\n            onDisconnect();\n        }\n    };\n    /**\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n     * @param {!string} id - The ID of this connection\n     * @param {!string} pw - The password for this connection\n     */\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n        this.myID = id;\n        this.myPW = pw;\n        this.alive = true;\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n        while (this.newRequest_()) { }\n    };\n    /**\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n     * too many outstanding requests and we are still alive.\n     *\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n     * needed.\n     */\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n        // close the old request.\n        if (this.alive &&\n            this.sendNewPolls &&\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n            //construct our url\n            this.currentSerial++;\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n            var theURL = this.urlFn(urlParams);\n            //Now add as much data as we can.\n            var curDataString = '';\n            var i = 0;\n            while (this.pendingSegs.length > 0) {\n                //first, lets see if the next segment will fit.\n                var nextSeg = this.pendingSegs[0];\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\n                    MAX_URL_DATA_SIZE) {\n                    //great, the segment will fit. Lets append it.\n                    var theSeg = this.pendingSegs.shift();\n                    curDataString =\n                        curDataString +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n                            i +\n                            '=' +\n                            theSeg.seg +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n                            i +\n                            '=' +\n                            theSeg.ts +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_DATA_PARAM +\n                            i +\n                            '=' +\n                            theSeg.d;\n                    i++;\n                }\n                else {\n                    break;\n                }\n            }\n            theURL = theURL + curDataString;\n            this.addLongPollTag_(theURL, this.currentSerial);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Queue a packet for transmission to the server.\n     * @param segnum - A sequential id for this packet segment used for reassembly\n     * @param totalsegs - The total number of segments in this packet\n     * @param data - The data for this segment.\n     */\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n        //add this to the queue of segments to send.\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n        //send the data immediately if there isn't already data being transmitted, unless\n        //startLongPoll hasn't been called yet.\n        if (this.alive) {\n            this.newRequest_();\n        }\n    };\n    /**\n     * Add a script tag for a regular long-poll request.\n     * @param {!string} url - The URL of the script tag.\n     * @param {!number} serial - The serial number of the request.\n     * @private\n     */\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n        var _this = this;\n        //remember that we sent this request.\n        this.outstandingRequests.add(serial, 1);\n        var doNewRequest = function () {\n            _this.outstandingRequests.remove(serial);\n            _this.newRequest_();\n        };\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n        var readyStateCB = function () {\n            // Request completed.  Cancel the keepalive.\n            clearTimeout(keepaliveTimeout);\n            // Trigger a new request so we can continue receiving data.\n            doNewRequest();\n        };\n        this.addTag(url, readyStateCB);\n    };\n    /**\n     * Add an arbitrary script tag to the iframe.\n     * @param {!string} url - The URL for the script tag source.\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n     */\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n        var _this = this;\n        if (util_3.isNodeSdk()) {\n            this.doNodeLongPoll(url, loadCB);\n        }\n        else {\n            setTimeout(function () {\n                try {\n                    // if we're already closed, don't add this poll\n                    if (!_this.sendNewPolls)\n                        return;\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\n                    newScript_1.type = 'text/javascript';\n                    newScript_1.async = true;\n                    newScript_1.src = url;\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\n                        var rstate = newScript_1.readyState;\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\n                            if (newScript_1.parentNode) {\n                                newScript_1.parentNode.removeChild(newScript_1);\n                            }\n                            loadCB();\n                        }\n                    };\n                    newScript_1.onerror = function () {\n                        util_1.log('Long-poll script failed to load: ' + url);\n                        _this.sendNewPolls = false;\n                        _this.close();\n                    };\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\n                }\n                catch (e) {\n                    // TODO: we should make this error visible somehow\n                }\n            }, Math.floor(1));\n        }\n    };\n    return FirebaseIFrameScriptHolder;\n}());\nexports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;\n\n//# sourceMappingURL=BrowserPollConnection.js.map\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = __webpack_require__(153);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar StatsManager_1 = __webpack_require__(166);\nvar Constants_1 = __webpack_require__(155);\nvar util_3 = __webpack_require__(134);\nvar storage_1 = __webpack_require__(154);\nvar util_4 = __webpack_require__(134);\nvar util_5 = __webpack_require__(134);\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n}\nelse if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\nexports.setWebSocketImpl = setWebSocketImpl;\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nvar WebSocketConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId identifier for this transport\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = util_2.logWrapper(this.connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @return {string} connection url\n     * @private\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n        if (!util_5.isNodeSdk() &&\n            typeof location !== 'undefined' &&\n            location.href &&\n            location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n            urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n        }\n        if (transportSessionId) {\n            urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[Constants_1.LAST_SESSION_PARAM] = lastSessionId;\n        }\n        return repoInfo.connectionURL(Constants_1.WEBSOCKET, urlParams);\n    };\n    /**\n     *\n     * @param onMessage Callback when messages arrive\n     * @param onDisconnect Callback with connection lost.\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        storage_1.PersistentStorage.set('previous_websocket_failure', true);\n        try {\n            if (util_5.isNodeSdk()) {\n                var device = util_3.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + Constants_1.PROTOCOL_VERSION + \"/\" + app_1.default.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\"});\n                var proxy = this.connURL.indexOf('wss://') == 0\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\n                    : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            }\n            else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        }\n        catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n     */\n    WebSocketConnection.prototype.start = function () { };\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return (!isOldAndroid &&\n            WebSocketImpl !== null &&\n            !WebSocketConnection.forceDisallow_);\n    };\n    /**\n     * Returns true if we previously failed to connect with this transport.\n     * @return {boolean}\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return (storage_1.PersistentStorage.isInMemoryStorage ||\n            storage_1.PersistentStorage.get('previous_websocket_failure') === true);\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        storage_1.PersistentStorage.remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = util_4.jsonEval(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\n     * @param {number} frameCount The number of frames we are expecting from the server\n     * @private\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n     * @param {!String} data\n     * @return {?String} Any remaining data to be process, or null if there is none\n     * @private\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        util_1.assert(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\n     * Process a websocket frame that has arrived from the server.\n     * @param mess The frame data\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null)\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        }\n        else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\n     * Send a message to the server\n     * @param {Object} data The JSON object to transmit\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = util_4.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_2.splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler.\n     * Close the websocket and kill the connection.\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n     * the last activity.\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\n     * Send a string over the websocket.\n     *\n     * @param {string} str String to send.\n     * @private\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        }\n        catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\n     * Number of response before we consider the connection \"healthy.\"\n     * @type {number}\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\n     * Time to wait for the connection te become healthy before giving up.\n     * @type {number}\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}());\nexports.WebSocketConnection = WebSocketConnection;\n\n//# sourceMappingURL=WebSocketConnection.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(42)))\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nvar ServerActions = /** @class */ (function () {\n    function ServerActions() {\n    }\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, ?string)} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\n    /**\n     * Refreshes the auth token for the current connection.\n     * @param {string} token The authentication token\n     */\n    ServerActions.prototype.refreshAuthToken = function (token) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\n    /**\n     * @param {Object.<string, *>} stats\n     */\n    ServerActions.prototype.reportStats = function (stats) { };\n    return ServerActions;\n}());\nexports.ServerActions = ServerActions;\n\n//# sourceMappingURL=ServerActions.js.map\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = __webpack_require__(165);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar Node_1 = __webpack_require__(140);\nvar ChildrenNode_1 = __webpack_require__(138);\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar RangedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\n     * @param {!NamedNode} node\n     * @return {boolean}\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\n            this.index_.compare(node, this.getEndPost()) <= 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            if (!self.matches(new Node_1.NamedNode(key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        }\n        else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        }\n        else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}());\nexports.RangedFilter = RangedFilter;\n\n//# sourceMappingURL=RangedFilter.js.map\n\n\n/***/ }),\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_styled_components__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_TextArea__ = __webpack_require__(228);\nvar _templateObject=_taggedTemplateLiteral(['\\n  position: relative;\\n  display: flex;\\n  margin-top: 16px;\\n'],['\\n  position: relative;\\n  display: flex;\\n  margin-top: 16px;\\n']),_templateObject2=_taggedTemplateLiteral(['\\n  background: transparent;\\n  color: ',';\\n  box-shadow: inset 0 -2px 0 0 ',';\\n  transition: box-shadow 0.4s ease;\\n  height: 34px;\\n  width: 100%;\\n  font-size: 16px;\\n  font-family: inherit;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  padding-bottom: 16px;\\n  z-index: 16;\\n  appearance: none;\\n  -webkit-border-radius: 0;\\n\\n  &:focus {\\n    outline: none;\\n    box-shadow: inset 0 -2px 0 0 ',';\\n  }\\n\\n  &::-webkit-contacts-auto-fill-button {\\n    background-color: ',';\\n    transition: background-color 0.3s ease;\\n  }\\n\\n  &::-webkit-contacts-auto-fill-button:hover {\\n    background-color: ',';\\n  }\\n'],['\\n  background: transparent;\\n  color: ',';\\n  box-shadow: inset 0 -2px 0 0 ',';\\n  transition: box-shadow 0.4s ease;\\n  height: 34px;\\n  width: 100%;\\n  font-size: 16px;\\n  font-family: inherit;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  padding-bottom: 16px;\\n  z-index: 16;\\n  appearance: none;\\n  -webkit-border-radius: 0;\\n\\n  &:focus {\\n    outline: none;\\n    box-shadow: inset 0 -2px 0 0 ',';\\n  }\\n\\n  &::-webkit-contacts-auto-fill-button {\\n    background-color: ',';\\n    transition: background-color 0.3s ease;\\n  }\\n\\n  &::-webkit-contacts-auto-fill-button:hover {\\n    background-color: ',';\\n  }\\n']),_templateObject3=_taggedTemplateLiteral(['\\n  color: ',';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: block;\\n  transform-origin: top left;\\n  transition: all 0.4s ',';\\n\\n  ',':focus + &,\\n  ',':focus + & {\\n    ','\\n  }\\n\\n  ','\\n'],['\\n  color: ',';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: block;\\n  transform-origin: top left;\\n  transition: all 0.4s ',';\\n\\n  ',':focus + &,\\n  ',':focus + & {\\n    ','\\n  }\\n\\n  ','\\n']);function _taggedTemplateLiteral(strings,raw){return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var Input=function Input(_ref){var id=_ref.id,label=_ref.label,hasValue=_ref.hasValue,multiline=_ref.multiline,className=_ref.className,props=_objectWithoutProperties(_ref,['id','label','hasValue','multiline','className']);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputWrapper,{className:className},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Fragment,null,!multiline&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputElement,Object.assign({id:id,name:id,'aria-labelledby':id+'-label'},props)),!!multiline&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputTextArea,Object.assign({id:id,name:id,'aria-labelledby':id+'-label'},props)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(InputLabel,{id:id+'-label',hasValue:hasValue,htmlFor:id},label)));};var InputWrapper=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].div(_templateObject);var InputElement=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].input(_templateObject2,function(props){return props.theme.colorText(1);},function(props){return props.theme.colorText(0.2);},function(props){return props.theme.colorPrimary(1);},function(props){return props.theme.colorText(0.4);},function(props){return props.theme.colorPrimary(1);});var InputTextArea=InputElement.withComponent(__WEBPACK_IMPORTED_MODULE_2__components_TextArea__[\"a\" /* default */]);var InputLabelFocus=function InputLabelFocus(props){return'\\n  color: '+props.theme.colorText(0.4)+';\\n  transform: scale(0.8) translateY(-28px);\\n';};var InputLabel=__WEBPACK_IMPORTED_MODULE_1_styled_components__[\"b\" /* default */].label(_templateObject3,function(props){return props.theme.colorText(0.8);},function(props){return props.theme.curveFastoutSlowin;},InputElement,InputTextArea,function(props){return InputLabelFocus(props);},function(props){return props.hasValue&&'\\n    '+InputLabelFocus(props)+'\\n  ';});/* harmony default export */ __webpack_exports__[\"a\"] = (Input);\n\n/***/ }),\n/* 228 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_autosize__ = __webpack_require__(229);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_autosize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_autosize__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TextArea=function(_Component){_inherits(TextArea,_Component);function TextArea(){_classCallCheck(this,TextArea);return _possibleConstructorReturn(this,(TextArea.__proto__||Object.getPrototypeOf(TextArea)).apply(this,arguments));}_createClass(TextArea,[{key:'componentDidMount',value:function componentDidMount(){__WEBPACK_IMPORTED_MODULE_1_autosize___default()(this.textarea);}},{key:'render',value:function render(){var _this2=this;var _props=this.props,className=_props.className,allowResize=_props.allowResize,props=_objectWithoutProperties(_props,['className','allowResize']);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('textarea',Object.assign({},props,{ref:function ref(node){return _this2.textarea=node;},className:className,style:{resize:allowResize?null:'none'}}));}}]);return TextArea;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (TextArea);\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tautosize 4.0.1\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight !== styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});\n\n/***/ }),\n/* 230 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_app__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__firebase_database__ = __webpack_require__(243);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__firebase_database___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__firebase_database__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(278);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__config__);\n// Firebase config for storing messages from the contact form.\n// Replace this with your own config or remove the form if you're\n// checking out or modifying my protfolio – HW\nvar firebaseConfig=__WEBPACK_IMPORTED_MODULE_2__config___default.a.firebase;var Firebase=__WEBPACK_IMPORTED_MODULE_0__firebase_app__[\"firebase\"].initializeApp(firebaseConfig);/* harmony default export */ __webpack_exports__[\"a\"] = (Firebase);\n\n/***/ }),\n/* 231 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createFirebaseNamespace;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__firebase_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__firebase_util__);\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = /** @class */ (function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepCopy\"])(options);\n        this.INTERNAL = {\n            getUid: function () { return null; },\n            getToken: function () { return Promise.resolve(null); },\n            addAuthTokenListener: function (callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () { return callback(null); }, 0);\n            },\n            removeAuthTokenListener: function (callback) {\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        })\n            .then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        })\n            .then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\n                ? instanceIdentifier\n                : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}());\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n    FirebaseAppImpl.prototype.delete ||\n    console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nfunction createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '4.10.1',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"createSubscribe\"],\n            ErrorFactory: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"],\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"]\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"patchProperty\"])(app, 'App', FirebaseAppImpl);\n    /**\n     * Create a new App instance (name must be unique).\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        }\n        else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function (appArg) {\n            if (appArg === void 0) { appArg = app(); }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"deepExtend\"])(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\n        'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\n        'account is only allowed in a Node.js environment. On client ' +\n        'devices, you should instead initialize the SDK with an api key and ' +\n        'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\n        'Firebase App instance.'\n};\nvar appErrors = new __WEBPACK_IMPORTED_MODULE_0__firebase_util__[\"ErrorFactory\"]('app', 'Firebase', errors);\n\n\n//# sourceMappingURL=firebaseApp.js.map\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\nexports.patchProperty = patchProperty;\n\n//# sourceMappingURL=deepCopy.js.map\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\n     * @return {!function(?(Error), ?=)}\n     */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            }\n            else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n//# sourceMappingURL=deferred.js.map\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = __webpack_require__(161);\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexports.getUA = function () {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    }\n    else {\n        return '';\n    }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexports.isMobileCordova = function () {\n    return (typeof window !== 'undefined' &&\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA()));\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexports.isReactNative = function () {\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexports.isNodeSdk = function () {\n    return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;\n};\n\n//# sourceMappingURL=environment.js.map\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error\n    .captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nexports.patchCapture = patchCapture;\nvar FirebaseError = /** @class */ (function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        }\n        else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function () {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}());\nexports.FirebaseError = FirebaseError;\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */ (function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        }\n        else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}());\nexports.ErrorFactory = ErrorFactory;\n\n//# sourceMappingURL=errors.js.map\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypt_1 = __webpack_require__(171);\nvar json_1 = __webpack_require__(172);\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nexports.decode = function (token) {\n    var header = {}, claims = {}, data = {}, signature = '';\n    try {\n        var parts = token.split('.');\n        header = json_1.jsonEval(crypt_1.base64Decode(parts[0]) || '');\n        claims = json_1.jsonEval(crypt_1.base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    }\n    catch (e) { }\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidTimestamp = function (token) {\n    var claims = exports.decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        }\n        else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        }\n        else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nexports.issuedAtTime = function (token) {\n    var claims = exports.decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidFormat = function (token) {\n    var decoded = exports.decode(token), claims = decoded.claims;\n    return (!!decoded.signature &&\n        !!claims &&\n        typeof claims === 'object' &&\n        claims.hasOwnProperty('iat'));\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isAdmin = function (token) {\n    var claims = exports.decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n//# sourceMappingURL=jwt.js.map\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar obj_1 = __webpack_require__(173);\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexports.querystring = function (querystringParams) {\n    var params = [];\n    obj_1.forEach(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        }\n        else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexports.querystringDecode = function (querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n//# sourceMappingURL=query.js.map\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar hash_1 = __webpack_require__(239);\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = /** @class */ (function (_super) {\n    tslib_1.__extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(opt_offset) << 24) |\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\n                        buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        }\n        else {\n            for (var i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[opt_offset] << 24) |\n                        (buf[opt_offset + 1] << 16) |\n                        (buf[opt_offset + 2] << 8) |\n                        buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(hash_1.Hash));\nexports.Sha1 = Sha1;\n\n//# sourceMappingURL=sha1.js.map\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        /**\n         * The block size for the hasher.\n         * @type {number}\n         */\n        this.blockSize = -1;\n    }\n    return Hash;\n}());\nexports.Hash = Hash;\n\n//# sourceMappingURL=hash.js.map\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\nexports.createSubscribe = createSubscribe;\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nvar ObserverProxy = /** @class */ (function () {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task\n            .then(function () {\n            executor(_this);\n        })\n            .catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber sychronously to their\n     *   call to subscribe().\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined &&\n            error === undefined &&\n            complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        }\n        else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    }\n                    else {\n                        observer.complete();\n                    }\n                }\n                catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                }\n                catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}());\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Promise.resolve(true)\n            .then(function () {\n            fn.apply(void 0, args);\n        })\n            .catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\nexports.async = async;\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n//# sourceMappingURL=subscribe.js.map\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nexports.validateArgCount = function (fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    }\n    else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName +\n            ' failed: Was called with ' +\n            argCount +\n            (argCount === 1 ? ' argument.' : ' arguments.') +\n            ' Expects ' +\n            argError +\n            '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\nexports.errorPrefix = errorPrefix;\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace)\n        return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid firebase namespace.');\n    }\n}\nexports.validateNamespace = validateNamespace;\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback)\n        return;\n    if (typeof callback !== 'function')\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid function.');\n}\nexports.validateCallback = validateCallback;\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context)\n        return;\n    if (typeof context !== 'object' || context === null)\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid context object.');\n}\nexports.validateContextObject = validateContextObject;\n\n//# sourceMappingURL=validation.js.map\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = __webpack_require__(170);\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nexports.stringToByteArray = function (str) {\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert_1.assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if (c < 65536) {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexports.stringLength = function (str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        }\n        else if (c < 2048) {\n            p += 2;\n        }\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        }\n        else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n//# sourceMappingURL=utf8.js.map\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = __webpack_require__(153);\nvar Database_1 = __webpack_require__(174);\nexports.Database = Database_1.Database;\nvar Query_1 = __webpack_require__(179);\nexports.Query = Query_1.Query;\nvar Reference_1 = __webpack_require__(162);\nexports.Reference = Reference_1.Reference;\nvar util_1 = __webpack_require__(135);\nexports.enableLogging = util_1.enableLogging;\nvar RepoManager_1 = __webpack_require__(167);\nvar INTERNAL = __webpack_require__(276);\nvar TEST_ACCESS = __webpack_require__(277);\nvar util_2 = __webpack_require__(134);\nvar ServerValue = Database_1.Database.ServerValue;\nexports.ServerValue = ServerValue;\nfunction registerDatabase(instance) {\n    // Register the Database Service with the 'firebase' namespace.\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager_1.RepoManager.getInstance().databaseFromApp(app, url); }, \n    // firebase.database namespace properties\n    {\n        Reference: Reference_1.Reference,\n        Query: Query_1.Query,\n        Database: Database_1.Database,\n        enableLogging: util_1.enableLogging,\n        INTERNAL: INTERNAL,\n        ServerValue: ServerValue,\n        TEST_ACCESS: TEST_ACCESS\n    }, null, true);\n    if (util_2.isNodeSdk()) {\n        module.exports = namespace;\n    }\n}\nexports.registerDatabase = registerDatabase;\nregisterDatabase(app_1.default);\nvar DataSnapshot_1 = __webpack_require__(163);\nexports.DataSnapshot = DataSnapshot_1.DataSnapshot;\nvar onDisconnect_1 = __webpack_require__(178);\nexports.OnDisconnect = onDisconnect_1.OnDisconnect;\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nvar DOMStorageWrapper = /** @class */ (function () {\n    /**\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\n     * @param {string} key The key to save the value under\n     * @param {?Object} value The value being stored, or null to remove the key.\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        }\n        else {\n            this.domStorage_.setItem(this.prefixedName_(key), util_1.stringify(value));\n        }\n    };\n    /**\n     * @param {string} key\n     * @return {*} The value that was stored under this key, or null\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        }\n        else {\n            return util_1.jsonEval(storedVal);\n        }\n    };\n    /**\n     * @param {string} key\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}());\nexports.DOMStorageWrapper = DOMStorageWrapper;\n\n//# sourceMappingURL=DOMStorageWrapper.js.map\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        }\n        else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if (util_1.contains(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}());\nexports.MemoryStorage = MemoryStorage;\n\n//# sourceMappingURL=MemoryStorage.js.map\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"setLogLevel\"] = setLogLevel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_logger__ = __webpack_require__(175);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_logger__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"LogLevel\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_logger__[\"a\"]; });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction setLogLevel(level) {\n    __WEBPACK_IMPORTED_MODULE_0__src_logger__[\"c\" /* instances */].forEach(function (inst) {\n        inst.logLevel = level;\n    });\n}\n\n\n//# sourceMappingURL=index.js.map\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar TransactionResult = /** @class */ (function () {\n    /**\n     * A type for the resolve value of Firebase.transaction.\n     * @constructor\n     * @dict\n     * @param {boolean} committed\n     * @param {DataSnapshot} snapshot\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    TransactionResult.prototype.toJSON = function () {\n        util_1.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n    };\n    return TransactionResult;\n}());\nexports.TransactionResult = TransactionResult;\n\n//# sourceMappingURL=TransactionResult.js.map\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexports.nextPushId = (function () {\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n    // Timestamp of last push, used to prevent local collisions if you push twice\n    // in one ms.\n    var lastPushTime = 0;\n    // We generate 72-bits of randomness which get turned into 12 characters and\n    // appended to the timestamp to prevent collisions with other clients. We\n    // store the last characters we generated because in the event of a collision,\n    // we'll use those same characters except \"incremented\" by one.\n    var lastRandChars = [];\n    return function (now) {\n        var duplicateTime = now === lastPushTime;\n        lastPushTime = now;\n        var i;\n        var timeStampChars = new Array(8);\n        for (i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            // NOTE: Can't use << here because javascript will convert to int and lose\n            // the upper bits.\n            now = Math.floor(now / 64);\n        }\n        util_1.assert(now === 0, 'Cannot push at time == 0');\n        var id = timeStampChars.join('');\n        if (!duplicateTime) {\n            for (i = 0; i < 12; i++) {\n                lastRandChars[i] = Math.floor(Math.random() * 64);\n            }\n        }\n        else {\n            // If the timestamp hasn't changed since last push, use the same random\n            // number, except incremented by 1.\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n                lastRandChars[i] = 0;\n            }\n            lastRandChars[i]++;\n        }\n        for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n        }\n        util_1.assert(id.length === 20, 'nextPushId: Length should be 20.');\n        return id;\n    };\n})();\n\n//# sourceMappingURL=NextPushId.js.map\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DataSnapshot_1 = __webpack_require__(163);\nvar Event_1 = __webpack_require__(250);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\n/**\n * Represents registration for 'value' events.\n */\nvar ValueEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?function(!DataSnapshot)} callback_\n     * @param {?function(Error)} cancelCallback_\n     * @param {?Object} context_\n     */\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\n        this.callback_ = callback_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\n        return eventType === 'value';\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent('value', this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, query.getRef(), index));\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_1 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_1.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_1 = this.callback_;\n            return function () {\n                cb_1.call(ctx, eventData.snapshot);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.matches = function (other) {\n        if (!(other instanceof ValueEventRegistration)) {\n            return false;\n        }\n        else if (!other.callback_ || !this.callback_) {\n            // If no callback specified, we consider it to match any callback.\n            return true;\n        }\n        else {\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callback_ !== null;\n    };\n    return ValueEventRegistration;\n}());\nexports.ValueEventRegistration = ValueEventRegistration;\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\nvar ChildEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n     * @param {?function(Error)} cancelCallback_\n     * @param {Object=} context_\n     */\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n        this.callbacks_ = callbacks_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n        eventToCheck =\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n        return util_1.contains(this.callbacks_, eventToCheck);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\n        util_2.assert(change.childName != null, 'Child events should have a childName.');\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent(change.type, this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_2 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_2.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_2 = this.callbacks_[eventData.eventType];\n            return function () {\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.matches = function (other) {\n        if (other instanceof ChildEventRegistration) {\n            if (!this.callbacks_ || !other.callbacks_) {\n                return true;\n            }\n            else if (this.context_ === other.context_) {\n                var otherCount = util_1.getCount(other.callbacks_);\n                var thisCount = util_1.getCount(this.callbacks_);\n                if (otherCount === thisCount) {\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n                    //  If event types don't match, not a match\n                    // If count is not 1, exact match across all\n                    if (otherCount === 1) {\n                        var otherKey /** @type {!string} */ = util_1.getAnyKey(other.callbacks_);\n                        var thisKey /** @type {!string} */ = util_1.getAnyKey(this.callbacks_);\n                        return (thisKey === otherKey &&\n                            (!other.callbacks_[otherKey] ||\n                                !this.callbacks_[thisKey] ||\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\n                    }\n                    else {\n                        // Exact match on each key.\n                        return util_1.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callbacks_ !== null;\n    };\n    return ChildEventRegistration;\n}());\nexports.ChildEventRegistration = ChildEventRegistration;\n\n//# sourceMappingURL=EventRegistration.js.map\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = /** @class */ (function () {\n    /**\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n     * @param {!DataSnapshot} snapshot The data backing the event\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        }\n        else {\n            return ref.getParent().path;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.toString = function () {\n        return (this.getPath().toString() +\n            ':' +\n            this.eventType +\n            ':' +\n            util_1.stringify(this.snapshot.exportVal()));\n    };\n    return DataEvent;\n}());\nexports.DataEvent = DataEvent;\nvar CancelEvent = /** @class */ (function () {\n    /**\n     * @param {EventRegistration} eventRegistration\n     * @param {Error} error\n     * @param {!Path} path\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}());\nexports.CancelEvent = CancelEvent;\n\n//# sourceMappingURL=Event.js.map\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar AckUserWrite_1 = __webpack_require__(252);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar util_3 = __webpack_require__(134);\nvar ImmutableTree_1 = __webpack_require__(164);\nvar ListenComplete_1 = __webpack_require__(253);\nvar Merge_1 = __webpack_require__(254);\nvar Operation_1 = __webpack_require__(145);\nvar Overwrite_1 = __webpack_require__(189);\nvar Path_1 = __webpack_require__(136);\nvar SyncPoint_1 = __webpack_require__(190);\nvar WriteTree_1 = __webpack_require__(260);\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nvar SyncTree = /** @class */ (function () {\n    /**\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n     *   to server data.\n     */\n    function SyncTree(listenProvider_) {\n        this.listenProvider_ = listenProvider_;\n        /**\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n         * @type {!ImmutableTree.<!SyncPoint>}\n         * @private\n         */\n        this.syncPointTree_ = ImmutableTree_1.ImmutableTree.Empty;\n        /**\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n         * @type {!WriteTree}\n         * @private\n         */\n        this.pendingWriteTree_ = new WriteTree_1.WriteTree();\n        this.tagToQueryMap_ = {};\n        this.queryToTagMap_ = {};\n    }\n    /**\n     * Apply the data changes for a user-generated set() or transaction() call.\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @param {number} writeId\n     * @param {boolean=} visible\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n        // Record pending write.\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n        if (!visible) {\n            return [];\n        }\n        else {\n            return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.User, path, newData));\n        }\n    };\n    /**\n     * Apply the data from a user-generated update() call\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n        // Record pending merge.\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.User, path, changeTree));\n    };\n    /**\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n     *\n     * @param {!number} writeId\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n        if (revert === void 0) { revert = false; }\n        var write = this.pendingWriteTree_.getWrite(writeId);\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n        if (!needToReevaluate) {\n            return [];\n        }\n        else {\n            var affectedTree_1 = ImmutableTree_1.ImmutableTree.Empty;\n            if (write.snap != null) {\n                // overwrite\n                affectedTree_1 = affectedTree_1.set(Path_1.Path.Empty, true);\n            }\n            else {\n                util_3.forEach(write.children, function (pathString, node) {\n                    affectedTree_1 = affectedTree_1.set(new Path_1.Path(pathString), node);\n                });\n            }\n            return this.applyOperationToSyncPoints_(new AckUserWrite_1.AckUserWrite(write.path, affectedTree_1, revert));\n        }\n    };\n    /**\n     * Apply new server data for the specified path..\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n        return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.Server, path, newData));\n    };\n    /**\n     * Apply new server data to be merged in at the specified path.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.Server, path, changeTree));\n    };\n    /**\n     * Apply a listen complete for a query\n     *\n     * @param {!Path} path\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyListenComplete = function (path) {\n        return this.applyOperationToSyncPoints_(new ListenComplete_1.ListenComplete(Operation_1.OperationSource.Server, path));\n    };\n    /**\n     * Apply new server data for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey != null) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new Overwrite_1.Overwrite(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // Query must have been removed already\n            return [];\n        }\n    };\n    /**\n     * Apply server data to be merged in for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n            var op = new Merge_1.Merge(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Apply a listen complete for a tagged query\n     *\n     * @param {!Path} path\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new ListenComplete_1.ListenComplete(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n        var path = query.path;\n        var serverCache = null;\n        var foundAncestorDefaultView = false;\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n            var relativePath = Path_1.Path.relativePath(pathToSyncPoint, path);\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || sp.hasCompleteView();\n        });\n        var syncPoint = this.syncPointTree_.get(path);\n        if (!syncPoint) {\n            syncPoint = new SyncPoint_1.SyncPoint();\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n        }\n        else {\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var serverCacheComplete;\n        if (serverCache != null) {\n            serverCacheComplete = true;\n        }\n        else {\n            serverCacheComplete = false;\n            serverCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            var subtree = this.syncPointTree_.subtree(path);\n            subtree.foreachChild(function (childName, childSyncPoint) {\n                var completeCache = childSyncPoint.getCompleteServerCache(Path_1.Path.Empty);\n                if (completeCache) {\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\n                }\n            });\n        }\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n            // We need to track a tag for this query\n            var queryKey = SyncTree.makeQueryKey_(query);\n            util_1.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n            var tag = SyncTree.getNextQueryTag_();\n            this.queryToTagMap_[queryKey] = tag;\n            // Coerce to string to avoid sparse arrays.\n            this.tagToQueryMap_['_' + tag] = queryKey;\n        }\n        var writesCache = this.pendingWriteTree_.childWrites(path);\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\n            events = events.concat(this.setupListener_(query, view));\n        }\n        return events;\n    };\n    /**\n     * Remove event callback(s).\n     *\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var _this = this;\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\n        var path = query.path;\n        var maybeSyncPoint = this.syncPointTree_.get(path);\n        var cancelEvents = [];\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n        // not loadsAllData().\n        if (maybeSyncPoint &&\n            (query.queryIdentifier() === 'default' ||\n                maybeSyncPoint.viewExistsForQuery(query))) {\n            /**\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n             */\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n            if (maybeSyncPoint.isEmpty()) {\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\n            }\n            var removed = removedAndEvents.removed;\n            cancelEvents = removedAndEvents.events;\n            // We may have just removed one of many listeners and can short-circuit this whole process\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n            // properly set up.\n            //\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n            // queryId === 'default'\n            var removingDefault = -1 !==\n                removed.findIndex(function (query) {\n                    return query.getQueryParams().loadsAllData();\n                });\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n                return parentSyncPoint.hasCompleteView();\n            });\n            if (removingDefault && !covered) {\n                var subtree = this.syncPointTree_.subtree(path);\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\n                // removal\n                if (!subtree.isEmpty()) {\n                    // We need to fold over our subtree and collect the listeners to send\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\n                    // Ok, we've collected all the listens we need. Set them up.\n                    for (var i = 0; i < newViews.length; ++i) {\n                        var view = newViews[i], newQuery = view.getQuery();\n                        var listener = this.createListenerForView_(view);\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n                    }\n                }\n                else {\n                    // There's nothing below us, so nothing we need to start listening on\n                }\n            }\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\n            if (!covered && removed.length > 0 && !cancelError) {\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n                // default. Otherwise, we need to iterate through and cancel each individual query\n                if (removingDefault) {\n                    // We don't tag default listeners\n                    var defaultTag = null;\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n                }\n                else {\n                    removed.forEach(function (queryToRemove) {\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n                    });\n                }\n            }\n            // Now, clear all of the tags we're tracking for the removed listens\n            this.removeTags_(removed);\n        }\n        else {\n            // No-op, this listener must've been already removed\n        }\n        return cancelEvents;\n    };\n    /**\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\n     * it, but as this is only used by transaction code, that should always be the case anyways.\n     *\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n     * @param {!Path} path The path to the data we want\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\n     * @return {?Node}\n     */\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n        var includeHiddenSets = true;\n        var writeTree = this.pendingWriteTree_;\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n            var relativePath = Path_1.Path.relativePath(pathSoFar, path);\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\n            if (serverCache) {\n                return serverCache;\n            }\n        });\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n    };\n    /**\n     * This collapses multiple unfiltered views into a single view, since we only need a single\n     * listener for them.\n     *\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\n     * @return {!Array.<!View>}\n     * @private\n     */\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                var completeView = maybeChildSyncPoint.getCompleteView();\n                return [completeView];\n            }\n            else {\n                // No complete view here, flatten any deeper listens into an array\n                var views_1 = [];\n                if (maybeChildSyncPoint) {\n                    views_1 = maybeChildSyncPoint.getQueryViews();\n                }\n                util_3.forEach(childMap, function (key, childViews) {\n                    views_1 = views_1.concat(childViews);\n                });\n                return views_1;\n            }\n        });\n    };\n    /**\n     * @param {!Array.<!Query>} queries\n     * @private\n     */\n    SyncTree.prototype.removeTags_ = function (queries) {\n        for (var j = 0; j < queries.length; ++j) {\n            var removedQuery = queries[j];\n            if (!removedQuery.getQueryParams().loadsAllData()) {\n                // We should have a tag for this\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n                delete this.queryToTagMap_[removedQueryKey];\n                delete this.tagToQueryMap_['_' + removedQueryTag];\n            }\n        }\n    };\n    /**\n     * Normalizes a query to a query we send the server for listening\n     * @param {!Query} query\n     * @return {!Query} The normalized query\n     * @private\n     */\n    SyncTree.queryForListening_ = function (query) {\n        if (query.getQueryParams().loadsAllData() &&\n            !query.getQueryParams().isDefault()) {\n            // We treat queries that load all data as default queries\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n            // from Query\n            return /** @type {!Query} */ query.getRef();\n        }\n        else {\n            return query;\n        }\n    };\n    /**\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\n     *\n     * @param {!Query} query\n     * @param {!View} view\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\n     * @private\n     */\n    SyncTree.prototype.setupListener_ = function (query, view) {\n        var path = query.path;\n        var tag = this.tagForQuery_(query);\n        var listener = this.createListenerForView_(view);\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n        var subtree = this.syncPointTree_.subtree(path);\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n        // may need to shadow other listens as well.\n        if (tag) {\n            util_1.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n        }\n        else {\n            // Shadow everything at or below this location, this is a default listener.\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n                if (!relativePath.isEmpty() &&\n                    maybeChildSyncPoint &&\n                    maybeChildSyncPoint.hasCompleteView()) {\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\n                }\n                else {\n                    // No default listener here, flatten any deeper queries into an array\n                    var queries_1 = [];\n                    if (maybeChildSyncPoint) {\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\n                    }\n                    util_3.forEach(childMap, function (key, childQueries) {\n                        queries_1 = queries_1.concat(childQueries);\n                    });\n                    return queries_1;\n                }\n            });\n            for (var i = 0; i < queriesToStop.length; ++i) {\n                var queryToStop = queriesToStop[i];\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n            }\n        }\n        return events;\n    };\n    /**\n     *\n     * @param {!View} view\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\n     * @private\n     */\n    SyncTree.prototype.createListenerForView_ = function (view) {\n        var _this = this;\n        var query = view.getQuery();\n        var tag = this.tagForQuery_(query);\n        return {\n            hashFn: function () {\n                var cache = view.getServerCache() || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                return cache.hash();\n            },\n            onComplete: function (status) {\n                if (status === 'ok') {\n                    if (tag) {\n                        return _this.applyTaggedListenComplete(query.path, tag);\n                    }\n                    else {\n                        return _this.applyListenComplete(query.path);\n                    }\n                }\n                else {\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n                    var error = util_2.errorForServerCode(status, query);\n                    return _this.removeEventRegistration(query, \n                    /*eventRegistration*/ null, error);\n                }\n            }\n        };\n    };\n    /**\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n     * @private\n     * @param {!Query} query\n     * @return {string}\n     */\n    SyncTree.makeQueryKey_ = function (query) {\n        return query.path.toString() + '$' + query.queryIdentifier();\n    };\n    /**\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n     * @private\n     * @param {!string} queryKey\n     * @return {{queryId: !string, path: !Path}}\n     */\n    SyncTree.parseQueryKey_ = function (queryKey) {\n        var splitIndex = queryKey.indexOf('$');\n        util_1.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n        return {\n            queryId: queryKey.substr(splitIndex + 1),\n            path: new Path_1.Path(queryKey.substr(0, splitIndex))\n        };\n    };\n    /**\n     * Return the query associated with the given tag, if we have one\n     * @param {!number} tag\n     * @return {?string}\n     * @private\n     */\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\n        return this.tagToQueryMap_['_' + tag];\n    };\n    /**\n     * Return the tag associated with the given query.\n     * @param {!Query} query\n     * @return {?number}\n     * @private\n     */\n    SyncTree.prototype.tagForQuery_ = function (query) {\n        var queryKey = SyncTree.makeQueryKey_(query);\n        return util_3.safeGet(this.queryToTagMap_, queryKey);\n    };\n    /**\n     * Static accessor for query tags.\n     * @return {number}\n     * @private\n     */\n    SyncTree.getNextQueryTag_ = function () {\n        return SyncTree.nextQueryTag_++;\n    };\n    /**\n     * A helper method to apply tagged operations\n     *\n     * @param {!Path} queryPath\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n        var syncPoint = this.syncPointTree_.get(queryPath);\n        util_1.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n        return syncPoint.applyOperation(operation, writesCache, \n        /*serverCache=*/ null);\n    };\n    /**\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n     *\n     * NOTES:\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n     *   3. A snapshot Node with cached server data, if we have it.\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\n     *\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path_1.Path.Empty));\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        if (operation.path.isEmpty()) {\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n        }\n        else {\n            var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\n            if (serverCache == null && syncPoint != null) {\n                serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n            }\n            var events = [];\n            var childName = operation.path.getFront();\n            var childOperation = operation.operationForChild(childName);\n            var childTree = syncPointTree.children.get(childName);\n            if (childTree && childOperation) {\n                var childServerCache = serverCache\n                    ? serverCache.getImmediateChild(childName)\n                    : null;\n                var childWritesCache = writesCache.child(childName);\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n            if (syncPoint) {\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n            }\n            return events;\n        }\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        var _this = this;\n        var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\n        if (serverCache == null && syncPoint != null) {\n            serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var events = [];\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\n            var childServerCache = serverCache\n                ? serverCache.getImmediateChild(childName)\n                : null;\n            var childWritesCache = writesCache.child(childName);\n            var childOperation = operation.operationForChild(childName);\n            if (childOperation) {\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n        });\n        if (syncPoint) {\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n        }\n        return events;\n    };\n    /**\n     * Static tracker for next query tag.\n     * @type {number}\n     * @private\n     */\n    SyncTree.nextQueryTag_ = 1;\n    return SyncTree;\n}());\nexports.SyncTree = SyncTree;\n\n//# sourceMappingURL=SyncTree.js.map\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Path_1 = __webpack_require__(136);\nvar Operation_1 = __webpack_require__(145);\nvar AckUserWrite = /** @class */ (function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n    /**@inheritDoc */ path, \n    /**@inheritDoc */ affectedTree, \n    /**@inheritDoc */ revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = Operation_1.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            util_1.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        }\n        else if (this.affectedTree.value != null) {\n            util_1.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        }\n        else {\n            var childTree = this.affectedTree.subtree(new Path_1.Path(childName));\n            return new AckUserWrite(Path_1.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}());\nexports.AckUserWrite = AckUserWrite;\n\n//# sourceMappingURL=AckUserWrite.js.map\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = __webpack_require__(136);\nvar Operation_1 = __webpack_require__(145);\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nvar ListenComplete = /** @class */ (function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, Path_1.Path.Empty);\n        }\n        else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}());\nexports.ListenComplete = ListenComplete;\n\n//# sourceMappingURL=ListenComplete.js.map\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = __webpack_require__(145);\nvar Overwrite_1 = __webpack_require__(189);\nvar Path_1 = __webpack_require__(136);\nvar util_1 = __webpack_require__(134);\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\nvar Merge = /** @class */ (function () {\n    function Merge(\n    /**@inheritDoc */ source, \n    /**@inheritDoc */ path, \n    /**@inheritDoc */ children) {\n        this.source = source;\n        this.path = path;\n        this.children = children;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.MERGE;\n    }\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            var childTree = this.children.subtree(new Path_1.Path(childName));\n            if (childTree.isEmpty()) {\n                // This child is unaffected\n                return null;\n            }\n            else if (childTree.value) {\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n                return new Overwrite_1.Overwrite(this.source, Path_1.Path.Empty, childTree.value);\n            }\n            else {\n                // This is a merge at a deeper level\n                return new Merge(this.source, Path_1.Path.Empty, childTree);\n            }\n        }\n        else {\n            util_1.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n            return new Merge(this.source, this.path.popFront(), this.children);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.toString = function () {\n        return ('Operation(' +\n            this.path +\n            ': ' +\n            this.source.toString() +\n            ' merge: ' +\n            this.children.toString() +\n            ')');\n    };\n    return Merge;\n}());\nexports.Merge = Merge;\n\n//# sourceMappingURL=Merge.js.map\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = __webpack_require__(165);\nvar ViewProcessor_1 = __webpack_require__(256);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar CacheNode_1 = __webpack_require__(160);\nvar ViewCache_1 = __webpack_require__(191);\nvar EventGenerator_1 = __webpack_require__(259);\nvar util_1 = __webpack_require__(134);\nvar Operation_1 = __webpack_require__(145);\nvar Change_1 = __webpack_require__(148);\nvar PriorityIndex_1 = __webpack_require__(137);\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nvar View = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() ||\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                }\n                else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        }\n        else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation_1.OperationType.MERGE &&\n            operation.source.queryId !== null) {\n            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration\n            ? [eventRegistration]\n            : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}());\nexports.View = View;\n\n//# sourceMappingURL=View.js.map\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = __webpack_require__(145);\nvar util_1 = __webpack_require__(134);\nvar ChildChangeAccumulator_1 = __webpack_require__(257);\nvar Change_1 = __webpack_require__(148);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar KeyIndex_1 = __webpack_require__(150);\nvar ImmutableTree_1 = __webpack_require__(164);\nvar Path_1 = __webpack_require__(136);\nvar CompleteChildSource_1 = __webpack_require__(258);\n/**\n * @constructor\n * @struct\n */\nvar ProcessorResult = /** @class */ (function () {\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Array.<!Change>} changes\n     */\n    function ProcessorResult(viewCache, changes) {\n        this.viewCache = viewCache;\n        this.changes = changes;\n    }\n    return ProcessorResult;\n}());\nexports.ProcessorResult = ProcessorResult;\n/**\n * @constructor\n */\nvar ViewProcessor = /** @class */ (function () {\n    /**\n     * @param {!NodeFilter} filter_\n     */\n    function ViewProcessor(filter_) {\n        this.filter_ = filter_;\n    }\n    /**\n     * @param {!ViewCache} viewCache\n     */\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\n        util_1.assert(viewCache\n            .getEventCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n        util_1.assert(viewCache\n            .getServerCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @return {!ProcessorResult}\n     */\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n        var accumulator = new ChildChangeAccumulator_1.ChildChangeAccumulator();\n        var newViewCache, filterServerNode;\n        if (operation.type === Operation_1.OperationType.OVERWRITE) {\n            var overwrite = operation;\n            if (overwrite.source.fromUser) {\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(overwrite.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n                // again\n                filterServerNode =\n                    overwrite.source.tagged ||\n                        (oldViewCache.getServerCache().isFiltered() &&\n                            !overwrite.path.isEmpty());\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.MERGE) {\n            var merge = operation;\n            if (merge.source.fromUser) {\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(merge.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered\n                filterServerNode =\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.ACK_USER_WRITE) {\n            var ackUserWrite = operation;\n            if (!ackUserWrite.revert) {\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n            }\n            else {\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.LISTEN_COMPLETE) {\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n        }\n        else {\n            throw util_1.assertionError('Unknown operation type: ' + operation.type);\n        }\n        var changes = accumulator.getChanges();\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n        return new ProcessorResult(newViewCache, changes);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!ViewCache} newViewCache\n     * @param {!Array.<!Change>} accumulator\n     * @private\n     */\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n        var eventSnap = newViewCache.getEventCache();\n        if (eventSnap.isFullyInitialized()) {\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n            if (accumulator.length > 0 ||\n                !oldViewCache.getEventCache().isFullyInitialized() ||\n                (isLeafOrEmpty &&\n                    !eventSnap\n                        .getNode()\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\n                !eventSnap\n                    .getNode()\n                    .getPriority()\n                    .equals(oldCompleteSnap.getPriority())) {\n                accumulator.push(Change_1.Change.valueChange(\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\n            }\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} changePath\n     * @param {!WriteTreeRef} writesCache\n     * @param {!CompleteChildSource} source\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n        var oldEventSnap = viewCache.getEventCache();\n        if (writesCache.shadowingWrite(changePath) != null) {\n            // we have a shadowing write, ignore changes\n            return viewCache;\n        }\n        else {\n            var newEventCache = void 0, serverNode = void 0;\n            if (changePath.isEmpty()) {\n                // TODO: figure out how this plays with \"sliding ack windows\"\n                util_1.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n                if (viewCache.getServerCache().isFiltered()) {\n                    // We need to special case this, because we need to only apply writes to complete children, or\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\n                    // writes cannot be guaranteed to be complete\n                    var serverCache = viewCache.getCompleteServerSnap();\n                    var completeChildren = serverCache instanceof ChildrenNode_1.ChildrenNode\n                        ? serverCache\n                        : ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n                }\n                else {\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n                }\n            }\n            else {\n                var childKey = changePath.getFront();\n                if (childKey == '.priority') {\n                    util_1.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n                    var oldEventNode = oldEventSnap.getNode();\n                    serverNode = viewCache.getServerCache().getNode();\n                    // we might have overwrites for this priority\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n                    if (updatedPriority != null) {\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n                    }\n                    else {\n                        // priority didn't change, keep old node\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n                else {\n                    var childChangePath = changePath.popFront();\n                    // update child\n                    var newEventChild = void 0;\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\n                        serverNode = viewCache.getServerCache().getNode();\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n                        if (eventChildUpdate != null) {\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey)\n                                .updateChild(childChangePath, eventChildUpdate);\n                        }\n                        else {\n                            // Nothing changed, just keep the old child\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey);\n                        }\n                    }\n                    else {\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                    }\n                    if (newEventChild != null) {\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n                    }\n                    else {\n                        // no complete child available or no change\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n            }\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n        }\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n        var oldServerSnap = oldViewCache.getServerCache();\n        var newServerCache;\n        var serverFilter = filterServerNode\n            ? this.filter_\n            : this.filter_.getIndexedFilter();\n        if (changePath.isEmpty()) {\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n        }\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n            var newServerNode = oldServerSnap\n                .getNode()\n                .updateChild(changePath, changedSnap);\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\n                changePath.getLength() > 1) {\n                // We don't update incomplete nodes with updates intended for other listeners\n                return oldViewCache;\n            }\n            var childChangePath = changePath.popFront();\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n            if (childKey == '.priority') {\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n            }\n            else {\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, null);\n            }\n        }\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n        var oldEventSnap = oldViewCache.getEventCache();\n        var newViewCache, newEventCache;\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n        if (changePath.isEmpty()) {\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (childKey === '.priority') {\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n            }\n            else {\n                var childChangePath = changePath.popFront();\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                var newChild = void 0;\n                if (childChangePath.isEmpty()) {\n                    // Child overwrite, we can replace the child\n                    newChild = changedSnap;\n                }\n                else {\n                    var childNode = source.getCompleteChild(childKey);\n                    if (childNode != null) {\n                        if (childChangePath.getBack() === '.priority' &&\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\n                            // This is a priority update on an empty node. If this node exists on the server, the\n                            // server will send down the priority in the update, so ignore for now\n                            newChild = childNode;\n                        }\n                        else {\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\n                        }\n                    }\n                    else {\n                        // There is no complete child node available\n                        newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    }\n                }\n                if (!oldChild.equals(newChild)) {\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n                }\n                else {\n                    newViewCache = oldViewCache;\n                }\n            }\n        }\n        return newViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {string} childKey\n     * @return {boolean}\n     * @private\n     */\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n        return viewCache.getEventCache().isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n        var _this = this;\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!Node} node\n     * @param {ImmutableTree.<!Node>} merge\n     * @return {!Node}\n     * @private\n     */\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n        merge.foreach(function (relativePath, childNode) {\n            node = node.updateChild(relativePath, childNode);\n        });\n        return node;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n        var _this = this;\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n        // wait for the complete data update coming soon.\n        if (viewCache\n            .getServerCache()\n            .getNode()\n            .isEmpty() &&\n            !viewCache.getServerCache().isFullyInitialized()) {\n            return viewCache;\n        }\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        var viewMergeTree;\n        if (path.isEmpty()) {\n            viewMergeTree = changedChildren;\n        }\n        else {\n            viewMergeTree = ImmutableTree_1.ImmutableTree.Empty.setTree(path, changedChildren);\n        }\n        var serverNode = viewCache.getServerCache().getNode();\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n            if (serverNode.hasChild(childKey)) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\n                childMergeTree.value == null;\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} ackPath\n     * @param {!ImmutableTree<!boolean>} affectedTree\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n        if (writesCache.shadowingWrite(ackPath) != null) {\n            return viewCache;\n        }\n        // Only filter server node if it is currently filtered\n        var filterServerNode = viewCache.getServerCache().isFiltered();\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n        // now that it won't be shadowed.\n        var serverCache = viewCache.getServerCache();\n        if (affectedTree.value != null) {\n            // This is an overwrite.\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\n                serverCache.isCompleteForPath(ackPath)) {\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else if (ackPath.isEmpty()) {\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n                // should just re-apply whatever we have in our cache as a merge.\n                var changedChildren_1 = ImmutableTree_1.ImmutableTree.Empty;\n                serverCache.getNode().forEachChild(KeyIndex_1.KEY_INDEX, function (name, node) {\n                    changedChildren_1 = changedChildren_1.set(new Path_1.Path(name), node);\n                });\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else {\n                return viewCache;\n            }\n        }\n        else {\n            // This is a merge.\n            var changedChildren_2 = ImmutableTree_1.ImmutableTree.Empty;\n            affectedTree.foreach(function (mergePath, value) {\n                var serverCachePath = ackPath.child(mergePath);\n                if (serverCache.isCompleteForPath(serverCachePath)) {\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n                }\n            });\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n        var oldServerNode = viewCache.getServerCache();\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, accumulator);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n        var complete;\n        if (writesCache.shadowingWrite(path) != null) {\n            return viewCache;\n        }\n        else {\n            var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n            var oldEventCache = viewCache.getEventCache().getNode();\n            var newEventCache = void 0;\n            if (path.isEmpty() || path.getFront() === '.priority') {\n                var newNode = void 0;\n                if (viewCache.getServerCache().isFullyInitialized()) {\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                }\n                else {\n                    var serverChildren = viewCache.getServerCache().getNode();\n                    util_1.assert(serverChildren instanceof ChildrenNode_1.ChildrenNode, 'serverChildren would be complete if leaf node');\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\n                }\n                newNode = newNode;\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n            }\n            else {\n                var childKey = path.getFront();\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                if (newChild == null &&\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\n                    newChild = oldEventCache.getImmediateChild(childKey);\n                }\n                if (newChild != null) {\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n                }\n                else if (viewCache\n                    .getEventCache()\n                    .getNode()\n                    .hasChild(childKey)) {\n                    // No complete child available, delete the existing one, if any\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n                }\n                else {\n                    newEventCache = oldEventCache;\n                }\n                if (newEventCache.isEmpty() &&\n                    viewCache.getServerCache().isFullyInitialized()) {\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    if (complete.isLeafNode()) {\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n                    }\n                }\n            }\n            complete =\n                viewCache.getServerCache().isFullyInitialized() ||\n                    writesCache.shadowingWrite(Path_1.Path.Empty) != null;\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n        }\n    };\n    return ViewProcessor;\n}());\nexports.ViewProcessor = ViewProcessor;\n\n//# sourceMappingURL=ViewProcessor.js.map\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Change_1 = __webpack_require__(148);\nvar util_2 = __webpack_require__(134);\n/**\n * @constructor\n */\nvar ChildChangeAccumulator = /** @class */ (function () {\n    function ChildChangeAccumulator() {\n        this.changeMap_ = {};\n    }\n    /**\n     * @param {!Change} change\n     */\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n        var type = change.type;\n        var childKey /** @type {!string} */ = change.childName;\n        util_2.assert(type == Change_1.Change.CHILD_ADDED ||\n            type == Change_1.Change.CHILD_CHANGED ||\n            type == Change_1.Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n        util_2.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n        var oldChange = util_1.safeGet(this.changeMap_, childKey);\n        if (oldChange) {\n            var oldType = oldChange.type;\n            if (type == Change_1.Change.CHILD_ADDED && oldType == Change_1.Change.CHILD_REMOVED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                delete this.changeMap_[childKey];\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childRemovedChange(childKey, oldChange.oldSnap);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                this.changeMap_[childKey] = Change_1.Change.childAddedChange(childKey, change.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n            }\n            else {\n                throw util_2.assertionError('Illegal combination of changes: ' +\n                    change +\n                    ' occurred after ' +\n                    oldChange);\n            }\n        }\n        else {\n            this.changeMap_[childKey] = change;\n        }\n    };\n    /**\n     * @return {!Array.<!Change>}\n     */\n    ChildChangeAccumulator.prototype.getChanges = function () {\n        return util_1.getValues(this.changeMap_);\n    };\n    return ChildChangeAccumulator;\n}());\nexports.ChildChangeAccumulator = ChildChangeAccumulator;\n\n//# sourceMappingURL=ChildChangeAccumulator.js.map\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = __webpack_require__(160);\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nvar NoCompleteChildSource_ = /** @class */ (function () {\n    function NoCompleteChildSource_() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n        return null;\n    };\n    return NoCompleteChildSource_;\n}());\nexports.NoCompleteChildSource_ = NoCompleteChildSource_;\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\n    /**\n     * @param {!WriteTreeRef} writes_\n     * @param {!ViewCache} viewCache_\n     * @param {?Node} optCompleteServerCache_\n     */\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\n        this.writes_ = writes_;\n        this.viewCache_ = viewCache_;\n        this.optCompleteServerCache_ = optCompleteServerCache_;\n    }\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n        var node = this.viewCache_.getEventCache();\n        if (node.isCompleteForChild(childKey)) {\n            return node.getNode().getImmediateChild(childKey);\n        }\n        else {\n            var serverNode = this.optCompleteServerCache_ != null\n                ? new CacheNode_1.CacheNode(this.optCompleteServerCache_, true, false)\n                : this.viewCache_.getServerCache();\n            return this.writes_.calcCompleteChild(childKey, serverNode);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n        var completeServerData = this.optCompleteServerCache_ != null\n            ? this.optCompleteServerCache_\n            : this.viewCache_.getCompleteServerSnap();\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n        if (nodes.length === 0) {\n            return null;\n        }\n        else {\n            return nodes[0];\n        }\n    };\n    return WriteTreeCompleteChildSource;\n}());\nexports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;\n\n//# sourceMappingURL=CompleteChildSource.js.map\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = __webpack_require__(140);\nvar Change_1 = __webpack_require__(148);\nvar util_1 = __webpack_require__(134);\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nvar EventGenerator = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     */\n    function EventGenerator(query_) {\n        this.query_ = query_;\n        /**\n         * @private\n         * @type {!Index}\n         */\n        this.index_ = this.query_.getQueryParams().getIndex();\n    }\n    /**\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n     *\n     * Notes:\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\n     *    our index.\n     *  - prevName will be calculated based on the index ordering.\n     *\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {!Array.<!EventRegistration>} eventRegistrations\n     * @return {!Array.<!Event>}\n     */\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n        var _this = this;\n        var events = [];\n        var moves = [];\n        changes.forEach(function (change) {\n            if (change.type === Change_1.Change.CHILD_CHANGED &&\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n                moves.push(Change_1.Change.childMovedChange(change.childName, change.snapshotNode));\n            }\n        });\n        this.generateEventsForType_(events, Change_1.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.VALUE, changes, eventRegistrations, eventCache);\n        return events;\n    };\n    /**\n     * Given changes of a single change type, generate the corresponding events.\n     *\n     * @param {!Array.<!Event>} events\n     * @param {!string} eventType\n     * @param {!Array.<!Change>} changes\n     * @param {!Array.<!EventRegistration>} registrations\n     * @param {!Node} eventCache\n     * @private\n     */\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n        var _this = this;\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\n        filteredChanges.sort(this.compareChanges_.bind(this));\n        filteredChanges.forEach(function (change) {\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\n            registrations.forEach(function (registration) {\n                if (registration.respondsTo(change.type)) {\n                    events.push(registration.createEvent(materializedChange, _this.query_));\n                }\n            });\n        });\n    };\n    /**\n     * @param {!Change} change\n     * @param {!Node} eventCache\n     * @return {!Change}\n     * @private\n     */\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n        if (change.type === 'value' || change.type === 'child_removed') {\n            return change;\n        }\n        else {\n            change.prevName = eventCache.getPredecessorChildName(\n            /** @type {!string} */\n            change.childName, change.snapshotNode, this.index_);\n            return change;\n        }\n    };\n    /**\n     * @param {!Change} a\n     * @param {!Change} b\n     * @return {number}\n     * @private\n     */\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\n        if (a.childName == null || b.childName == null) {\n            throw util_1.assertionError('Should only compare child_ events.');\n        }\n        var aWrapped = new Node_1.NamedNode(a.childName, a.snapshotNode);\n        var bWrapped = new Node_1.NamedNode(b.childName, b.snapshotNode);\n        return this.index_.compare(aWrapped, bWrapped);\n    };\n    return EventGenerator;\n}());\nexports.EventGenerator = EventGenerator;\n\n//# sourceMappingURL=EventGenerator.js.map\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\nvar Path_1 = __webpack_require__(136);\nvar CompoundWrite_1 = __webpack_require__(261);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar ChildrenNode_1 = __webpack_require__(138);\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\nvar WriteTree = /** @class */ (function () {\n    function WriteTree() {\n        /**\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\n         * applyLocally=false or writes that are completely shadowed by other writes.\n         *\n         * @type {!CompoundWrite}\n         * @private\n         */\n        this.visibleWrites_ = CompoundWrite_1.CompoundWrite.Empty;\n        /**\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n         * used by transactions).\n         *\n         * @type {!Array.<!WriteRecord>}\n         * @private\n         */\n        this.allWrites_ = [];\n        this.lastWriteId_ = -1;\n    }\n    /**\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n     *\n     * @param {!Path} path\n     * @return {!WriteTreeRef}\n     */\n    WriteTree.prototype.childWrites = function (path) {\n        return new WriteTreeRef(path, this);\n    };\n    /**\n     * Record a new overwrite from user code.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} writeId\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n     */\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n        if (visible === undefined) {\n            visible = true;\n        }\n        this.allWrites_.push({\n            path: path,\n            snap: snap,\n            writeId: writeId,\n            visible: visible\n        });\n        if (visible) {\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n        }\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * Record a new merge from user code.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     */\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n        this.allWrites_.push({\n            path: path,\n            children: changedChildren,\n            writeId: writeId,\n            visible: true\n        });\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * @param {!number} writeId\n     * @return {?WriteRecord}\n     */\n    WriteTree.prototype.getWrite = function (writeId) {\n        for (var i = 0; i < this.allWrites_.length; i++) {\n            var record = this.allWrites_[i];\n            if (record.writeId === writeId) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n     *\n     * @param {!number} writeId\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n     * events as a result).\n     */\n    WriteTree.prototype.removeWrite = function (writeId) {\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n        // out of order.\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n        var _this = this;\n        var idx = this.allWrites_.findIndex(function (s) {\n            return s.writeId === writeId;\n        });\n        util_2.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n        var writeToRemove = this.allWrites_[idx];\n        this.allWrites_.splice(idx, 1);\n        var removedWriteWasVisible = writeToRemove.visible;\n        var removedWriteOverlapsWithOtherWrites = false;\n        var i = this.allWrites_.length - 1;\n        while (removedWriteWasVisible && i >= 0) {\n            var currentWrite = this.allWrites_[i];\n            if (currentWrite.visible) {\n                if (i >= idx &&\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n                    // The removed write was completely shadowed by a subsequent write.\n                    removedWriteWasVisible = false;\n                }\n                else if (writeToRemove.path.contains(currentWrite.path)) {\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\n                    removedWriteOverlapsWithOtherWrites = true;\n                }\n            }\n            i--;\n        }\n        if (!removedWriteWasVisible) {\n            return false;\n        }\n        else if (removedWriteOverlapsWithOtherWrites) {\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\n            this.resetTree_();\n            return true;\n        }\n        else {\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n            if (writeToRemove.snap) {\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n            }\n            else {\n                var children = writeToRemove.children;\n                util_1.forEach(children, function (childName) {\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n                });\n            }\n            return true;\n        }\n    };\n    /**\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n     * No server data is considered.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.getCompleteWriteData = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n     * writes), attempt to calculate a complete snapshot for the given path\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        if (!writeIdsToExclude && !includeHiddenWrites) {\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n            if (shadowingNode != null) {\n                return shadowingNode;\n            }\n            else {\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n                if (subMerge.isEmpty()) {\n                    return completeServerCache;\n                }\n                else if (completeServerCache == null &&\n                    !subMerge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n                    return null;\n                }\n                else {\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return subMerge.apply(layeredCache);\n                }\n            }\n        }\n        else {\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            if (!includeHiddenWrites && merge.isEmpty()) {\n                return completeServerCache;\n            }\n            else {\n                // If the server cache is null, and we don't have a complete cache, we need to return null\n                if (!includeHiddenWrites &&\n                    completeServerCache == null &&\n                    !merge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    return null;\n                }\n                else {\n                    var filter = function (write) {\n                        return ((write.visible || includeHiddenWrites) &&\n                            (!writeIdsToExclude ||\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\n                    };\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return mergeAtPath.apply(layeredCache);\n                }\n            }\n        }\n    };\n    /**\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n     * Used when creating new views, to pre-fill their complete event children snapshot.\n     *\n     * @param {!Path} treePath\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n        var completeChildren = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n        if (topLevelSet) {\n            if (!topLevelSet.isLeafNode()) {\n                // we're shadowing everything. Return the children.\n                topLevelSet.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childSnap) {\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n                });\n            }\n            return completeChildren;\n        }\n        else if (completeServerChildren) {\n            // Layer any children we have on top of this\n            // We know we don't have a top-level set, so just enumerate existing children\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n            completeServerChildren.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                var node = merge_1\n                    .childCompoundWrite(new Path_1.Path(childName))\n                    .apply(childNode);\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\n            });\n            // Add any complete children we have from the set\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n        else {\n            // We don't have anything to layer on top of. Layer on any children we have\n            // Note that we can return an empty snap if we have a defined delete\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            merge.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n    };\n    /**\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\n     * applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events\n     *\n     * Either existingEventSnap or existingServerSnap must exist\n     *\n     * @param {!Path} treePath\n     * @param {!Path} childPath\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n        util_2.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n        var path = treePath.child(childPath);\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\n            // At this point we can probably guarantee that we're in case 2, meaning no events\n            // May need to check visibility while doing the findRootMostValueAndPath call\n            return null;\n        }\n        else {\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\n            if (childMerge.isEmpty()) {\n                // We're not shadowing at all. Case 1\n                return existingServerSnap.getChild(childPath);\n            }\n            else {\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n                // However this is tricky to find out, since user updates don't necessary change the server\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n                // only check if the updates change the serverNode.\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n                return childMerge.apply(existingServerSnap.getChild(childPath));\n            }\n        }\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!Path} treePath\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n        var path = treePath.child(childKey);\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n        if (shadowingNode != null) {\n            return shadowingNode;\n        }\n        else {\n            if (existingServerSnap.isCompleteForChild(childKey)) {\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.shadowingWrite = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window.\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n        var toIterate;\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\n        var shadowingNode = merge.getCompleteNode(Path_1.Path.Empty);\n        if (shadowingNode != null) {\n            toIterate = shadowingNode;\n        }\n        else if (completeServerData != null) {\n            toIterate = merge.apply(completeServerData);\n        }\n        else {\n            // no children to iterate on\n            return [];\n        }\n        toIterate = toIterate.withIndex(index);\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n            var nodes = [];\n            var cmp = index.getCompare();\n            var iter = reverse\n                ? toIterate.getReverseIteratorFrom(startPost, index)\n                : toIterate.getIteratorFrom(startPost, index);\n            var next = iter.getNext();\n            while (next && nodes.length < count) {\n                if (cmp(next, startPost) !== 0) {\n                    nodes.push(next);\n                }\n                next = iter.getNext();\n            }\n            return nodes;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @param {!WriteRecord} writeRecord\n     * @param {!Path} path\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n        if (writeRecord.snap) {\n            return writeRecord.path.contains(path);\n        }\n        else {\n            // findKey can return undefined, so use !! to coerce to boolean\n            return !!util_1.findKey(writeRecord.children, function (childSnap, childName) {\n                return writeRecord.path.child(childName).contains(path);\n            });\n        }\n    };\n    /**\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n     * @private\n     */\n    WriteTree.prototype.resetTree_ = function () {\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path_1.Path.Empty);\n        if (this.allWrites_.length > 0) {\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n        }\n        else {\n            this.lastWriteId_ = -1;\n        }\n    };\n    /**\n     * The default filter used when constructing the tree. Keep everything that's visible.\n     *\n     * @param {!WriteRecord} write\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.DefaultFilter_ = function (write) {\n        return write.visible;\n    };\n    /**\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n     * event data at that path.\n     *\n     * @param {!Array.<!WriteRecord>} writes\n     * @param {!function(!WriteRecord):boolean} filter\n     * @param {!Path} treeRoot\n     * @return {!CompoundWrite}\n     * @private\n     */\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n        var compoundWrite = CompoundWrite_1.CompoundWrite.Empty;\n        for (var i = 0; i < writes.length; ++i) {\n            var write = writes[i];\n            // Theory, a later set will either:\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n            if (filter(write)) {\n                var writePath = write.path;\n                var relativePath = void 0;\n                if (write.snap) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, write.snap.getChild(relativePath));\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else if (write.children) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        if (relativePath.isEmpty()) {\n                            compoundWrite = compoundWrite.addWrites(Path_1.Path.Empty, write.children);\n                        }\n                        else {\n                            var child = util_1.safeGet(write.children, relativePath.getFront());\n                            if (child) {\n                                // There exists a child in this node that matches the root path\n                                var deepNode = child.getChild(relativePath.popFront());\n                                compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, deepNode);\n                            }\n                        }\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else {\n                    throw util_2.assertionError('WriteRecord should have .snap or .children');\n                }\n            }\n        }\n        return compoundWrite;\n    };\n    return WriteTree;\n}());\nexports.WriteTree = WriteTree;\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\nvar WriteTreeRef = /** @class */ (function () {\n    /**\n     * @param {!Path} path\n     * @param {!WriteTree} writeTree\n     */\n    function WriteTreeRef(path, writeTree) {\n        this.treePath_ = path;\n        this.writeTree_ = writeTree;\n    }\n    /**\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n     * can lead to a more expensive calculation.\n     *\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n    };\n    /**\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n     * mix of the given server data and write data.\n     *\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n    };\n    /**\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n     * if anything, needs to be applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events should be raised\n     *\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n     *\n     * @param {!Path} path\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window\n     *\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerCache\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n    };\n    /**\n     * Return a WriteTreeRef for a child.\n     *\n     * @param {string} childName\n     * @return {!WriteTreeRef}\n     */\n    WriteTreeRef.prototype.child = function (childName) {\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n    };\n    return WriteTreeRef;\n}());\nexports.WriteTreeRef = WriteTreeRef;\n\n//# sourceMappingURL=WriteTree.js.map\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ImmutableTree_1 = __webpack_require__(164);\nvar Path_1 = __webpack_require__(136);\nvar util_1 = __webpack_require__(134);\nvar Node_1 = __webpack_require__(140);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar util_2 = __webpack_require__(134);\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n *\n * @constructor\n * @param {!ImmutableTree.<!Node>} writeTree\n */\nvar CompoundWrite = /** @class */ (function () {\n    function CompoundWrite(writeTree_) {\n        this.writeTree_ = writeTree_;\n    }\n    /**\n     * @param {!Path} path\n     * @param {!Node} node\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrite = function (path, node) {\n        if (path.isEmpty()) {\n            return new CompoundWrite(new ImmutableTree_1.ImmutableTree(node));\n        }\n        else {\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n            if (rootmost != null) {\n                var rootMostPath = rootmost.path;\n                var value = rootmost.value;\n                var relativePath = Path_1.Path.relativePath(rootMostPath, path);\n                value = value.updateChild(relativePath, node);\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n            }\n            else {\n                var subtree = new ImmutableTree_1.ImmutableTree(node);\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\n                return new CompoundWrite(newWriteTree);\n            }\n        }\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} updates\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrites = function (path, updates) {\n        var newWrite = this;\n        util_1.forEach(updates, function (childKey, node) {\n            newWrite = newWrite.addWrite(path.child(childKey), node);\n        });\n        return newWrite;\n    };\n    /**\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n     * location, which must be removed by calling this method with that path.\n     *\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\n     */\n    CompoundWrite.prototype.removeWrite = function (path) {\n        if (path.isEmpty()) {\n            return CompoundWrite.Empty;\n        }\n        else {\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree_1.ImmutableTree.Empty);\n            return new CompoundWrite(newWriteTree);\n        }\n    };\n    /**\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n     * considered \"complete\".\n     *\n     * @param {!Path} path The path to check for\n     * @return {boolean} Whether there is a complete write at that path\n     */\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\n        return this.getCompleteNode(path) != null;\n    };\n    /**\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n     * writes from deeper paths, but will return child nodes from a more shallow path.\n     *\n     * @param {!Path} path The path to get a complete write\n     * @return {?Node} The node if complete at that path, or null otherwise.\n     */\n    CompoundWrite.prototype.getCompleteNode = function (path) {\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n        if (rootmost != null) {\n            return this.writeTree_\n                .get(rootmost.path)\n                .getChild(Path_1.Path.relativePath(rootmost.path, path));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Returns all children that are guaranteed to be a complete overwrite.\n     *\n     * @return {!Array.<NamedNode>} A list of all complete children.\n     */\n    CompoundWrite.prototype.getCompleteChildren = function () {\n        var children = [];\n        var node = this.writeTree_.value;\n        if (node != null) {\n            // If it's a leaf node, it has no children; so nothing to do.\n            if (!node.isLeafNode()) {\n                node.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                    children.push(new Node_1.NamedNode(childName, childNode));\n                });\n            }\n        }\n        else {\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n                if (childTree.value != null) {\n                    children.push(new Node_1.NamedNode(childName, childTree.value));\n                }\n            });\n        }\n        return children;\n    };\n    /**\n     * @param {!Path} path\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else {\n            var shadowingNode = this.getCompleteNode(path);\n            if (shadowingNode != null) {\n                return new CompoundWrite(new ImmutableTree_1.ImmutableTree(shadowingNode));\n            }\n            else {\n                return new CompoundWrite(this.writeTree_.subtree(path));\n            }\n        }\n    };\n    /**\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n     * @return {boolean} Whether this CompoundWrite is empty\n     */\n    CompoundWrite.prototype.isEmpty = function () {\n        return this.writeTree_.isEmpty();\n    };\n    /**\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n     * node\n     * @param {!Node} node The node to apply this CompoundWrite to\n     * @return {!Node} The node with all writes applied\n     */\n    CompoundWrite.prototype.apply = function (node) {\n        return CompoundWrite.applySubtreeWrite_(Path_1.Path.Empty, this.writeTree_, node);\n    };\n    /**\n     * @type {!CompoundWrite}\n     */\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree_1.ImmutableTree(null));\n    /**\n     * @param {!Path} relativePath\n     * @param {!ImmutableTree.<!Node>} writeTree\n     * @param {!Node} node\n     * @return {!Node}\n     * @private\n     */\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n        if (writeTree.value != null) {\n            // Since there a write is always a leaf, we're done here\n            return node.updateChild(relativePath, writeTree.value);\n        }\n        else {\n            var priorityWrite_1 = null;\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\n                if (childKey === '.priority') {\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n                    // to apply priorities to empty nodes that are later filled\n                    util_2.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n                    priorityWrite_1 = childTree.value;\n                }\n                else {\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n                }\n            });\n            // If there was a priority write, we only apply it if the node is not empty\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n            }\n            return node;\n        }\n    };\n    return CompoundWrite;\n}());\nexports.CompoundWrite = CompoundWrite;\n\n//# sourceMappingURL=CompoundWrite.js.map\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = __webpack_require__(138);\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nvar SnapshotHolder = /** @class */ (function () {\n    function SnapshotHolder() {\n        this.rootNode_ = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}());\nexports.SnapshotHolder = SnapshotHolder;\n\n//# sourceMappingURL=SnapshotHolder.js.map\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nvar AuthTokenProvider = /** @class */ (function () {\n    /**\n     * @param {!FirebaseApp} app_\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\n     * @param {boolean} forceRefresh\n     * @return {!Promise<FirebaseAuthTokenData>}\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                util_1.log('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            }\n            else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\n            this.app_.name +\n            '\" are invalid. This usually indicates your app was not ' +\n            'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"credential\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else if ('serviceAccount' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else {\n            errorMessage +=\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n                    'initializeApp() match the values provided for your app at ' +\n                    'https://console.firebase.google.com/.';\n        }\n        util_1.warn(errorMessage);\n    };\n    return AuthTokenProvider;\n}());\nexports.AuthTokenProvider = AuthTokenProvider;\n\n//# sourceMappingURL=AuthTokenProvider.js.map\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(134);\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nvar StatsCollection = /** @class */ (function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) { amount = 1; }\n        if (!util_2.contains(this.counters_, name))\n            this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return util_1.deepCopy(this.counters_);\n    };\n    return StatsCollection;\n}());\nexports.StatsCollection = StatsCollection;\n\n//# sourceMappingURL=StatsCollection.js.map\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar StatsListener_1 = __webpack_require__(192);\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\n * @constructor\n */\nvar StatsReporter = /** @class */ (function () {\n    /**\n     * @param collection\n     * @param server_\n     */\n    function StatsReporter(collection, server_) {\n        this.server_ = server_;\n        this.statsToReport_ = {};\n        this.statsListener_ = new StatsListener_1.StatsListener(collection);\n        var timeout = FIRST_STATS_MIN_TIME +\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n    }\n    StatsReporter.prototype.includeStat = function (stat) {\n        this.statsToReport_[stat] = true;\n    };\n    StatsReporter.prototype.reportStats_ = function () {\n        var _this = this;\n        var stats = this.statsListener_.get();\n        var reportedStats = {};\n        var haveStatsToReport = false;\n        util_1.forEach(stats, function (stat, value) {\n            if (value > 0 && util_1.contains(_this.statsToReport_, stat)) {\n                reportedStats[stat] = value;\n                haveStatsToReport = true;\n            }\n        });\n        if (haveStatsToReport) {\n            this.server_.reportStats(reportedStats);\n        }\n        // queue our next run.\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n    };\n    return StatsReporter;\n}());\nexports.StatsReporter = StatsReporter;\n\n//# sourceMappingURL=StatsReporter.js.map\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nvar EventQueue = /** @class */ (function () {\n    function EventQueue() {\n        /**\n         * @private\n         * @type {!Array.<EventList>}\n         */\n        this.eventLists_ = [];\n        /**\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n         * @private\n         * @type {!number}\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\n     * @param {!Array.<Event>} eventDataList The new events to queue.\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\n     * for the specified path.\n     *\n     * It is assumed that the new events are all for the specified path.\n     *\n     * @param {!Path} path The path to raise events for.\n     * @param {!Array.<Event>} eventDataList The new events to raise.\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\n     * locations related to the specified change path (i.e. all ancestors and descendants).\n     *\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n     *\n     * @param {!Path} changedPath The path to raise events for.\n     * @param {!Array.<!Event>} eventDataList The events to raise\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\n     * @param {!function(!Path):boolean} predicate\n     * @private\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                }\n                else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}());\nexports.EventQueue = EventQueue;\n/**\n * @param {!Path} path\n * @constructor\n */\nvar EventList = /** @class */ (function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\n         * @type {!Array.<Event>}\n         * @private\n         */\n        this.events_ = [];\n    }\n    /**\n     * @param {!Event} eventData\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\n     * Iterates through the list and raises each event\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (util_1.logger) {\n                    util_1.log('event: ' + eventData.toString());\n                }\n                util_1.exceptionGuard(eventFn);\n            }\n        }\n    };\n    /**\n     * @return {!Path}\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}());\nexports.EventList = EventList;\n\n//# sourceMappingURL=EventQueue.js.map\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar EventEmitter_1 = __webpack_require__(194);\nvar util_1 = __webpack_require__(134);\n/**\n * @extends {EventEmitter}\n */\nvar VisibilityMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' &&\n            typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            }\n            else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            }\n            else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            }\n            else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.VisibilityMonitor = VisibilityMonitor;\n\n//# sourceMappingURL=VisibilityMonitor.js.map\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar util_1 = __webpack_require__(134);\nvar EventEmitter_1 = __webpack_require__(194);\nvar util_2 = __webpack_require__(134);\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nvar OnlineMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(OnlineMonitor, _super);\n    function OnlineMonitor() {\n        var _this = _super.call(this, ['online']) || this;\n        _this.online_ = true;\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\n        // for Cordova.\n        if (typeof window !== 'undefined' &&\n            typeof window.addEventListener !== 'undefined' &&\n            !util_2.isMobileCordova()) {\n            window.addEventListener('online', function () {\n                if (!_this.online_) {\n                    _this.online_ = true;\n                    _this.trigger('online', true);\n                }\n            }, false);\n            window.addEventListener('offline', function () {\n                if (_this.online_) {\n                    _this.online_ = false;\n                    _this.trigger('online', false);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    OnlineMonitor.getInstance = function () {\n        return new OnlineMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n        return [this.online_];\n    };\n    /**\n     * @return {boolean}\n     */\n    OnlineMonitor.prototype.currentlyOnline = function () {\n        return this.online_;\n    };\n    return OnlineMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.OnlineMonitor = OnlineMonitor;\n\n//# sourceMappingURL=OnlineMonitor.js.map\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserPollConnection_1 = __webpack_require__(196);\nvar WebSocketConnection_1 = __webpack_require__(197);\nvar util_1 = __webpack_require__(135);\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nvar TransportManager = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n     */\n    function TransportManager(repoInfo) {\n        this.initTransports_(repoInfo);\n    }\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n        /**\n         * @const\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n         */\n        get: function () {\n            return [BrowserPollConnection_1.BrowserPollConnection, WebSocketConnection_1.WebSocketConnection];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {!RepoInfo} repoInfo\n     * @private\n     */\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\n        var isWebSocketsAvailable = WebSocketConnection_1.WebSocketConnection && WebSocketConnection_1.WebSocketConnection['isAvailable']();\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection_1.WebSocketConnection.previouslyFailed();\n        if (repoInfo.webSocketOnly) {\n            if (!isWebSocketsAvailable)\n                util_1.warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n            isSkipPollConnection = true;\n        }\n        if (isSkipPollConnection) {\n            this.transports_ = [WebSocketConnection_1.WebSocketConnection];\n        }\n        else {\n            var transports_1 = (this.transports_ = []);\n            util_1.each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n                if (transport && transport['isAvailable']()) {\n                    transports_1.push(transport);\n                }\n            });\n        }\n    };\n    /**\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n     * initial transport to use\n     */\n    TransportManager.prototype.initialTransport = function () {\n        if (this.transports_.length > 0) {\n            return this.transports_[0];\n        }\n        else {\n            throw new Error('No transports available');\n        }\n    };\n    /**\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n     * transport, or null\n     */\n    TransportManager.prototype.upgradeTransport = function () {\n        if (this.transports_.length > 1) {\n            return this.transports_[1];\n        }\n        else {\n            return null;\n        }\n    };\n    return TransportManager;\n}());\nexports.TransportManager = TransportManager;\n\n//# sourceMappingURL=TransportManager.js.map\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(135);\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nvar PacketReceiver = /** @class */ (function () {\n    /**\n     * @param onMessage_\n     */\n    function PacketReceiver(onMessage_) {\n        this.onMessage_ = onMessage_;\n        this.pendingResponses = [];\n        this.currentResponseNum = 0;\n        this.closeAfterResponse = -1;\n        this.onClose = null;\n    }\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n        this.closeAfterResponse = responseNum;\n        this.onClose = callback;\n        if (this.closeAfterResponse < this.currentResponseNum) {\n            this.onClose();\n            this.onClose = null;\n        }\n    };\n    /**\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n     * browsers will respond in the same order as the requests we sent\n     * @param {number} requestNum\n     * @param {Array} data\n     */\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n        var _this = this;\n        this.pendingResponses[requestNum] = data;\n        var _loop_1 = function () {\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n            delete this_1.pendingResponses[this_1.currentResponseNum];\n            var _loop_2 = function (i) {\n                if (toProcess[i]) {\n                    util_1.exceptionGuard(function () {\n                        _this.onMessage_(toProcess[i]);\n                    });\n                }\n            };\n            for (var i = 0; i < toProcess.length; ++i) {\n                _loop_2(i);\n            }\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n                if (this_1.onClose) {\n                    this_1.onClose();\n                    this_1.onClose = null;\n                }\n                return \"break\";\n            }\n            this_1.currentResponseNum++;\n        };\n        var this_1 = this;\n        while (this.pendingResponses[this.currentResponseNum]) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    return PacketReceiver;\n}());\nexports.PacketReceiver = PacketReceiver;\n\n//# sourceMappingURL=PacketReceiver.js.map\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = __webpack_require__(139);\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar util_3 = __webpack_require__(134);\nvar util_4 = __webpack_require__(134);\nvar util_5 = __webpack_require__(134);\nvar ServerActions_1 = __webpack_require__(198);\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nvar ReadonlyRestClient = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadonlyRestClient, _super);\n    /**\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param {AuthTokenProvider} authTokenProvider_\n     * @implements {ServerActions}\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = util_2.logWrapper('p:rest:');\n        /**\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n         * that's been removed. :-/\n         *\n         * @private {!Object.<string, !Object>}\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {!Query} query\n     * @param {?number=} tag\n     * @return {string}\n     * @private\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        }\n        else {\n            util_1.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query\n            .getQueryParams()\n            .toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n            }\n            if (util_4.safeGet(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                }\n                else if (error == 401) {\n                    status_1 = 'permission_denied';\n                }\n                else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\n     * Performs a REST request to the given path, with the provided query string parameters,\n     * and any auth credentials we have.\n     *\n     * @param {!string} pathString\n     * @param {!Object.<string, *>} queryStringParameters\n     * @param {?function(?number, *=)} callback\n     * @private\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_\n            .getToken(/*forceRefresh=*/ false)\n            .then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\n                _this.repoInfo_.host +\n                pathString +\n                '?' +\n                util_5.querystring(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = util_3.jsonEval(xhr.responseText);\n                        }\n                        catch (e) {\n                            util_2.warn('Failed to parse JSON response for ' +\n                                url +\n                                ': ' +\n                                xhr.responseText);\n                        }\n                        callback(null, res);\n                    }\n                    else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            util_2.warn('Got unsuccessful REST response for ' +\n                                url +\n                                ' Status: ' +\n                                xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/ true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(ServerActions_1.ServerActions));\nexports.ReadonlyRestClient = ReadonlyRestClient;\n\n//# sourceMappingURL=ReadonlyRestClient.js.map\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar util_2 = __webpack_require__(135);\nvar KeyIndex_1 = __webpack_require__(150);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar ValueIndex_1 = __webpack_require__(181);\nvar PathIndex_1 = __webpack_require__(185);\nvar IndexedFilter_1 = __webpack_require__(165);\nvar LimitedFilter_1 = __webpack_require__(273);\nvar RangedFilter_1 = __webpack_require__(199);\nvar util_3 = __webpack_require__(134);\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nvar QueryParams = /** @class */ (function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = PriorityIndex_1.PRIORITY_INDEX;\n    }\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\n     * @return {boolean} True if it would return from left.\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        }\n        else {\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\n        }\n    };\n    /**\n     * Only valid to call if hasStart() returns true\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\n     * Only valid to call if hasStart() returns true.\n     * Returns the starting key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        }\n        else {\n            return util_2.MIN_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * Returns the end key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        }\n        else {\n            return util_2.MAX_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\n     * Only valid to call if hasLimit() returns true\n     * @return {!number}\n     */\n    QueryParams.prototype.getLimit = function () {\n        util_1.assert(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\n     * @return {!Index}\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @return {!QueryParams}\n     * @private\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        }\n        else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        }\n        else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {!Index} index\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\n     * @return {!Object}\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                }\n                else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== PriorityIndex_1.PRIORITY_INDEX) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == PriorityIndex_1.PRIORITY_INDEX;\n    };\n    /**\n     * @return {!NodeFilter}\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new IndexedFilter_1.IndexedFilter(this.getIndex());\n        }\n        else if (this.hasLimit()) {\n            return new LimitedFilter_1.LimitedFilter(this);\n        }\n        else {\n            return new RangedFilter_1.RangedFilter(this);\n        }\n    };\n    /**\n     * Returns a set of REST query string parameters representing this query.\n     *\n     * @return {!Object.<string,*>} query string parameters\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === PriorityIndex_1.PRIORITY_INDEX) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        }\n        else if (this.index_ === ValueIndex_1.VALUE_INDEX) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        }\n        else if (this.index_ === KeyIndex_1.KEY_INDEX) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        }\n        else {\n            util_1.assert(this.index_ instanceof PathIndex_1.PathIndex, 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = util_3.stringify(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = util_3.stringify(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + util_3.stringify(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = util_3.stringify(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + util_3.stringify(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            }\n            else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\n     * Wire Protocol Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\n     * REST Query Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\n     * Default, empty query parameters\n     * @type {!QueryParams}\n     * @const\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}());\nexports.QueryParams = QueryParams;\n\n//# sourceMappingURL=QueryParams.js.map\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RangedFilter_1 = __webpack_require__(199);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar Node_1 = __webpack_require__(140);\nvar util_1 = __webpack_require__(134);\nvar Change_1 = __webpack_require__(148);\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar LimitedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function LimitedFilter(params) {\n        this.rangedFilter_ = new RangedFilter_1.RangedFilter(params);\n        this.index_ = params.getIndex();\n        this.limit_ = params.getLimit();\n        this.reverse_ = !params.isViewFromLeft();\n    }\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.rangedFilter_.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        if (snap.getImmediateChild(key).equals(newChild)) {\n            // No change\n            return snap;\n        }\n        else if (snap.numChildren() < this.limit_) {\n            return this.rangedFilter_\n                .getIndexedFilter()\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n        }\n        else {\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        var filtered;\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        }\n        else {\n            if (this.limit_ * 2 < newSnap.numChildren() &&\n                newSnap.isIndexed(this.index_)) {\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n                filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n                // anchor to the startPost, endPost, or last element as appropriate\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n                }\n                else {\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n                }\n                var count = 0;\n                while (iterator.hasNext() && count < this.limit_) {\n                    var next = iterator.getNext();\n                    var inRange = void 0;\n                    if (this.reverse_) {\n                        inRange =\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n                    }\n                    else {\n                        inRange =\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n                    }\n                    if (inRange) {\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\n                        count++;\n                    }\n                    else {\n                        // if we have reached the end post, we cannot keep adding elemments\n                        break;\n                    }\n                }\n            }\n            else {\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n                filtered = newSnap.withIndex(this.index_);\n                // Don't support priorities on queries\n                filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var startPost = void 0;\n                var endPost = void 0;\n                var cmp = void 0;\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = filtered.getReverseIterator(this.index_);\n                    startPost = this.rangedFilter_.getEndPost();\n                    endPost = this.rangedFilter_.getStartPost();\n                    var indexCompare_1 = this.index_.getCompare();\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\n                }\n                else {\n                    iterator = filtered.getIterator(this.index_);\n                    startPost = this.rangedFilter_.getStartPost();\n                    endPost = this.rangedFilter_.getEndPost();\n                    cmp = this.index_.getCompare();\n                }\n                var count = 0;\n                var foundStartPost = false;\n                while (iterator.hasNext()) {\n                    var next = iterator.getNext();\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\n                        // start adding\n                        foundStartPost = true;\n                    }\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n                    if (inRange) {\n                        count++;\n                    }\n                    else {\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                    }\n                }\n            }\n        }\n        return this.rangedFilter_\n            .getIndexedFilter()\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndexedFilter = function () {\n        return this.rangedFilter_.getIndexedFilter();\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!Node} snap\n     * @param {string} childKey\n     * @param {!Node} childSnap\n     * @param {!CompleteChildSource} source\n     * @param {?ChildChangeAccumulator} changeAccumulator\n     * @return {!Node}\n     * @private\n     */\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n        // TODO: rename all cache stuff etc to general snap terminology\n        var cmp;\n        if (this.reverse_) {\n            var indexCmp_1 = this.index_.getCompare();\n            cmp = function (a, b) { return indexCmp_1(b, a); };\n        }\n        else {\n            cmp = this.index_.getCompare();\n        }\n        var oldEventCache = snap;\n        util_1.assert(oldEventCache.numChildren() == this.limit_, '');\n        var newChildNamedNode = new Node_1.NamedNode(childKey, childSnap);\n        var windowBoundary = this.reverse_\n            ? oldEventCache.getFirstChild(this.index_)\n            : oldEventCache.getLastChild(this.index_);\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\n        if (oldEventCache.hasChild(childKey)) {\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n            while (nextChild != null &&\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\n                // the limited filter...\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n            }\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n            if (remainsInWindow) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childChangedChange(childKey, childSnap, oldChildSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\n            }\n            else {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(childKey, oldChildSnap));\n                }\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n                if (nextChildInRange) {\n                    if (changeAccumulator != null) {\n                        changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(nextChild.name, nextChild.node));\n                    }\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n                }\n                else {\n                    return newEventCache;\n                }\n            }\n        }\n        else if (childSnap.isEmpty()) {\n            // we're deleting a node, but it was not in the window, so ignore it\n            return snap;\n        }\n        else if (inRange) {\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n                    changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(childKey, childSnap));\n                }\n                return oldEventCache\n                    .updateImmediateChild(childKey, childSnap)\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n            else {\n                return snap;\n            }\n        }\n        else {\n            return snap;\n        }\n    };\n    return LimitedFilter;\n}());\nexports.LimitedFilter = LimitedFilter;\n\n//# sourceMappingURL=LimitedFilter.js.map\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Reference_1 = __webpack_require__(162);\nvar DataSnapshot_1 = __webpack_require__(163);\nvar Path_1 = __webpack_require__(136);\nvar Tree_1 = __webpack_require__(275);\nvar PriorityIndex_1 = __webpack_require__(137);\nvar util_2 = __webpack_require__(135);\nvar ServerValues_1 = __webpack_require__(186);\nvar validation_1 = __webpack_require__(144);\nvar util_3 = __webpack_require__(134);\nvar nodeFromJSON_1 = __webpack_require__(151);\nvar ChildrenNode_1 = __webpack_require__(138);\nvar Repo_1 = __webpack_require__(159);\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\n * @enum {number}\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n    // mismatched hash.\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n    // or rejected yet).\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n    // removed when we get a chance to prune completed ones.\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n    // If it comes back as unsuccessful, we'll abort it.\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\n    // Temporary state used to mark transactions that need to be aborted.\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\nRepo_1.Repo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\n * Setup the transaction data structures\n * @private\n */\nRepo_1.Repo.prototype.transactions_init_ = function () {\n    /**\n     * Stores queues of outstanding transactions for Firebase locations.\n     *\n     * @type {!Tree.<Array.<!Transaction>>}\n     * @private\n     */\n    this.transactionQueueTree_ = new Tree_1.Tree();\n};\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\nRepo_1.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path);\n    // Add a watch to make sure we get server updates.\n    var valueCallback = function () { };\n    var watchRef = new Reference_1.Reference(this, path);\n    watchRef.on('value', valueCallback);\n    var unwatcher = function () {\n        watchRef.off('value', valueCallback);\n    };\n    // Initialize transaction.\n    var transaction = {\n        path: path,\n        update: transactionUpdate,\n        onComplete: onComplete,\n        // One of TransactionStatus enums.\n        status: null,\n        // Used when combining transactions at different locations to figure out which one goes first.\n        order: util_2.LUIDGenerator(),\n        // Whether to raise local events for this transaction.\n        applyLocally: applyLocally,\n        // Count of how many times we've retried the transaction.\n        retryCount: 0,\n        // Function to call to clean up our .on() listener.\n        unwatcher: unwatcher,\n        // Stores why a transaction was aborted.\n        abortReason: null,\n        currentWriteId: null,\n        currentInputSnapshot: null,\n        currentOutputSnapshotRaw: null,\n        currentOutputSnapshotResolved: null\n    };\n    // Run transaction initially.\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n        // Abort transaction.\n        transaction.unwatcher();\n        transaction.currentOutputSnapshotRaw = null;\n        transaction.currentOutputSnapshotResolved = null;\n        if (transaction.onComplete) {\n            // We just set the input snapshot, so this cast should be safe\n            var snapshot = new DataSnapshot_1.DataSnapshot(transaction.currentInputSnapshot, new Reference_1.Reference(this, transaction.path), PriorityIndex_1.PRIORITY_INDEX);\n            transaction.onComplete(null, false, snapshot);\n        }\n    }\n    else {\n        validation_1.validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\n        // Mark as run and add to our queue.\n        transaction.status = TransactionStatus.RUN;\n        var queueNode = this.transactionQueueTree_.subTree(path);\n        var nodeQueue = queueNode.getValue() || [];\n        nodeQueue.push(transaction);\n        queueNode.setValue(nodeQueue);\n        // Update visibleData and raise events\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\n        // start new transactions from the event callbacks.\n        var priorityForNode = void 0;\n        if (typeof newVal === 'object' &&\n            newVal !== null &&\n            util_3.contains(newVal, '.priority')) {\n            priorityForNode = util_3.safeGet(newVal, '.priority');\n            util_1.assert(validation_1.isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\n                'Priority must be a valid string, finite number, server value, or null.');\n        }\n        else {\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\n                ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            priorityForNode = currentNode.getPriority().val();\n        }\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, priorityForNode);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n        transaction.currentOutputSnapshotResolved = newNode;\n        transaction.currentWriteId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        this.sendReadyTransactions_();\n    }\n};\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\nRepo_1.Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n        ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n};\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\nRepo_1.Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n    if (node === void 0) { node = this.transactionQueueTree_; }\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n        this.pruneCompletedTransactionsBelowNode_(node);\n    }\n    if (node.getValue() !== null) {\n        var queue = this.buildTransactionQueue_(node);\n        util_1.assert(queue.length > 0, 'Sending zero length transaction queue');\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\n        if (allRun) {\n            this.sendTransactionQueue_(node.path(), queue);\n        }\n    }\n    else if (node.hasChildren()) {\n        node.forEachChild(function (childNode) {\n            _this.sendReadyTransactions_(childNode);\n        });\n    }\n};\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\nRepo_1.Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this;\n    // Mark transactions as sent and increment retry count!\n    var setsToIgnore = queue.map(function (txn) {\n        return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n    for (var i = 0; i < queue.length; i++) {\n        var txn = queue[i];\n        util_1.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n        txn.status = TransactionStatus.SENT;\n        txn.retryCount++;\n        var relativePath = Path_1.Path.relativePath(path, txn.path);\n        // If we've gotten to this point, the output snapshot must be defined.\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\n    }\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path;\n    // Send the put.\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n        _this.log_('transaction put response', {\n            path: pathToSend.toString(),\n            status: status\n        });\n        var events = [];\n        if (status === 'ok') {\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n            // the callback could trigger more transactions or sets.\n            var callbacks = [];\n            for (var i = 0; i < queue.length; i++) {\n                queue[i].status = TransactionStatus.COMPLETED;\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n                if (queue[i].onComplete) {\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\n                    var node = queue[i].currentOutputSnapshotResolved;\n                    var ref = new Reference_1.Reference(_this, queue[i].path);\n                    var snapshot = new DataSnapshot_1.DataSnapshot(node, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n                }\n                queue[i].unwatcher();\n            }\n            // Now remove the completed transactions.\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\n            // There may be pending transactions that we can now send.\n            _this.sendReadyTransactions_();\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\n            // Finally, trigger onComplete callbacks.\n            for (var i = 0; i < callbacks.length; i++) {\n                util_2.exceptionGuard(callbacks[i]);\n            }\n        }\n        else {\n            // transactions are no longer sent.  Update their status appropriately.\n            if (status === 'datastale') {\n                for (var i = 0; i < queue.length; i++) {\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    else\n                        queue[i].status = TransactionStatus.RUN;\n                }\n            }\n            else {\n                util_2.warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n                for (var i = 0; i < queue.length; i++) {\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    queue[i].abortReason = status;\n                }\n            }\n            _this.rerunTransactions_(path);\n        }\n    }, latestHash);\n};\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n};\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n        return; // Nothing to do!\n    }\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = [];\n    var events = [];\n    // Ignore all of the sets we're going to re-run.\n    var txnsToRerun = queue.filter(function (q) {\n        return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n        return q.currentWriteId;\n    });\n    for (var i = 0; i < queue.length; i++) {\n        var transaction = queue[i];\n        var relativePath = Path_1.Path.relativePath(path, transaction.path);\n        var abortTransaction = false, abortReason = void 0;\n        util_1.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n            abortTransaction = true;\n            abortReason = transaction.abortReason;\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n        else if (transaction.status === TransactionStatus.RUN) {\n            if (transaction.retryCount >= Repo_1.Repo.MAX_TRANSACTION_RETRIES_) {\n                abortTransaction = true;\n                abortReason = 'maxretry';\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n            }\n            else {\n                // This code reruns a transaction\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n                transaction.currentInputSnapshot = currentNode;\n                var newData = queue[i].update(currentNode.val());\n                if (newData !== undefined) {\n                    validation_1.validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n                    var newDataNode = nodeFromJSON_1.nodeFromJSON(newData);\n                    var hasExplicitPriority = typeof newData === 'object' &&\n                        newData != null &&\n                        util_3.contains(newData, '.priority');\n                    if (!hasExplicitPriority) {\n                        // Keep the old priority if there wasn't a priority explicitly specified.\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n                    }\n                    var oldWriteId = transaction.currentWriteId;\n                    var serverValues = this.generateServerValues();\n                    var newNodeResolved = ServerValues_1.resolveDeferredValueSnapshot(newDataNode, serverValues);\n                    transaction.currentOutputSnapshotRaw = newDataNode;\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\n                    transaction.currentWriteId = this.getNextWriteId_();\n                    // Mutates setsToIgnore in place\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n                }\n                else {\n                    abortTransaction = true;\n                    abortReason = 'nodata';\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n                }\n            }\n        }\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        events = [];\n        if (abortTransaction) {\n            // Abort.\n            queue[i].status = TransactionStatus.COMPLETED;\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n            // So defer the unwatcher until we're done.\n            (function (unwatcher) {\n                setTimeout(unwatcher, Math.floor(0));\n            })(queue[i].unwatcher);\n            if (queue[i].onComplete) {\n                if (abortReason === 'nodata') {\n                    var ref = new Reference_1.Reference(this, queue[i].path);\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n                    var snapshot = new DataSnapshot_1.DataSnapshot(lastInput, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n                }\n                else {\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n                }\n            }\n        }\n    }\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n    // Now fire callbacks, now that we're in a good, known state.\n    for (var i = 0; i < callbacks.length; i++) {\n        util_2.exceptionGuard(callbacks[i]);\n    }\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n};\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\nRepo_1.Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front;\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n    var transactionNode = this.transactionQueueTree_;\n    while ((front = path.getFront()) !== null &&\n        transactionNode.getValue() === null) {\n        transactionNode = transactionNode.subTree(front);\n        path = path.popFront();\n    }\n    return transactionNode;\n};\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\nRepo_1.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort(function (a, b) {\n        return a.order - b.order;\n    });\n    return transactionQueue;\n};\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\nRepo_1.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n    var nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n        for (var i = 0; i < nodeQueue.length; i++) {\n            queue.push(nodeQueue[i]);\n        }\n    }\n    node.forEachChild(function (child) {\n        _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n};\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\nRepo_1.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n    var queue = node.getValue();\n    if (queue) {\n        var to = 0;\n        for (var from = 0; from < queue.length; from++) {\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\n                queue[to] = queue[from];\n                to++;\n            }\n        }\n        queue.length = to;\n        node.setValue(queue.length > 0 ? queue : null);\n    }\n    node.forEachChild(function (childNode) {\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n};\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\nRepo_1.Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n};\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\nRepo_1.Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n    if (queue !== null) {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        var callbacks = [];\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n        // can be immediately aborted and removed.\n        var events = [];\n        var lastSent = -1;\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                // Already marked.  No action needed.\n            }\n            else if (queue[i].status === TransactionStatus.SENT) {\n                util_1.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n                lastSent = i;\n                // Mark transaction for abort when it comes back.\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n                queue[i].abortReason = 'set';\n            }\n            else {\n                util_1.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\n                // We can abort it immediately.\n                queue[i].unwatcher();\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n                if (queue[i].onComplete) {\n                    var snapshot = null;\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n                }\n            }\n        }\n        if (lastSent === -1) {\n            // We're not waiting for any sent transactions.  We can clear the queue.\n            node.setValue(null);\n        }\n        else {\n            // Remove the transactions we aborted.\n            queue.length = lastSent + 1;\n        }\n        // Now fire the callbacks.\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n        for (var i = 0; i < callbacks.length; i++) {\n            util_2.exceptionGuard(callbacks[i]);\n        }\n    }\n};\n\n//# sourceMappingURL=Repo_transaction.js.map\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(134);\nvar Path_1 = __webpack_require__(136);\nvar util_2 = __webpack_require__(134);\n/**\n * Node in a Tree.\n */\nvar TreeNode = /** @class */ (function () {\n    function TreeNode() {\n        // TODO: Consider making accessors that create children and value lazily or\n        // separate Internal / Leaf 'types'.\n        this.children = {};\n        this.childCount = 0;\n        this.value = null;\n    }\n    return TreeNode;\n}());\nexports.TreeNode = TreeNode;\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nvar Tree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {string=} name_ Optional name of the node.\n     * @param {Tree=} parent_ Optional parent node.\n     * @param {TreeNode=} node_ Optional node to wrap.\n     */\n    function Tree(name_, parent_, node_) {\n        if (name_ === void 0) { name_ = ''; }\n        if (parent_ === void 0) { parent_ = null; }\n        if (node_ === void 0) { node_ = new TreeNode(); }\n        this.name_ = name_;\n        this.parent_ = parent_;\n        this.node_ = node_;\n    }\n    /**\n     * Returns a sub-Tree for the given path.\n     *\n     * @param {!(string|Path)} pathObj Path to look up.\n     * @return {!Tree.<T>} Tree for path.\n     */\n    Tree.prototype.subTree = function (pathObj) {\n        // TODO: Require pathObj to be Path?\n        var path = pathObj instanceof Path_1.Path ? pathObj : new Path_1.Path(pathObj);\n        var child = this, next;\n        while ((next = path.getFront()) !== null) {\n            var childNode = util_2.safeGet(child.node_.children, next) || new TreeNode();\n            child = new Tree(next, child, childNode);\n            path = path.popFront();\n        }\n        return child;\n    };\n    /**\n     * Returns the data associated with this tree node.\n     *\n     * @return {?T} The data or null if no data exists.\n     */\n    Tree.prototype.getValue = function () {\n        return this.node_.value;\n    };\n    /**\n     * Sets data to this tree node.\n     *\n     * @param {!T} value Value to set.\n     */\n    Tree.prototype.setValue = function (value) {\n        util_1.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n        this.node_.value = value;\n        this.updateParents_();\n    };\n    /**\n     * Clears the contents of the tree node (its value and all children).\n     */\n    Tree.prototype.clear = function () {\n        this.node_.value = null;\n        this.node_.children = {};\n        this.node_.childCount = 0;\n        this.updateParents_();\n    };\n    /**\n     * @return {boolean} Whether the tree has any children.\n     */\n    Tree.prototype.hasChildren = function () {\n        return this.node_.childCount > 0;\n    };\n    /**\n     * @return {boolean} Whether the tree is empty (no value or children).\n     */\n    Tree.prototype.isEmpty = function () {\n        return this.getValue() === null && !this.hasChildren();\n    };\n    /**\n     * Calls action for each child of this tree node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachChild = function (action) {\n        var _this = this;\n        util_2.forEach(this.node_.children, function (child, childTree) {\n            action(new Tree(child, _this, childTree));\n        });\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n     *   false.\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n     *   parent.\n     */\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n        if (includeSelf && !childrenFirst)\n            action(this);\n        this.forEachChild(function (child) {\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n        });\n        if (includeSelf && childrenFirst)\n            action(this);\n    };\n    /**\n     * Calls action on each ancestor node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n     *   true to abort.\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\n     * @return {boolean} true if the action callback returned true.\n     */\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\n        var node = includeSelf ? this : this.parent();\n        while (node !== null) {\n            if (action(node)) {\n                return true;\n            }\n            node = node.parent();\n        }\n        return false;\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n     * is found, action is called on it and traversal does not continue inside the node.\n     * Action is *not* called on this node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n        this.forEachChild(function (child) {\n            if (child.getValue() !== null)\n                action(child);\n            else\n                child.forEachImmediateDescendantWithValue(action);\n        });\n    };\n    /**\n     * @return {!Path} The path of this tree node, as a Path.\n     */\n    Tree.prototype.path = function () {\n        return new Path_1.Path(this.parent_ === null\n            ? this.name_\n            : this.parent_.path() + '/' + this.name_);\n    };\n    /**\n     * @return {string} The name of the tree node.\n     */\n    Tree.prototype.name = function () {\n        return this.name_;\n    };\n    /**\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n     */\n    Tree.prototype.parent = function () {\n        return this.parent_;\n    };\n    /**\n     * Adds or removes this child from its parent based on whether it's empty or not.\n     *\n     * @private\n     */\n    Tree.prototype.updateParents_ = function () {\n        if (this.parent_ !== null)\n            this.parent_.updateChild_(this.name_, this);\n    };\n    /**\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\n     *\n     * @param {string} childName The name of the child to update.\n     * @param {!Tree.<T>} child The child to update.\n     * @private\n     */\n    Tree.prototype.updateChild_ = function (childName, child) {\n        var childEmpty = child.isEmpty();\n        var childExists = util_2.contains(this.node_.children, childName);\n        if (childEmpty && childExists) {\n            delete this.node_.children[childName];\n            this.node_.childCount--;\n            this.updateParents_();\n        }\n        else if (!childEmpty && !childExists) {\n            this.node_.children[childName] = child.node_;\n            this.node_.childCount++;\n            this.updateParents_();\n        }\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n\n//# sourceMappingURL=Tree.js.map\n\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketConnection_1 = __webpack_require__(197);\nvar BrowserPollConnection_1 = __webpack_require__(196);\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\nexports.forceLongPolling = function () {\n    WebSocketConnection_1.WebSocketConnection.forceDisallow();\n    BrowserPollConnection_1.BrowserPollConnection.forceAllow();\n};\nexports.forceWebSockets = function () {\n    BrowserPollConnection_1.BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nexports.isWebSocketsAvailable = function () {\n    return WebSocketConnection_1.WebSocketConnection['isAvailable']();\n};\nexports.setSecurityDebugCallback = function (ref, callback) {\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nexports.stats = function (ref, showDelta) {\n    ref.repo.stats(showDelta);\n};\nexports.statsIncrementCounter = function (ref, metric) {\n    ref.repo.statsIncrementCounter(metric);\n};\nexports.dataUpdateCount = function (ref) {\n    return ref.repo.dataUpdateCount;\n};\nexports.interceptServerData = function (ref, callback) {\n    return ref.repo.interceptServerData_(callback);\n};\n\n//# sourceMappingURL=internal.js.map\n\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RepoInfo_1 = __webpack_require__(177);\nvar PersistentConnection_1 = __webpack_require__(193);\nvar RepoManager_1 = __webpack_require__(167);\nvar Connection_1 = __webpack_require__(195);\nexports.DataConnection = PersistentConnection_1.PersistentConnection;\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\nPersistentConnection_1.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n    this.sendRequest('q', { p: pathString }, onComplete);\n};\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\nPersistentConnection_1.PersistentConnection.prototype.echo = function (data, onEcho) {\n    this.sendRequest('echo', { d: data }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nexports.RealTimeConnection = Connection_1.Connection;\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nexports.hijackHash = function (newHash) {\n    var oldPut = PersistentConnection_1.PersistentConnection.prototype.put;\n    PersistentConnection_1.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n        if (opt_hash !== undefined) {\n            opt_hash = newHash();\n        }\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n    };\n    return function () {\n        PersistentConnection_1.PersistentConnection.prototype.put = oldPut;\n    };\n};\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nexports.ConnectionTarget = RepoInfo_1.RepoInfo;\n/**\n * @param {!Query} query\n * @return {!string}\n */\nexports.queryIdentifier = function (query) {\n    return query.queryIdentifier();\n};\n/**\n * @param {!Query} firebaseRef\n * @return {!Object}\n */\nexports.listens = function (firebaseRef) {\n    return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nexports.forceRestClient = function (forceRestClient) {\n    RepoManager_1.RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n\n//# sourceMappingURL=test_access.js.map\n\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"firebase\":{\"apiKey\":\"AIzaSyCW6s0biYO48fItNvKaAdfn0QkUjnztHFo\",\"authDomain\":\"portfolio-94b41.firebaseapp.com\",\"databaseURL\":\"https://portfolio-94b41.firebaseio.com\",\"projectId\":\"portfolio-94b41\",\"storageBucket\":\"portfolio-94b41.appspot.com\",\"messagingSenderId\":\"974810211301\"}}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.0e57c0dd.chunk.js","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport { Helmet } from 'react-helmet';\nimport Input from '../components/Input';\nimport DecoderText from '../components/DecoderText';\nimport Button, { RouterButton } from '../components/Button';\nimport { Media, AnimFade } from '../utils/StyleUtils';\nimport Firebase from '../utils/Firebase';\nimport ScrollToTop from '../utils/ScrollToTop';\n\nconst prerender = window.location.port === '45678';\nconst initDelay = 300;\n\nexport default class Contact extends PureComponent {\n  state = {\n    emailValue: '',\n    messageValue: '',\n    sending: false,\n    complete: false,\n  }\n\n  updateEmail = event => {\n    this.setState({emailValue: event.target.value});\n  }\n\n  updateMessage = event => {\n    this.setState({messageValue: event.target.value});\n  }\n\n  onSubmit = event => {\n    const { emailValue, messageValue, sending } = this.state;\n    event.preventDefault();\n\n    if (!sending) {\n      this.setState({sending: true});\n\n      Firebase.database().ref('messages').push({\n        email: emailValue,\n        message: messageValue,\n      }).then(() => {\n        this.setState({complete: true, sending: false});\n      }).catch((error) => {\n        this.setState({sending: false});\n        alert(error);\n      });\n    }\n  }\n\n  render() {\n    const { status } = this.props;\n    const { emailValue, messageValue, sending, complete } = this.state;\n\n    return (\n      <ContactWrapper>\n        <ScrollToTop status={status} />\n        <Helmet>\n          <title>Contact me</title>\n          <meta\n            name=\"description\"\n            content=\"Please send me a message if you're interested in discussing a project or even if you just want to say hello!\"\n          />\n        </Helmet>\n        <TransitionGroup component={React.Fragment}>\n          {!complete &&\n            <Transition appear timeout={1600} mountOnEnter unmountOnExit>\n              {status => (\n                <ContactForm autoComplete=\"off\" method=\"post\" onSubmit={this.onSubmit} role=\"form\">\n                  <ContactTitle status={status} delay={50}>\n                    <DecoderText\n                      text=\"Say hello\"\n                      start={status === 'entering' && !prerender}\n                      offset={140}\n                    />\n                  </ContactTitle>\n                  <ContactDivider status={status} delay={100} />\n                  <ContactInput\n                    status={status}\n                    delay={200}\n                    onChange={this.updateEmail}\n                    label=\"Your Email\"\n                    id=\"email\"\n                    type=\"email\"\n                    hasValue={!!emailValue}\n                    value={emailValue}\n                    maxLength={320}\n                    required\n                  />\n                  <ContactInput\n                    status={status}\n                    delay={300}\n                    onChange={this.updateMessage}\n                    label=\"Message\"\n                    id=\"message\"\n                    hasValue={!!messageValue}\n                    value={messageValue}\n                    maxLength={2000}\n                    required\n                    multiline\n                  />\n                  <ContactButton\n                    disabled={sending}\n                    sending={sending}\n                    loading={sending}\n                    status={status}\n                    delay={400}\n                    icon=\"send\"\n                    type=\"submit\"\n                  >\n                    Send Message\n                  </ContactButton>\n                </ContactForm>\n              )}\n            </Transition>\n          }\n          {complete &&\n            <Transition appear timeout={0} mountOnEnter unmountOnExit>\n              {status => (\n                <ContactComplete>\n                  <ContactCompleteTitle\n                    status={status}\n                    delay={0}\n                  >\n                    Message Sent\n                  </ContactCompleteTitle>\n                  <ContactCompleteText status={status} delay={200}>\n                    I'll get back to you within a couple days, promise!\n                  </ContactCompleteText>\n                  <ContactCompleteButton\n                    secondary\n                    to=\"/\"\n                    status={status}\n                    delay={400}\n                    icon=\"chevronRight\"\n                  >\n                    Back to homepage\n                  </ContactCompleteButton>\n                </ContactComplete>\n              )}\n            </Transition>\n          }\n        </TransitionGroup>\n      </ContactWrapper>\n    );\n  }\n}\n\nconst ContactWrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  width: 100%;\n  padding-left: 80px;\n\n  @media (max-width: ${Media.tablet}) {\n    padding-left: 60px;\n  }\n\n  @media (max-width: ${Media.mobile}) {\n    padding-left: 0;\n  }\n\n  @media (max-width: ${Media.mobile}), (max-height: ${Media.mobile}) {\n    padding-left: 0;\n  }\n`;\n\nconst ContactForm = styled.form`\n  max-width: 440px;\n  width: 100%;\n  padding: 40px 20px;\n\n  @media (max-width: ${Media.mobile}) {\n    padding: 120px 20px 40px;\n    align-self: flex-start;\n  }\n`;\n\nconst ContactTitle = styled.h1`\n  font-size: 32px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  line-height: 1;\n  margin-top: 0;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay + initDelay}ms;\n  transform: translate3d(0, 90px, 0);\n  opacity: 0;\n  height: 32px;\n\n  ${props => (props.status === 'entering' ||\n    props.status === 'entered') && !prerender &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n\n  ${props => props.status === 'exiting' &&`\n    transition-duration: 0.4s;\n    transition-delay: 0s;\n    transform: translate3d(0, -40px, 0);\n    opacity: 0;\n  `}\n`;\n\nconst ContactDivider = styled.div`\n  margin-bottom: 80px;\n  width: 100%;\n  height: 1px;\n  background: ${props => props.theme.colorPrimary(1)};\n  position: relative;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay + initDelay}ms;\n  transform: translate3d(0, 90px, 0);\n  opacity: 0;\n\n  &:before {\n    content: '';\n    height: 10px;\n    width: 90px;\n    background: ${props => props.theme.colorPrimary(1)};\n    position: absolute;\n    bottom: 0;\n    transform: translateY(100%);\n    clip-path: polygon(\n      0 0,\n      100% 0,\n      100% calc(100% - 10px),\n      calc(100% - 10px) 100%,\n      10px 100%,\n      0 0\n    );\n  }\n\n  ${props => (props.status === 'entering' ||\n    props.status === 'entered') && !prerender &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n\n  ${props => props.status === 'exiting' &&`\n    transition-duration: 0.4s;\n    transition-delay: 0s;\n    transform: translate3d(0, -40px, 0);\n    opacity: 0;\n  `}\n`;\n\nconst ContactInput = styled(Input)`\n  padding-bottom: 40px;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay + initDelay}ms;\n  transform: translate3d(0, 80px, 0);\n  opacity: 0;\n\n  ${props => (props.status === 'entering' ||\n    props.status === 'entered') && !prerender &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n\n  ${props => props.status === 'exiting' &&`\n    transition-duration: 0.4s;\n    transition-delay: 0s;\n    transform: translate3d(0, -40px, 0);\n    opacity: 0;\n  `}\n`;\n\nconst ContactButton = styled(Button)`\n  margin-top: 20px;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-delay: ${props => props.status === 'entered' ? '0ms' : `${props.delay + initDelay}ms`};\n  transition-duration: ${props => props.status === 'entered' ? '0.4s' : '0.8s'};\n  transform: translate3d(0, 80px, 0);\n  opacity: 0;\n\n  ${props => props.sending &&`\n    svg {\n      transition: transform ${props.curveFastoutSlowin}, opacity 0.3s ease 0.8s;\n      transition-duration: 0.8s;\n      transform: translate3d(150px, 0, 0);\n      opacity: 0;\n    }\n\n    div {\n      opacity: 0;\n      animation: ${AnimFade} 0.5s ease 0.6s forwards;\n    }\n  `}\n\n  ${props => (props.status === 'entering' ||\n    props.status === 'entered') && !prerender &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n\n  ${props => props.status === 'exiting' &&`\n    transition-duration: 0.4s;\n    transition-delay: 0s;\n    transform: translate3d(0, -40px, 0);\n    opacity: 0;\n  `}\n`;\n\nconst ContactComplete = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst ContactCompleteTitle = styled.h1`\n  font-weight: 500;\n  font-size: 32px;\n  margin: 0;\n  text-align: center;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay}ms;\n  transform: translate3d(0, 80px, 0);\n  opacity: 0;\n\n  ${props => props.status === 'entered' &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n`;\n\nconst ContactCompleteText = styled.p`\n  font-size: 18px;\n  text-align: center;\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay}ms;\n  transform: translate3d(0, 80px, 0);\n  opacity: 0;\n\n  ${props => props.status === 'entered' &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n`;\n\nconst ContactCompleteButton = styled(RouterButton)`\n  transition-property: transform, opacity;\n  transition-timing-function: ${props => props.theme.curveFastoutSlowin};\n  transition-duration: 0.8s;\n  transition-delay: ${props => props.delay}ms;\n  transform: translate3d(0, 80px, 0);\n  opacity: 0;\n  padding-left: 3px;\n\n  ${props => props.status === 'entered' &&`\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  `}\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/screens/Contact.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = require(\"./src/assert\");\nexports.assert = assert_1.assert;\nexports.assertionError = assert_1.assertionError;\nvar crypt_1 = require(\"./src/crypt\");\nexports.base64 = crypt_1.base64;\nexports.base64Decode = crypt_1.base64Decode;\nexports.base64Encode = crypt_1.base64Encode;\nvar constants_1 = require(\"./src/constants\");\nexports.CONSTANTS = constants_1.CONSTANTS;\nvar deepCopy_1 = require(\"./src/deepCopy\");\nexports.deepCopy = deepCopy_1.deepCopy;\nexports.deepExtend = deepCopy_1.deepExtend;\nexports.patchProperty = deepCopy_1.patchProperty;\nvar deferred_1 = require(\"./src/deferred\");\nexports.Deferred = deferred_1.Deferred;\nvar environment_1 = require(\"./src/environment\");\nexports.getUA = environment_1.getUA;\nexports.isMobileCordova = environment_1.isMobileCordova;\nexports.isNodeSdk = environment_1.isNodeSdk;\nexports.isReactNative = environment_1.isReactNative;\nvar errors_1 = require(\"./src/errors\");\nexports.ErrorFactory = errors_1.ErrorFactory;\nexports.FirebaseError = errors_1.FirebaseError;\nexports.patchCapture = errors_1.patchCapture;\nvar json_1 = require(\"./src/json\");\nexports.jsonEval = json_1.jsonEval;\nexports.stringify = json_1.stringify;\nvar jwt_1 = require(\"./src/jwt\");\nexports.decode = jwt_1.decode;\nexports.isAdmin = jwt_1.isAdmin;\nexports.issuedAtTime = jwt_1.issuedAtTime;\nexports.isValidFormat = jwt_1.isValidFormat;\nexports.isValidTimestamp = jwt_1.isValidTimestamp;\nvar obj_1 = require(\"./src/obj\");\nexports.clone = obj_1.clone;\nexports.contains = obj_1.contains;\nexports.every = obj_1.every;\nexports.extend = obj_1.extend;\nexports.findKey = obj_1.findKey;\nexports.findValue = obj_1.findValue;\nexports.forEach = obj_1.forEach;\nexports.getAnyKey = obj_1.getAnyKey;\nexports.getCount = obj_1.getCount;\nexports.getValues = obj_1.getValues;\nexports.isEmpty = obj_1.isEmpty;\nexports.isNonNullObject = obj_1.isNonNullObject;\nexports.map = obj_1.map;\nexports.safeGet = obj_1.safeGet;\nvar query_1 = require(\"./src/query\");\nexports.querystring = query_1.querystring;\nexports.querystringDecode = query_1.querystringDecode;\nvar sha1_1 = require(\"./src/sha1\");\nexports.Sha1 = sha1_1.Sha1;\nvar subscribe_1 = require(\"./src/subscribe\");\nexports.async = subscribe_1.async;\nexports.createSubscribe = subscribe_1.createSubscribe;\nvar validation_1 = require(\"./src/validation\");\nexports.errorPrefix = validation_1.errorPrefix;\nexports.validateArgCount = validation_1.validateArgCount;\nexports.validateCallback = validation_1.validateCallback;\nexports.validateContextObject = validation_1.validateContextObject;\nexports.validateNamespace = validation_1.validateNamespace;\nvar utf8_1 = require(\"./src/utf8\");\nexports.stringLength = utf8_1.stringLength;\nexports.stringToByteArray = utf8_1.stringToByteArray;\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/index.js\n// module id = 134\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar util_6 = require(\"@firebase/util\");\nvar storage_1 = require(\"../storage/storage\");\nvar util_7 = require(\"@firebase/util\");\nvar logger_1 = require(\"@firebase/logger\");\nvar logClient = new logger_1.Logger('@firebase/database');\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n * @type {function(): number} Generated ID.\n */\nexports.LUIDGenerator = (function () {\n    var id = 1;\n    return function () {\n        return id++;\n    };\n})();\n/**\n * Sha1 hash of the input string\n * @param {!string} str The string to hash\n * @return {!string} The resulting hash\n */\nexports.sha1 = function (str) {\n    var utf8Bytes = util_5.stringToByteArray(str);\n    var sha1 = new util_4.Sha1();\n    sha1.update(utf8Bytes);\n    var sha1Bytes = sha1.digest();\n    return util_3.base64.encodeByteArray(sha1Bytes);\n};\n/**\n * @param {...*} var_args\n * @return {string}\n * @private\n */\nvar buildLogMessage_ = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = '';\n    for (var i = 0; i < var_args.length; i++) {\n        if (Array.isArray(var_args[i]) ||\n            (var_args[i] &&\n                typeof var_args[i] === 'object' &&\n                typeof var_args[i].length === 'number')) {\n            message += buildLogMessage_.apply(null, var_args[i]);\n        }\n        else if (typeof var_args[i] === 'object') {\n            message += util_6.stringify(var_args[i]);\n        }\n        else {\n            message += var_args[i];\n        }\n        message += ' ';\n    }\n    return message;\n};\n/**\n * Use this for all debug messages in Firebase.\n * @type {?function(string)}\n */\nexports.logger = null;\n/**\n * Flag to check for log availability on first log message\n * @type {boolean}\n * @private\n */\nvar firstLog_ = true;\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\n */\nexports.enableLogging = function (logger_, persistent) {\n    util_1.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\n    if (logger_ === true) {\n        logClient.logLevel = logger_1.LogLevel.VERBOSE;\n        exports.logger = logClient.log.bind(logClient);\n        if (persistent)\n            storage_1.SessionStorage.set('logging_enabled', true);\n    }\n    else if (typeof logger_ === 'function') {\n        exports.logger = logger_;\n    }\n    else {\n        exports.logger = null;\n        storage_1.SessionStorage.remove('logging_enabled');\n    }\n};\n/**\n *\n * @param {...(string|Arguments)} var_args\n */\nexports.log = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    if (firstLog_ === true) {\n        firstLog_ = false;\n        if (exports.logger === null && storage_1.SessionStorage.get('logging_enabled') === true)\n            exports.enableLogging(true);\n    }\n    if (exports.logger) {\n        var message = buildLogMessage_.apply(null, var_args);\n        exports.logger(message);\n    }\n};\n/**\n * @param {!string} prefix\n * @return {function(...[*])}\n */\nexports.logWrapper = function (prefix) {\n    return function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        exports.log.apply(void 0, [prefix].concat(var_args));\n    };\n};\n/**\n * @param {...string} var_args\n */\nexports.error = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\n    logClient.error(message);\n};\n/**\n * @param {...string} var_args\n */\nexports.fatal = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\n    logClient.error(message);\n    throw new Error(message);\n};\n/**\n * @param {...*} var_args\n */\nexports.warn = function () {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\n    logClient.warn(message);\n};\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexports.warnIfPageIsSecure = function () {\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\n    if (typeof window !== 'undefined' &&\n        window.location &&\n        window.location.protocol &&\n        window.location.protocol.indexOf('https:') !== -1) {\n        exports.warn('Insecure Firebase access from a secure page. ' +\n            'Please use https in calls to new Firebase().');\n    }\n};\n/**\n * @param {!String} methodName\n */\nexports.warnAboutUnsupportedMethod = function (methodName) {\n    exports.warn(methodName +\n        ' is unsupported and will likely change soon.  ' +\n        'Please do not use.');\n};\n/**\n * Returns true if data is NaN, or +/- Infinity.\n * @param {*} data\n * @return {boolean}\n */\nexports.isInvalidJSONNumber = function (data) {\n    return (typeof data === 'number' &&\n        (data != data || // NaN\n            data == Number.POSITIVE_INFINITY ||\n            data == Number.NEGATIVE_INFINITY));\n};\n/**\n * @param {function()} fn\n */\nexports.executeWhenDOMReady = function (fn) {\n    if (util_7.isNodeSdk() || document.readyState === 'complete') {\n        fn();\n    }\n    else {\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n        // fire before onload), but fall back to onload.\n        var called_1 = false;\n        var wrappedFn_1 = function () {\n            if (!document.body) {\n                setTimeout(wrappedFn_1, Math.floor(10));\n                return;\n            }\n            if (!called_1) {\n                called_1 = true;\n                fn();\n            }\n        };\n        if (document.addEventListener) {\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\n            // fallback to onload.\n            window.addEventListener('load', wrappedFn_1, false);\n        }\n        else if (document.attachEvent) {\n            // IE.\n            document.attachEvent('onreadystatechange', function () {\n                if (document.readyState === 'complete')\n                    wrappedFn_1();\n            });\n            // fallback to onload.\n            window.attachEvent('onload', wrappedFn_1);\n            // jQuery has an extra hack for IE that we could employ (based on\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n            // I'm hoping we don't need it.\n        }\n    }\n};\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n * @type {!string}\n */\nexports.MIN_NAME = '[MIN_NAME]';\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n * @type {!string}\n */\nexports.MAX_NAME = '[MAX_NAME]';\n/**\n * Compares valid Firebase key names, plus min and max name\n * @param {!string} a\n * @param {!string} b\n * @return {!number}\n */\nexports.nameCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a === exports.MIN_NAME || b === exports.MAX_NAME) {\n        return -1;\n    }\n    else if (b === exports.MIN_NAME || a === exports.MAX_NAME) {\n        return 1;\n    }\n    else {\n        var aAsInt = exports.tryParseInt(a), bAsInt = exports.tryParseInt(b);\n        if (aAsInt !== null) {\n            if (bAsInt !== null) {\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (bAsInt !== null) {\n            return 1;\n        }\n        else {\n            return a < b ? -1 : 1;\n        }\n    }\n};\n/**\n * @param {!string} a\n * @param {!string} b\n * @return {!number} comparison result.\n */\nexports.stringCompare = function (a, b) {\n    if (a === b) {\n        return 0;\n    }\n    else if (a < b) {\n        return -1;\n    }\n    else {\n        return 1;\n    }\n};\n/**\n * @param {string} key\n * @param {Object} obj\n * @return {*}\n */\nexports.requireKey = function (key, obj) {\n    if (obj && key in obj) {\n        return obj[key];\n    }\n    else {\n        throw new Error('Missing required key (' + key + ') in object: ' + util_6.stringify(obj));\n    }\n};\n/**\n * @param {*} obj\n * @return {string}\n */\nexports.ObjectToUniqueKey = function (obj) {\n    if (typeof obj !== 'object' || obj === null)\n        return util_6.stringify(obj);\n    var keys = [];\n    for (var k in obj) {\n        keys.push(k);\n    }\n    // Export as json, but with the keys sorted.\n    keys.sort();\n    var key = '{';\n    for (var i = 0; i < keys.length; i++) {\n        if (i !== 0)\n            key += ',';\n        key += util_6.stringify(keys[i]);\n        key += ':';\n        key += exports.ObjectToUniqueKey(obj[keys[i]]);\n    }\n    key += '}';\n    return key;\n};\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param {!string} str The string\n * @param {!number} segsize The maximum number of chars in the string.\n * @return {Array.<string>} The string, split into appropriately-sized chunks\n */\nexports.splitStringBySize = function (str, segsize) {\n    var len = str.length;\n    if (len <= segsize) {\n        return [str];\n    }\n    var dataSegs = [];\n    for (var c = 0; c < len; c += segsize) {\n        if (c + segsize > len) {\n            dataSegs.push(str.substring(c, len));\n        }\n        else {\n            dataSegs.push(str.substring(c, c + segsize));\n        }\n    }\n    return dataSegs;\n};\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param {!(Object|Array)} obj The object or array to iterate over\n * @param {function(?, ?)} fn The function to apply\n */\nexports.each = function (obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; ++i) {\n            fn(i, obj[i]);\n        }\n    }\n    else {\n        /**\n         * in the conversion of code we removed the goog.object.forEach\n         * function which did a value,key callback. We standardized on\n         * a single impl that does a key, value callback. So we invert\n         * to not have to touch the `each` code points\n         */\n        util_2.forEach(obj, function (key, val) { return fn(val, key); });\n    }\n};\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param {function(*)} callback Callback function.\n * @param {?Object=} context Optional context to bind to.\n * @return {function(*)}\n */\nexports.bindCallback = function (callback, context) {\n    return context ? callback.bind(context) : callback;\n};\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param {!number} v A double\n * @return {string}\n */\nexports.doubleToIEEE754String = function (v) {\n    util_1.assert(!exports.isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n    var ebits = 11, fbits = 52;\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\n    // Compute sign, exponent, fraction\n    // Skip NaN / Infinity handling --MJL.\n    if (v === 0) {\n        e = 0;\n        f = 0;\n        s = 1 / v === -Infinity ? 1 : 0;\n    }\n    else {\n        s = v < 0;\n        v = Math.abs(v);\n        if (v >= Math.pow(2, 1 - bias)) {\n            // Normalized\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n            e = ln + bias;\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n        }\n        else {\n            // Denormalized\n            e = 0;\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n        }\n    }\n    // Pack sign, exponent, fraction\n    bits = [];\n    for (i = fbits; i; i -= 1) {\n        bits.push(f % 2 ? 1 : 0);\n        f = Math.floor(f / 2);\n    }\n    for (i = ebits; i; i -= 1) {\n        bits.push(e % 2 ? 1 : 0);\n        e = Math.floor(e / 2);\n    }\n    bits.push(s ? 1 : 0);\n    bits.reverse();\n    str = bits.join('');\n    // Return the data as a hex string. --MJL\n    var hexByteString = '';\n    for (i = 0; i < 64; i += 8) {\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n        if (hexByte.length === 1)\n            hexByte = '0' + hexByte;\n        hexByteString = hexByteString + hexByte;\n    }\n    return hexByteString.toLowerCase();\n};\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n * @return {boolean}\n */\nexports.isChromeExtensionContentScript = function () {\n    return !!(typeof window === 'object' &&\n        window['chrome'] &&\n        window['chrome']['extension'] &&\n        !/^chrome/.test(window.location.href));\n};\n/**\n * Used to detect if we're in a Windows 8 Store app.\n * @return {boolean}\n */\nexports.isWindowsStoreApp = function () {\n    // Check for the presence of a couple WinRT globals\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\n * Converts a server error code to a Javascript Error\n * @param {!string} code\n * @param {!Query} query\n * @return {Error}\n */\nexports.errorForServerCode = function (code, query) {\n    var reason = 'Unknown Error';\n    if (code === 'too_big') {\n        reason =\n            'The data requested exceeds the maximum size ' +\n                'that can be accessed with a single request.';\n    }\n    else if (code == 'permission_denied') {\n        reason = \"Client doesn't have permission to access the desired data.\";\n    }\n    else if (code == 'unavailable') {\n        reason = 'The service is unavailable';\n    }\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\n    error.code = code.toUpperCase();\n    return error;\n};\n/**\n * Used to test for integer-looking strings\n * @type {RegExp}\n * @private\n */\nexports.INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n * @param {!string} str\n * @return {?number}\n */\nexports.tryParseInt = function (str) {\n    if (exports.INTEGER_REGEXP_.test(str)) {\n        var intVal = Number(str);\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\n            return intVal;\n        }\n    }\n    return null;\n};\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param {!function()} fn The code to guard.\n */\nexports.exceptionGuard = function (fn) {\n    try {\n        fn();\n    }\n    catch (e) {\n        // Re-throw exception when it's safe.\n        setTimeout(function () {\n            // It used to be that \"throw e\" would result in a good console error with\n            // relevant context, but as of Chrome 39, you just get the firebase.js\n            // file/line number where we re-throw it, which is useless. So we log\n            // e.stack explicitly.\n            var stack = e.stack || '';\n            exports.warn('Exception was thrown by user callback.', stack);\n            throw e;\n        }, Math.floor(0));\n    }\n};\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param {?Function=} callback Optional onComplete callback.\n * @param {...*} var_args Arbitrary args to be passed to opt_onComplete\n */\nexports.callUserCallback = function (callback) {\n    var var_args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        var_args[_i - 1] = arguments[_i];\n    }\n    if (typeof callback === 'function') {\n        exports.exceptionGuard(function () {\n            callback.apply(void 0, var_args);\n        });\n    }\n};\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexports.beingCrawled = function () {\n    var userAgent = (typeof window === 'object' &&\n        window['navigator'] &&\n        window['navigator']['userAgent']) ||\n        '';\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n    // believe to support JavaScript/AJAX rendering.\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\n};\n/**\n * Export a property of an object using a getter function.\n *\n * @param {!Object} object\n * @param {string} name\n * @param {!function(): *} fnGet\n */\nexports.exportPropGetter = function (object, name, fnGet) {\n    Object.defineProperty(object, name, { get: fnGet });\n};\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param {Function} fn Function to run.\n * @param {number} time Milliseconds to wait before running.\n * @return {number|Object} The setTimeout() return value.\n */\nexports.setTimeoutNonBlocking = function (fn, time) {\n    var timeout = setTimeout(fn, time);\n    if (typeof timeout === 'object' && timeout['unref']) {\n        timeout['unref']();\n    }\n    return timeout;\n};\n\n//# sourceMappingURL=util.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/util.js\n// module id = 135\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\nvar Path = /** @class */ (function () {\n    /**\n     * @param {string|Array.<string>} pathOrString Path string to parse,\n     *      or another path, or the raw tokens array\n     * @param {number=} pieceNum\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        }\n        else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\n         * Singleton to represent an empty path\n         *\n         * @const\n         */\n        get: function () {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\n     * @return {number} The number of segments in this path\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\n     * @return {!Path}\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\n     * @return {?string}\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length)\n            return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\n     * Shallow copy of the parts of the path.\n     *\n     * @param {number=} begin\n     * @return {!Array<string>}\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) { begin = 0; }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\n     * @return {?Path}\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\n            pieces.push(this.pieces_[i]);\n        return new Path(pieces, 0);\n    };\n    /**\n     * @param {string|!Path} childPathObj\n     * @return {!Path}\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\n            pieces.push(this.pieces_[i]);\n        if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        }\n        else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0)\n                    pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\n     * @return {boolean} True if there are no segments in this path\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\n     * @param {!Path} outerPath\n     * @param {!Path} innerPath\n     * @return {!Path} The path from outerPath to innerPath\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        }\n        else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        }\n        else {\n            throw new Error('INTERNAL ERROR: innerPath (' +\n                innerPath +\n                ') is not within ' +\n                'outerPath (' +\n                outerPath +\n                ')');\n        }\n    };\n    /**\n     * @param {!Path} left\n     * @param {!Path} right\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = util_1.nameCompare(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0)\n                return cmp;\n        }\n        if (leftKeys.length === rightKeys.length)\n            return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\n     *\n     * @param {Path} other\n     * @return {boolean} true if paths are the same.\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     *\n     * @param {!Path} other\n     * @return {boolean} True if this path is a parent (or the same as) other\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}()); // end Path\nexports.Path = Path;\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nvar ValidationPath = /** @class */ (function () {\n    /**\n     * @param {!Path} path Initial Path.\n     * @param {string} errorPrefix_ Prefix for any error messages.\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += util_2.stringLength(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function () {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function () {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += util_2.stringLength(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= util_2.stringLength(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ +\n                'has a key path longer than ' +\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\n                ' bytes (' +\n                this.byteLength_ +\n                ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ +\n                'path specified exceeds the maximum depth that can be written (' +\n                ValidationPath.MAX_PATH_DEPTH +\n                ') or object contains a cycle ' +\n                this.toErrorString());\n        }\n    };\n    /**\n     * String for use in error messages - uses '.' notation for path.\n     *\n     * @return {string}\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}());\nexports.ValidationPath = ValidationPath;\n\n//# sourceMappingURL=Path.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/Path.js\n// module id = 136\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar util_1 = require(\"../../util/util\");\nvar Node_1 = require(\"../Node\");\nvar LeafNode_1 = require(\"../LeafNode\");\nvar nodeFromJSON;\nvar MAX_NODE;\nfunction setNodeFromJSON(val) {\n    nodeFromJSON = val;\n}\nexports.setNodeFromJSON = setNodeFromJSON;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar PriorityIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PriorityIndex, _super);\n    function PriorityIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.compare = function (a, b) {\n        var aPriority = a.node.getPriority();\n        var bPriority = b.node.getPriority();\n        var indexCmp = aPriority.compareTo(bPriority);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.isDefinedOn = function (node) {\n        return !node.getPriority().isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.getPriority().equals(newNode.getPriority());\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    PriorityIndex.prototype.maxPost = function () {\n        return new Node_1.NamedNode(util_1.MAX_NAME, new LeafNode_1.LeafNode('[PRIORITY-POST]', MAX_NODE));\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\n        var priorityNode = nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, new LeafNode_1.LeafNode('[PRIORITY-POST]', priorityNode));\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    PriorityIndex.prototype.toString = function () {\n        return '.priority';\n    };\n    return PriorityIndex;\n}(Index_1.Index));\nexports.PriorityIndex = PriorityIndex;\nexports.PRIORITY_INDEX = new PriorityIndex();\n\n//# sourceMappingURL=PriorityIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PriorityIndex.js\n// module id = 137\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar SortedMap_1 = require(\"../util/SortedMap\");\nvar Node_1 = require(\"./Node\");\nvar snap_1 = require(\"./snap\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar KeyIndex_1 = require(\"./indexes/KeyIndex\");\nvar IndexMap_1 = require(\"./IndexMap\");\nvar LeafNode_1 = require(\"./LeafNode\");\nvar comparators_1 = require(\"./comparators\");\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n *\n * @constructor\n * @implements {Node}\n */\nvar ChildrenNode = /** @class */ (function () {\n    /**\n     *\n     * @param {!SortedMap.<string, !Node>} children_ List of children\n     * of this node..\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\n     * @param {!IndexMap} indexMap_\n     */\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\n        this.children_ = children_;\n        this.priorityNode_ = priorityNode_;\n        this.indexMap_ = indexMap_;\n        this.lazyHash_ = null;\n        /**\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n         * class instead of an empty ChildrenNode.\n         */\n        if (this.priorityNode_) {\n            snap_1.validatePriorityNode(this.priorityNode_);\n        }\n        if (this.children_.isEmpty()) {\n            util_1.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n        }\n    }\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n        get: function () {\n            return (EMPTY_NODE ||\n                (EMPTY_NODE = new ChildrenNode(new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), null, IndexMap_1.IndexMap.Default)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    ChildrenNode.prototype.isLeafNode = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPriority = function () {\n        return this.priorityNode_ || EMPTY_NODE;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n        if (this.children_.isEmpty()) {\n            // Don't allow priorities on empty nodes\n            return this;\n        }\n        else {\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.getPriority();\n        }\n        else {\n            var child = this.children_.get(childName);\n            return child === null ? EMPTY_NODE : child;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getChild = function (path) {\n        var front = path.getFront();\n        if (front === null)\n            return this;\n        return this.getImmediateChild(front).getChild(path.popFront());\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hasChild = function (childName) {\n        return this.children_.get(childName) !== null;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        util_1.assert(newChildNode, 'We should always be passing snapshot nodes');\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else {\n            var namedNode = new Node_1.NamedNode(childName, newChildNode);\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\n            if (newChildNode.isEmpty()) {\n                newChildren = this.children_.remove(childName);\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n            }\n            else {\n                newChildren = this.children_.insert(childName, newChildNode);\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n            }\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else {\n            util_1.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n            return this.updateImmediateChild(front, newImmediateChild);\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.isEmpty = function () {\n        return this.children_.isEmpty();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.numChildren = function () {\n        return this.children_.count();\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.val = function (exportFormat) {\n        if (this.isEmpty())\n            return null;\n        var obj = {};\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\n        this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            obj[key] = childNode.val(exportFormat);\n            numKeys++;\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n                maxKey = Math.max(maxKey, Number(key));\n            }\n            else {\n                allIntegerKeys = false;\n            }\n        });\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n            // convert to array.\n            var array = [];\n            for (var key in obj)\n                array[key] = obj[key];\n            return array;\n        }\n        else {\n            if (exportFormat && !this.getPriority().isEmpty()) {\n                obj['.priority'] = this.getPriority().val();\n            }\n            return obj;\n        }\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash_1 = '';\n            if (!this.getPriority().isEmpty())\n                toHash_1 +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.getPriority().val()) +\n                        ':';\n            this.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                var childHash = childNode.hash();\n                if (childHash !== '')\n                    toHash_1 += ':' + key + ':' + childHash;\n            });\n            this.lazyHash_ = toHash_1 === '' ? '' : util_2.sha1(toHash_1);\n        }\n        return this.lazyHash_;\n    };\n    /** @inheritDoc */\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            var predecessor = idx.getPredecessorKey(new Node_1.NamedNode(childName, childNode));\n            return predecessor ? predecessor.name : null;\n        }\n        else {\n            return this.children_.getPredecessorKey(childName);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var minKey = idx.minKey();\n            return minKey && minKey.name;\n        }\n        else {\n            return this.children_.minKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n        var minKey = this.getFirstChildName(indexDefinition);\n        if (minKey) {\n            return new Node_1.NamedNode(minKey, this.children_.get(minKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Given an index, return the key name of the largest value we have, according to that index\n     * @param {!Index} indexDefinition\n     * @return {?string}\n     */\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            var maxKey = idx.maxKey();\n            return maxKey && maxKey.name;\n        }\n        else {\n            return this.children_.maxKey();\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {?NamedNode}\n     */\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n        var maxKey = this.getLastChildName(indexDefinition);\n        if (maxKey) {\n            return new Node_1.NamedNode(maxKey, this.children_.get(maxKey));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.forEachChild = function (index, action) {\n        var idx = this.resolveIndex_(index);\n        if (idx) {\n            return idx.inorderTraversal(function (wrappedNode) {\n                return action(wrappedNode.name, wrappedNode.node);\n            });\n        }\n        else {\n            return this.children_.inorderTraversal(action);\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n    };\n    /**\n     *\n     * @param {!NamedNode} startPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\n        }\n        else {\n            var iterator = this.children_.getIteratorFrom(startPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n    };\n    /**\n     * @param {!NamedNode} endPost\n     * @param {!Index} indexDefinition\n     * @return {!SortedMapIterator}\n     */\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n        var idx = this.resolveIndex_(indexDefinition);\n        if (idx) {\n            return idx.getReverseIteratorFrom(endPost, function (key) {\n                return key;\n            });\n        }\n        else {\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, Node_1.NamedNode.Wrap);\n            var next = iterator.peek();\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\n                iterator.getNext();\n                next = iterator.peek();\n            }\n            return iterator;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.compareTo = function (other) {\n        if (this.isEmpty()) {\n            if (other.isEmpty()) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (other.isLeafNode() || other.isEmpty()) {\n            return 1;\n        }\n        else if (other === exports.MAX_NODE) {\n            return -1;\n        }\n        else {\n            // Must be another node with children.\n            return 0;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX ||\n            this.indexMap_.hasIndex(indexDefinition)) {\n            return this;\n        }\n        else {\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.isIndexed = function (index) {\n        return index === KeyIndex_1.KEY_INDEX || this.indexMap_.hasIndex(index);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildrenNode.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            return false;\n        }\n        else {\n            var otherChildrenNode = other;\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n                return false;\n            }\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\n                var thisIter = this.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var otherIter = otherChildrenNode.getIterator(PriorityIndex_1.PRIORITY_INDEX);\n                var thisCurrent = thisIter.getNext();\n                var otherCurrent = otherIter.getNext();\n                while (thisCurrent && otherCurrent) {\n                    if (thisCurrent.name !== otherCurrent.name ||\n                        !thisCurrent.node.equals(otherCurrent.node)) {\n                        return false;\n                    }\n                    thisCurrent = thisIter.getNext();\n                    otherCurrent = otherIter.getNext();\n                }\n                return thisCurrent === null && otherCurrent === null;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n     * instead.\n     *\n     * @private\n     * @param {!Index} indexDefinition\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n        if (indexDefinition === KeyIndex_1.KEY_INDEX) {\n            return null;\n        }\n        else {\n            return this.indexMap_.get(indexDefinition.toString());\n        }\n    };\n    /**\n     * @private\n     * @type {RegExp}\n     */\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n    return ChildrenNode;\n}());\nexports.ChildrenNode = ChildrenNode;\n/**\n * @constructor\n * @extends {ChildrenNode}\n * @private\n */\nvar MaxNode = /** @class */ (function (_super) {\n    tslib_1.__extends(MaxNode, _super);\n    function MaxNode() {\n        return _super.call(this, new SortedMap_1.SortedMap(comparators_1.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap_1.IndexMap.Default) || this;\n    }\n    MaxNode.prototype.compareTo = function (other) {\n        if (other === this) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    MaxNode.prototype.equals = function (other) {\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\n        return other === this;\n    };\n    MaxNode.prototype.getPriority = function () {\n        return this;\n    };\n    MaxNode.prototype.getImmediateChild = function (childName) {\n        return ChildrenNode.EMPTY_NODE;\n    };\n    MaxNode.prototype.isEmpty = function () {\n        return false;\n    };\n    return MaxNode;\n}(ChildrenNode));\nexports.MaxNode = MaxNode;\n/**\n * Marker that will sort higher than any other snapshot.\n * @type {!MAX_NODE}\n * @const\n */\nexports.MAX_NODE = new MaxNode();\nObject.defineProperties(Node_1.NamedNode, {\n    MIN: {\n        value: new Node_1.NamedNode(util_2.MIN_NAME, ChildrenNode.EMPTY_NODE)\n    },\n    MAX: {\n        value: new Node_1.NamedNode(util_2.MAX_NAME, exports.MAX_NODE)\n    }\n});\n/**\n * Reference Extensions\n */\nKeyIndex_1.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode_1.LeafNode.__childrenNodeConstructor = ChildrenNode;\nsnap_1.setMaxNode(exports.MAX_NODE);\nPriorityIndex_1.setMaxNode(exports.MAX_NODE);\n\n//# sourceMappingURL=ChildrenNode.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/ChildrenNode.js\n// module id = 138\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 139\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @param {!string} name\n * @param {!Node} node\n * @constructor\n * @struct\n */\nvar NamedNode = /** @class */ (function () {\n    function NamedNode(name, node) {\n        this.name = name;\n        this.node = node;\n    }\n    /**\n     *\n     * @param {!string} name\n     * @param {!Node} node\n     * @return {NamedNode}\n     */\n    NamedNode.Wrap = function (name, node) {\n        return new NamedNode(name, node);\n    };\n    return NamedNode;\n}());\nexports.NamedNode = NamedNode;\n\n//# sourceMappingURL=Node.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/Node.js\n// module id = 140\n// module chunks = 0","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Icon from '../utils/Icon';\nimport Theme from '../utils/Theme';\nimport { ColorTint } from '../utils/StyleUtils';\n\nconst ButtonContent = ({ iconRight, icon, children, secondary, loading }) => (\n  <React.Fragment>\n    {icon && <ButtonIcon loading={loading} left icon={icon} secondary={secondary}/>}\n    <ButtonText loading={loading} secondary={secondary}>{ children }</ButtonText>\n    {iconRight && <ButtonIcon loading={loading} icon={iconRight} secondary={secondary}/>}\n    {loading &&\n      <Loader\n        style={{position: 'absolute', left: '50%', transform: 'translateX(-50%)'}}\n        size=\"24\"\n        color={Theme.colorBackground(1)}\n      />\n    }\n  </React.Fragment>\n);\n\nconst Button = ({ ...props, className, style, secondary }) => (\n  <ButtonContainer\n    className={className}\n    style={style}\n    secondary={secondary}\n    {...props}\n  >\n    <ButtonContent {...props} />\n  </ButtonContainer>\n);\n\nconst LinkButton = ({ ...props, className, style, secondary,\n  href, rel, target }) => (\n  <LinkButtonContainer\n    className={className}\n    style={style}\n    secondary={secondary}\n    href={href}\n    rel={rel}\n    target={target}\n  >\n    <ButtonContent {...props} />\n  </LinkButtonContainer>\n);\n\nconst RouterButton = ({ ...props, className, style, secondary, to }) => (\n  <RouterButtonContainer\n    className={className}\n    style={style}\n    to={to}\n    secondary={secondary ? 1 : 0}\n  >\n    <ButtonContent {...props} />\n  </RouterButtonContainer>\n);\n\nconst ButtonContainer = styled.button`\n  background: none;\n  height: 56px;\n  padding: 0 26px;\n  border: 0;\n  margin: 0;\n  cursor: pointer;\n  transition: all 0.3s ${props => props.theme.curveFastoutSlowin};\n  display: flex;\n  display: inline-flex;\n  align-items: center;\n  color: ${props => props.theme.colorBackground(1)};\n  text-decoration: none;\n  font-family: inherit;\n  position: relative;\n\n  ${props => !props.secondary &&`\n    &:before {\n      content: '';\n      transition: all 0.4s ${props.theme.curveFastoutSlowin};\n      background: ${props.theme.colorPrimary(0.4)};\n      clip-path: ${props.theme.clipPath(10)};\n      position: absolute;\n      top: -5px;\n      right: -5px;\n      bottom: -5px;\n      left: -5px;\n      z-index: -1;\n      opacity: 0;\n    }\n\n    &:after {\n      content: '';\n      transition: all 0.4s ${props.theme.curveFastoutSlowin};\n      background: ${props.theme.colorPrimary(1)};\n      clip-path: ${props.theme.clipPath(8)};\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: -1;\n    }\n  `}\n\n  ${props => !props.disabled && !props.secondary &&`\n    &:hover,\n    &:focus {\n      outline: none;\n      transform: scale(1.05);\n    }\n\n    &:hover:after,\n    &:focus:after {\n      background: ${ColorTint(props.theme.colorPrimary(1), 0.2)};\n    }\n\n    &:focus:before {\n      opacity: 1;\n    }\n  `}\n\n  &:active {\n    transform: scale(1);\n    transition-duration: 0.1s;\n  }\n\n  ${props => props.secondary &&`\n    background: none;\n    color: ${props.theme.colorPrimary(1)};\n    padding: 0 10px;\n    position: relative;\n    left: -10px;\n\n    &:after {\n      content: '';\n      height: 30px;\n      position: absolute;\n      top: 50%;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background: ${props.theme.colorPrimary(0.2)};\n      transform: scale3d(0, 1, 1) translateY(-50%);\n      transform-origin: right;\n      transition: transform 0.4s ${props.theme.curveFastoutSlowin};\n    }\n\n    &:hover,\n    &:focus,\n    &:active {\n      outline: none;\n      transform: none;\n      background: transparent;\n    }\n\n    &:hover:after,\n    &:focus:after,\n    &:active:after {\n      transform: scale3d(1, 1, 1) translateY(-50%);\n      transform-origin: left;\n    }\n  `}\n\n  ${props => props.icon &&`\n    padding-right: 32px;\n  `}\n`;\n\nconst LinkButtonContainer = ButtonContainer.withComponent('a');\nconst RouterButtonContainer = ButtonContainer.withComponent(Link);\n\nconst ButtonText = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  position: relative;\n  line-height: 1.2;\n\n  ${props => props.loading && `\n    visibility: hidden;\n  `}\n\n  ${props => props.secondary ?`\n    color: ${props.theme.colorPrimary(1)};\n  `:`\n    color: ${props.theme.colorBackground(1)};\n  `}\n`;\n\nconst ButtonIcon = styled(Icon)`\n  margin-left: ${props => props.left ? '0' : '10px'};\n  margin-right: ${props => props.left ? '10px' : '0'};\n  transition: all 0.3s ${props => props.theme.curveFastoutSlowin};\n  fill: ${props => props.theme.colorBackground(1)};\n\n  ${props => props.secondary &&`\n    fill: ${props.theme.colorPrimary(1)};\n  `}\n\n  ${ButtonContainer}:hover &,\n  ${ButtonContainer}:focus &,\n  ${LinkButtonContainer}:hover &,\n  ${LinkButtonContainer}:focus &,\n  ${RouterButtonContainer}:hover &,\n  ${RouterButtonContainer}:focus & {\n    ${props => props.icon === 'arrowRight' &&`\n      transform: translate3d(3px, 0, 0);\n    `}\n  }\n\n  ${props => props.loading && `\n    visibility: hidden;\n  `}\n`;\n\nexport default Button;\nexport { LinkButton, RouterButton };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Button.js","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Loader = ({ size, color, style, className }) => (\n  <LoaderContainer size={size} style={style} className={className}>\n    <LoaderSpan color={color} />\n    <LoaderSpan color={color} />\n    <LoaderSpan color={color} />\n    <LoaderSpan color={color} />\n  </LoaderContainer>\n);\n\nconst LoaderContainer = styled.div`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst AnimGrow = keyframes`\n  0%, 100% {\n    transform: scaleY(0.4);\n    opacity: 0.6;\n  }\n\n  50% {\n    transform: scaleY(0.8);\n    opacity: 1;\n  }\n`;\n\nconst LoaderSpan = styled.span`\n  display: block;\n  width: 5px;\n  margin-left: 2px;\n  height: 100%;\n  background-color: ${props => props.color};\n\n  &:nth-child(1) {\n    animation: ${AnimGrow} 1s ease-in-out infinite;\n    margin-left: 0;\n  }\n\n  &:nth-child(2) {\n    animation: ${AnimGrow} 1s ease-in-out 0.15s infinite;\n  }\n\n  &:nth-child(3) {\n    animation: ${AnimGrow} 1s ease-in-out 0.30s infinite;\n  }\n\n  &:nth-child(4) {\n    animation: ${AnimGrow} 1s ease-in-out 0.45s infinite;\n  }\n`;\n\nexport default Loader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Loader.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"./Path\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\n/**\n * True for invalid Firebase keys\n * @type {RegExp}\n * @private\n */\nexports.INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n * @type {RegExp}\n * @private\n */\nexports.INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\n * Maximum number of characters to allow in leaf value\n * @type {number}\n * @private\n */\nexports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\n * @param {*} key\n * @return {boolean}\n */\nexports.isValidKey = function (key) {\n    return (typeof key === 'string' && key.length !== 0 && !exports.INVALID_KEY_REGEX_.test(key));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidPathString = function (pathString) {\n    return (typeof pathString === 'string' &&\n        pathString.length !== 0 &&\n        !exports.INVALID_PATH_REGEX_.test(pathString));\n};\n/**\n * @param {string} pathString\n * @return {boolean}\n */\nexports.isValidRootPathString = function (pathString) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    return exports.isValidPathString(pathString);\n};\n/**\n * @param {*} priority\n * @return {boolean}\n */\nexports.isValidPriority = function (priority) {\n    return (priority === null ||\n        typeof priority === 'string' ||\n        (typeof priority === 'number' && !util_2.isInvalidJSONNumber(priority)) ||\n        (priority && typeof priority === 'object' && util_1.contains(priority, '.sv')));\n};\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    exports.validateFirebaseData(util_3.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\n * Validate a data object client-side before sending to server.\n *\n * @param {string} errorPrefix\n * @param {*} data\n * @param {!Path|!ValidationPath} path_\n */\nexports.validateFirebaseData = function (errorPrefix, data, path_) {\n    var path = path_ instanceof Path_1.Path ? new Path_1.ValidationPath(path_, errorPrefix) : path_;\n    if (data === undefined) {\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n    }\n    if (typeof data === 'function') {\n        throw new Error(errorPrefix +\n            'contains a function ' +\n            path.toErrorString() +\n            ' with contents = ' +\n            data.toString());\n    }\n    if (util_2.isInvalidJSONNumber(data)) {\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n    }\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\n    if (typeof data === 'string' &&\n        data.length > exports.MAX_LEAF_SIZE_ / 3 &&\n        util_4.stringLength(data) > exports.MAX_LEAF_SIZE_) {\n        throw new Error(errorPrefix +\n            'contains a string greater than ' +\n            exports.MAX_LEAF_SIZE_ +\n            ' utf8 bytes ' +\n            path.toErrorString() +\n            \" ('\" +\n            data.substring(0, 50) +\n            \"...')\");\n    }\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n    // to save extra walking of large objects.\n    if (data && typeof data === 'object') {\n        var hasDotValue_1 = false, hasActualChild_1 = false;\n        util_1.forEach(data, function (key, value) {\n            if (key === '.value') {\n                hasDotValue_1 = true;\n            }\n            else if (key !== '.priority' && key !== '.sv') {\n                hasActualChild_1 = true;\n                if (!exports.isValidKey(key)) {\n                    throw new Error(errorPrefix +\n                        ' contains an invalid key (' +\n                        key +\n                        ') ' +\n                        path.toErrorString() +\n                        '.  Keys must be non-empty strings ' +\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n                }\n            }\n            path.push(key);\n            exports.validateFirebaseData(errorPrefix, value, path);\n            path.pop();\n        });\n        if (hasDotValue_1 && hasActualChild_1) {\n            throw new Error(errorPrefix +\n                ' contains \".value\" child ' +\n                path.toErrorString() +\n                ' in addition to actual children.');\n        }\n    }\n};\n/**\n * Pre-validate paths passed in the firebase function.\n *\n * @param {string} errorPrefix\n * @param {Array<!Path>} mergePaths\n */\nexports.validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n    var i, curPath;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        var keys = curPath.slice();\n        for (var j = 0; j < keys.length; j++) {\n            if (keys[j] === '.priority' && j === keys.length - 1) {\n                // .priority is OK\n            }\n            else if (!exports.isValidKey(keys[j])) {\n                throw new Error(errorPrefix +\n                    'contains an invalid key (' +\n                    keys[j] +\n                    ') in path ' +\n                    curPath.toString() +\n                    '. Keys must be non-empty strings ' +\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n            }\n        }\n    }\n    // Check that update keys are not descendants of each other.\n    // We rely on the property that sorting guarantees that ancestors come\n    // right before descendants.\n    mergePaths.sort(Path_1.Path.comparePaths);\n    var prevPath = null;\n    for (i = 0; i < mergePaths.length; i++) {\n        curPath = mergePaths[i];\n        if (prevPath !== null && prevPath.contains(curPath)) {\n            throw new Error(errorPrefix +\n                'contains a path ' +\n                prevPath.toString() +\n                ' that is ancestor of another path ' +\n                curPath.toString());\n        }\n        prevPath = curPath;\n    }\n};\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n *\n * @param {string} fnName\n * @param {number} argumentNumber\n * @param {*} data\n * @param {!Path} path\n * @param {boolean} optional\n */\nexports.validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\n    if (optional && data === undefined)\n        return;\n    var errorPrefix = util_3.errorPrefix(fnName, argumentNumber, optional);\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n    }\n    var mergePaths = [];\n    util_1.forEach(data, function (key, value) {\n        var curPath = new Path_1.Path(key);\n        exports.validateFirebaseData(errorPrefix, value, path.child(curPath));\n        if (curPath.getBack() === '.priority') {\n            if (!exports.isValidPriority(value)) {\n                throw new Error(errorPrefix +\n                    \"contains an invalid value for '\" +\n                    curPath.toString() +\n                    \"', which must be a valid \" +\n                    'Firebase priority (a string, finite number, server value, or null).');\n            }\n        }\n        mergePaths.push(curPath);\n    });\n    exports.validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\nexports.validatePriority = function (fnName, argumentNumber, priority, optional) {\n    if (optional && priority === undefined)\n        return;\n    if (util_2.isInvalidJSONNumber(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'is ' +\n            priority.toString() +\n            ', but must be a valid Firebase priority (a string, finite number, ' +\n            'server value, or null).');\n    // Special case to allow importing data with a .sv.\n    if (!exports.isValidPriority(priority))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid Firebase priority ' +\n            '(a string, finite number, server value, or null).');\n};\nexports.validateEventType = function (fnName, argumentNumber, eventType, optional) {\n    if (optional && eventType === undefined)\n        return;\n    switch (eventType) {\n        case 'value':\n        case 'child_added':\n        case 'child_removed':\n        case 'child_changed':\n        case 'child_moved':\n            break;\n        default:\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n                '\"child_changed\", or \"child_moved\".');\n    }\n};\nexports.validateKey = function (fnName, argumentNumber, key, optional) {\n    if (optional && key === undefined)\n        return;\n    if (!exports.isValidKey(key))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid key = \"' +\n            key +\n            '\".  Firebase keys must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n};\nexports.validatePathString = function (fnName, argumentNumber, pathString, optional) {\n    if (optional && pathString === undefined)\n        return;\n    if (!exports.isValidPathString(pathString))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'was an invalid path = \"' +\n            pathString +\n            '\". Paths must be non-empty strings and ' +\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n};\nexports.validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\n    if (pathString) {\n        // Allow '/.info/' at the beginning.\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n    }\n    exports.validatePathString(fnName, argumentNumber, pathString, optional);\n};\nexports.validateWritablePath = function (fnName, path) {\n    if (path.getFront() === '.info') {\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n    }\n};\nexports.validateUrl = function (fnName, argumentNumber, parsedUrl) {\n    // TODO = Validate server better.\n    var pathString = parsedUrl.path.toString();\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\n        parsedUrl.repoInfo.host.length === 0 ||\n        (!exports.isValidKey(parsedUrl.repoInfo.namespace) &&\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n        (pathString.length !== 0 && !exports.isValidRootPathString(pathString))) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, false) +\n            'must be a valid firebase URL and ' +\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n    }\n};\nexports.validateCredential = function (fnName, argumentNumber, cred, optional) {\n    if (optional && cred === undefined)\n        return;\n    if (!(typeof cred === 'string'))\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid credential (a string).');\n};\nexports.validateBoolean = function (fnName, argumentNumber, bool, optional) {\n    if (optional && bool === undefined)\n        return;\n    if (typeof bool !== 'boolean')\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n};\nexports.validateString = function (fnName, argumentNumber, string, optional) {\n    if (optional && string === undefined)\n        return;\n    if (!(typeof string === 'string')) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid string.');\n    }\n};\nexports.validateObject = function (fnName, argumentNumber, obj, optional) {\n    if (optional && obj === undefined)\n        return;\n    if (!(obj && typeof obj === 'object') || obj === null) {\n        throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid object.');\n    }\n};\nexports.validateObjectContainsKey = function (fnName, argumentNumber, obj, key, optional, opt_type) {\n    var objectContainsKey = obj && typeof obj === 'object' && util_1.contains(obj, key);\n    if (!objectContainsKey) {\n        if (optional) {\n            return;\n        }\n        else {\n            throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                'must contain the key \"' +\n                key +\n                '\"');\n        }\n    }\n    if (opt_type) {\n        var val = util_1.safeGet(obj, key);\n        if ((opt_type === 'number' && !(typeof val === 'number')) ||\n            (opt_type === 'string' && !(typeof val === 'string')) ||\n            (opt_type === 'boolean' && !(typeof val === 'boolean')) ||\n            (opt_type === 'function' && !(typeof val === 'function')) ||\n            (opt_type === 'object' && !(typeof val === 'object') && val)) {\n            if (optional) {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'contains invalid value for key \"' +\n                    key +\n                    '\" (must be of type \"' +\n                    opt_type +\n                    '\")');\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, argumentNumber, optional) +\n                    'must contain the key \"' +\n                    key +\n                    '\" with type \"' +\n                    opt_type +\n                    '\"');\n            }\n        }\n    }\n};\n\n//# sourceMappingURL=validation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/validation.js\n// module id = 144\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n *\n * @enum\n */\nvar OperationType;\n(function (OperationType) {\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nvar OperationSource = /** @class */ (function () {\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\n        this.fromUser = fromUser;\n        this.fromServer = fromServer;\n        this.queryId = queryId;\n        this.tagged = tagged;\n        util_1.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n    }\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.User = new OperationSource(\n    /*fromUser=*/ true, false, null, \n    /*tagged=*/ false);\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.Server = new OperationSource(false, \n    /*fromServer=*/ true, null, \n    /*tagged=*/ false);\n    /**\n     * @param {string} queryId\n     * @return {!OperationSource}\n     */\n    OperationSource.forServerTaggedQuery = function (queryId) {\n        return new OperationSource(false, \n        /*fromServer=*/ true, queryId, \n        /*tagged=*/ true);\n    };\n    return OperationSource;\n}());\nexports.OperationSource = OperationSource;\n\n//# sourceMappingURL=Operation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Operation.js\n// module id = 145\n// module chunks = 0","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nexport default class DecoderText extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { text, offset = 100 } = this.props;\n\n    this.content = text.split('');\n    this.startTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n    this.timeOffset = offset;\n    this.fps = 24;\n    this.chars = [\n      'ア', 'イ', 'ウ', 'エ', 'オ',\n      'カ', 'キ', 'ク', 'ケ', 'コ',\n      'サ', 'シ', 'ス', 'セ', 'ソ',\n      'タ', 'チ', 'ツ', 'テ', 'ト',\n      'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n      'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n      'マ', 'ミ', 'ム', 'メ', 'モ',\n      'ヤ', 'ユ', 'ヨ', 'ー',\n      'ラ', 'リ', 'ル', 'レ', 'ロ',\n      'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n      'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n      'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n      'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n      'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n      'パ', 'ピ', 'プ', 'ペ', 'ポ',\n    ];\n\n    this.state = {\n      position: 0,\n      started: false,\n      output: [{type: 'code', value: ''}],\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { start } = nextProps;\n    const { started } = this.state;\n    if (start && !started) this.timeout = setTimeout(() => {this.start()}, 300);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n    this.stop();\n  }\n\n  start = () => {\n    this.startTime = Date.now();\n    this.elapsedTime = 0;\n    this.running = true;\n    this.setState({started: true});\n    this.anim();\n  }\n\n  stop = () => this.running = false;\n\n  anim = () => {\n    const { position } = this.state;\n  \tconst elapsedTime = Date.now() - this.startTime;\n  \tconst deltaTime = elapsedTime - this.elapsedTime;\n  \tconst needsUpdate = 1000 / this.fps <= deltaTime;\n\n    if (!this.running) return;\n\n  \tif (!needsUpdate) {\n  \t\trequestAnimationFrame(this.anim);\n  \t\treturn;\n  \t}\n\n  \tthis.elapsedTime = elapsedTime;\n    this.setState({position: (this.elapsedTime / this.timeOffset) | 0});\n\n  \tif (position > this.content.length) {\n  \t\tthis.running = false;\n      const finalArray = this.setValue(this.content);\n      this.setState({output: finalArray});\n  \t\treturn;\n  \t}\n\n  \trequestAnimationFrame(this.anim);\n\n  \tconst textArray = this.shuffle(this.content, this.chars, position);\n    this.setState({output: textArray});\n  }\n\n  setValue = value => {\n    return value.map(value => ({\n      type: 'actual',\n      value,\n    }));\n  }\n\n  shuffle = (content, chars, position) => {\n    return content.map((value, index) => {\n      if (index < position) {\n        return {type: 'actual', value};\n      }\n\n      return {\n        type: 'code',\n        value: this.getRandCharacter(chars),\n      }\n    });\n  }\n\n  getRandCharacter = chars => {\n  \tconst randNum = Math.floor(Math.random() * chars.length);\n  \tconst lowChoice =\t- .5 + Math.random();\n  \tconst picketCharacter = chars[randNum];\n  \tconst chosen = lowChoice < 0 ? picketCharacter.toLowerCase() : picketCharacter;\n  \treturn chosen;\n  }\n\n  render() {\n    const { text, className, style } = this.props;\n    const { output } = this.state;\n\n    return (\n      <DecoderSpan aria-label={text} className={className} style={style}>\n        {output.map((item, index) => {\n          if (item.type === 'actual') {\n            return (\n              <span\n                key={`${item.value}_${index}`}\n                aria-hidden=\"true\"\n              >\n                {item.value}\n              </span>\n            )\n          }\n\n          return (\n            <DecoderCode\n              key={`${item.value}_${index}`}\n              aria-hidden=\"true\"\n            >\n              {item.value}\n            </DecoderCode>\n          )\n        })}\n      </DecoderSpan>\n    );\n  }\n}\n\nconst DecoderSpan = styled.span`\n  &:after {\n    content: '_';\n    opacity: 0;\n  }\n`;\n\nconst DecoderCode = styled.span`\n  opacity: 0.8;\n  font-weight: 400;\n  font-family: 'Hiragino Sans', sans-serif;\n  line-height: 0;\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/DecoderText.js","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nvar Change = /** @class */ (function () {\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\n        this.type = type;\n        this.snapshotNode = snapshotNode;\n        this.childName = childName;\n        this.oldSnap = oldSnap;\n        this.prevName = prevName;\n    }\n    /**\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.valueChange = function (snapshot) {\n        return new Change(Change.VALUE, snapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childAddedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childRemovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} newSnapshot\n     * @param {!Node} oldSnapshot\n     * @return {!Change}\n     */\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childMovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\n    };\n    //event types\n    /** Event type for a child added */\n    Change.CHILD_ADDED = 'child_added';\n    /** Event type for a child removed */\n    Change.CHILD_REMOVED = 'child_removed';\n    /** Event type for a child changed */\n    Change.CHILD_CHANGED = 'child_changed';\n    /** Event type for a child moved */\n    Change.CHILD_MOVED = 'child_moved';\n    /** Event type for a value change */\n    Change.VALUE = 'value';\n    return Change;\n}());\nexports.Change = Change;\n\n//# sourceMappingURL=Change.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/Change.js\n// module id = 148\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\nvar util_2 = require(\"@firebase/util\");\nvar __EMPTY_NODE;\nvar KeyIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(KeyIndex, _super);\n    function KeyIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n        get: function () {\n            return __EMPTY_NODE;\n        },\n        set: function (val) {\n            __EMPTY_NODE = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.compare = function (a, b) {\n        return util_1.nameCompare(a.name, b.name);\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.isDefinedOn = function (node) {\n        // We could probably return true here (since every node has a key), but it's never called\n        // so just leaving unimplemented for now.\n        throw util_2.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return false; // The key for a node never changes.\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    KeyIndex.prototype.maxPost = function () {\n        // TODO: This should really be created once and cached in a static property, but\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n        return new Node_1.NamedNode(util_1.MAX_NAME, __EMPTY_NODE);\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    KeyIndex.prototype.makePost = function (indexValue, name) {\n        util_2.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n        return new Node_1.NamedNode(indexValue, __EMPTY_NODE);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    KeyIndex.prototype.toString = function () {\n        return '.key';\n    };\n    return KeyIndex;\n}(Index_1.Index));\nexports.KeyIndex = KeyIndex;\nexports.KEY_INDEX = new KeyIndex();\n\n//# sourceMappingURL=KeyIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/KeyIndex.js\n// module id = 150\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"./ChildrenNode\");\nvar LeafNode_1 = require(\"./LeafNode\");\nvar Node_1 = require(\"./Node\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar childSet_1 = require(\"./childSet\");\nvar comparators_1 = require(\"./comparators\");\nvar IndexMap_1 = require(\"./IndexMap\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar USE_HINZE = true;\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param {*} json JSON to create a node for.\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n * @return {!Node}\n */\nfunction nodeFromJSON(json, priority) {\n    if (priority === void 0) { priority = null; }\n    if (json === null) {\n        return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    if (typeof json === 'object' && '.priority' in json) {\n        priority = json['.priority'];\n    }\n    util_2.assert(priority === null ||\n        typeof priority === 'string' ||\n        typeof priority === 'number' ||\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n        json = json['.value'];\n    }\n    // Valid leaf nodes include non-objects or server-value wrapper objects\n    if (typeof json !== 'object' || '.sv' in json) {\n        var jsonLeaf = json;\n        return new LeafNode_1.LeafNode(jsonLeaf, nodeFromJSON(priority));\n    }\n    if (!(json instanceof Array) && USE_HINZE) {\n        var children_1 = [];\n        var childrenHavePriority_1 = false;\n        var hinzeJsonObj_1 = json;\n        util_1.forEach(hinzeJsonObj_1, function (key, child) {\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\n                // Ignore metadata nodes\n                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);\n                if (!childNode.isEmpty()) {\n                    childrenHavePriority_1 =\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n                    children_1.push(new Node_1.NamedNode(key, childNode));\n                }\n            }\n        });\n        if (children_1.length == 0) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var childSet = childSet_1.buildChildSet(children_1, comparators_1.NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, comparators_1.NAME_COMPARATOR);\n        if (childrenHavePriority_1) {\n            var sortedChildSet = childSet_1.buildChildSet(children_1, PriorityIndex_1.PRIORITY_INDEX.getCompare());\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap_1.IndexMap({ '.priority': sortedChildSet }, { '.priority': PriorityIndex_1.PRIORITY_INDEX }));\n        }\n        else {\n            return new ChildrenNode_1.ChildrenNode(childSet, nodeFromJSON(priority), IndexMap_1.IndexMap.Default);\n        }\n    }\n    else {\n        var node_1 = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var jsonObj_1 = json;\n        util_1.forEach(jsonObj_1, function (key, childData) {\n            if (util_1.contains(jsonObj_1, key)) {\n                if (key.substring(0, 1) !== '.') {\n                    // ignore metadata nodes.\n                    var childNode = nodeFromJSON(childData);\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\n                        node_1 = node_1.updateImmediateChild(key, childNode);\n                }\n            }\n        });\n        return node_1.updatePriority(nodeFromJSON(priority));\n    }\n}\nexports.nodeFromJSON = nodeFromJSON;\nPriorityIndex_1.setNodeFromJSON(nodeFromJSON);\n\n//# sourceMappingURL=nodeFromJSON.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/nodeFromJSON.js\n// module id = 151\n// module chunks = 0","import { Component } from 'react';\n\nexport default class ScrollToTop extends Component {\n  componentWillReceiveProps(nextProps) {\n    const { status: prevStatus } = this.props;\n    const { status: nextStatus } = nextProps;\n\n    if (prevStatus === 'entering' && nextStatus === 'entered') {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ScrollToTop.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createFirebaseNamespace } from './src/firebaseApp';\nexport var firebase = createFirebaseNamespace();\nexport default firebase;\n\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/esm/index.js\n// module id = 153\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DOMStorageWrapper_1 = require(\"./DOMStorageWrapper\");\nvar MemoryStorage_1 = require(\"./MemoryStorage\");\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nvar createStoragefor = function (domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' &&\n            typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new DOMStorageWrapper_1.DOMStorageWrapper(domStorage);\n        }\n    }\n    catch (e) { }\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new MemoryStorage_1.MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nexports.PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nexports.SessionStorage = createStoragefor('sessionStorage');\n\n//# sourceMappingURL=storage.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/storage.js\n// module id = 154\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROTOCOL_VERSION = '5';\nexports.VERSION_PARAM = 'v';\nexports.TRANSPORT_SESSION_PARAM = 's';\nexports.REFERER_PARAM = 'r';\nexports.FORGE_REF = 'f';\nexports.FORGE_DOMAIN = 'firebaseio.com';\nexports.LAST_SESSION_PARAM = 'ls';\nexports.WEBSOCKET = 'websocket';\nexports.LONG_POLLING = 'long_polling';\n\n//# sourceMappingURL=Constants.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/Constants.js\n// module id = 155\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\n/**\n *\n * @constructor\n */\nvar Index = /** @class */ (function () {\n    function Index() {\n    }\n    /**\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\n     * this index\n     */\n    Index.prototype.getCompare = function () {\n        return this.compare.bind(this);\n    };\n    /**\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n     *\n     * @param {!Node} oldNode\n     * @param {!Node} newNode\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\n     */\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n        var oldWrapped = new Node_1.NamedNode(util_1.MIN_NAME, oldNode);\n        var newWrapped = new Node_1.NamedNode(util_1.MIN_NAME, newNode);\n        return this.compare(oldWrapped, newWrapped) !== 0;\n    };\n    /**\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\n     * any other node wrapper, using this index\n     */\n    Index.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    return Index;\n}());\nexports.Index = Index;\n\n//# sourceMappingURL=Index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/Index.js\n// module id = 156\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar snap_1 = require(\"./snap\");\nvar __childrenNodeConstructor;\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nvar LeafNode = /** @class */ (function () {\n    /**\n     * @implements {Node}\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\n     *                                         The object type is possible in the event of a deferred value\n     * @param {!Node=} priorityNode_ The priority of this node.\n     */\n    function LeafNode(value_, priorityNode_) {\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\n        this.value_ = value_;\n        this.priorityNode_ = priorityNode_;\n        this.lazyHash_ = null;\n        util_1.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n        snap_1.validatePriorityNode(this.priorityNode_);\n    }\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n        get: function () {\n            return __childrenNodeConstructor;\n        },\n        set: function (val) {\n            __childrenNodeConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @inheritDoc */\n    LeafNode.prototype.isLeafNode = function () {\n        return true;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPriority = function () {\n        return this.priorityNode_;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\n        return new LeafNode(this.value_, newPriorityNode);\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getImmediateChild = function (childName) {\n        // Hack to treat priority as a regular child\n        if (childName === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getChild = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else if (path.getFront() === '.priority') {\n            return this.priorityNode_;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.hasChild = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n        return null;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n        if (childName === '.priority') {\n            return this.updatePriority(newChildNode);\n        }\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\n            return this;\n        }\n        else {\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\n        var front = path.getFront();\n        if (front === null) {\n            return newChildNode;\n        }\n        else if (newChildNode.isEmpty() && front !== '.priority') {\n            return this;\n        }\n        else {\n            util_1.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n        }\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.numChildren = function () {\n        return 0;\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.forEachChild = function (index, action) {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.val = function (exportFormat) {\n        if (exportFormat && !this.getPriority().isEmpty())\n            return {\n                '.value': this.getValue(),\n                '.priority': this.getPriority().val()\n            };\n        else\n            return this.getValue();\n    };\n    /** @inheritDoc */\n    LeafNode.prototype.hash = function () {\n        if (this.lazyHash_ === null) {\n            var toHash = '';\n            if (!this.priorityNode_.isEmpty())\n                toHash +=\n                    'priority:' +\n                        snap_1.priorityHashText(this.priorityNode_.val()) +\n                        ':';\n            var type = typeof this.value_;\n            toHash += type + ':';\n            if (type === 'number') {\n                toHash += util_2.doubleToIEEE754String(this.value_);\n            }\n            else {\n                toHash += this.value_;\n            }\n            this.lazyHash_ = util_2.sha1(toHash);\n        }\n        return this.lazyHash_;\n    };\n    /**\n     * Returns the value of the leaf node.\n     * @return {Object|string|number|boolean} The value of the node.\n     */\n    LeafNode.prototype.getValue = function () {\n        return this.value_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.compareTo = function (other) {\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n            return 1;\n        }\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\n            return -1;\n        }\n        else {\n            util_1.assert(other.isLeafNode(), 'Unknown node type');\n            return this.compareToLeafNode_(other);\n        }\n    };\n    /**\n     * Comparison specifically for two leaf nodes\n     * @param {!LeafNode} otherLeaf\n     * @return {!number}\n     * @private\n     */\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n        var otherLeafType = typeof otherLeaf.value_;\n        var thisLeafType = typeof this.value_;\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n        util_1.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n        util_1.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n        if (otherIndex === thisIndex) {\n            // Same type, compare values\n            if (thisLeafType === 'object') {\n                // Deferred value nodes are all equal, but we should also never get to this point...\n                return 0;\n            }\n            else {\n                // Note that this works because true > false, all others are number or string comparisons\n                if (this.value_ < otherLeaf.value_) {\n                    return -1;\n                }\n                else if (this.value_ === otherLeaf.value_) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            }\n        }\n        else {\n            return thisIndex - otherIndex;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.withIndex = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.isIndexed = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LeafNode.prototype.equals = function (other) {\n        /**\n         * @inheritDoc\n         */\n        if (other === this) {\n            return true;\n        }\n        else if (other.isLeafNode()) {\n            var otherLeaf = other;\n            return (this.value_ === otherLeaf.value_ &&\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n     * the same type, the comparison falls back to their value\n     * @type {Array.<!string>}\n     * @const\n     */\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n    return LeafNode;\n}());\nexports.LeafNode = LeafNode;\n\n//# sourceMappingURL=LeafNode.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/LeafNode.js\n// module id = 157\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An iterator over an LLRBNode.\n */\nvar SortedMapIterator = /** @class */ (function () {\n    /**\n     * @template K, V, T\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\n     * @param {?K} startKey\n     * @param {function(K, K): number} comparator\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\n     * @param {(function(K, V):T)=} resultGenerator_\n     */\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\n        this.isReverse_ = isReverse_;\n        this.resultGenerator_ = resultGenerator_;\n        /** @private\n         * @type {Array.<!LLRBNode>}\n         */\n        this.nodeStack_ = [];\n        var cmp = 1;\n        while (!node.isEmpty()) {\n            node = node;\n            cmp = startKey ? comparator(node.key, startKey) : 1;\n            // flip the comparison if we're going in reverse\n            if (isReverse_)\n                cmp *= -1;\n            if (cmp < 0) {\n                // This node is less than our start key. ignore it\n                if (this.isReverse_) {\n                    node = node.left;\n                }\n                else {\n                    node = node.right;\n                }\n            }\n            else if (cmp === 0) {\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n                this.nodeStack_.push(node);\n                break;\n            }\n            else {\n                // This node is greater than our start key, add it to the stack and move to the next one\n                this.nodeStack_.push(node);\n                if (this.isReverse_) {\n                    node = node.right;\n                }\n                else {\n                    node = node.left;\n                }\n            }\n        }\n    }\n    SortedMapIterator.prototype.getNext = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_.pop();\n        var result;\n        if (this.resultGenerator_)\n            result = this.resultGenerator_(node.key, node.value);\n        else\n            result = { key: node.key, value: node.value };\n        if (this.isReverse_) {\n            node = node.left;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.right;\n            }\n        }\n        else {\n            node = node.right;\n            while (!node.isEmpty()) {\n                this.nodeStack_.push(node);\n                node = node.left;\n            }\n        }\n        return result;\n    };\n    SortedMapIterator.prototype.hasNext = function () {\n        return this.nodeStack_.length > 0;\n    };\n    SortedMapIterator.prototype.peek = function () {\n        if (this.nodeStack_.length === 0)\n            return null;\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\n        if (this.resultGenerator_) {\n            return this.resultGenerator_(node.key, node.value);\n        }\n        else {\n            return { key: node.key, value: node.value };\n        }\n    };\n    return SortedMapIterator;\n}());\nexports.SortedMapIterator = SortedMapIterator;\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nvar LLRBNode = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {!K} key Key associated with this node.\n     * @param {!V} value Value associated with this node.\n     * @param {?boolean} color Whether this node is red.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\n     */\n    function LLRBNode(key, value, color, left, right) {\n        this.key = key;\n        this.value = value;\n        this.color = color != null ? color : LLRBNode.RED;\n        this.left =\n            left != null ? left : SortedMap.EMPTY_NODE;\n        this.right =\n            right != null ? right : SortedMap.EMPTY_NODE;\n    }\n    /**\n     * Returns a copy of the current node, optionally replacing pieces of it.\n     *\n     * @param {?K} key New key for the node, or null.\n     * @param {?V} value New value for the node, or null.\n     * @param {?boolean} color New color for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\n     * @return {!LLRBNode} The node copy.\n     */\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBNode.prototype.count = function () {\n        return this.left.count() + 1 + this.right.count();\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBNode.prototype.isEmpty = function () {\n        return false;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     *   node.  If it returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    LLRBNode.prototype.inorderTraversal = function (action) {\n        return (this.left.inorderTraversal(action) ||\n            action(this.key, this.value) ||\n            this.right.inorderTraversal(action));\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {*} True if traversal was aborted.\n     */\n    LLRBNode.prototype.reverseTraversal = function (action) {\n        return (this.right.reverseTraversal(action) ||\n            action(this.key, this.value) ||\n            this.left.reverseTraversal(action));\n    };\n    /**\n     * @return {!Object} The minimum node in the tree.\n     * @private\n     */\n    LLRBNode.prototype.min_ = function () {\n        if (this.left.isEmpty()) {\n            return this;\n        }\n        else {\n            return this.left.min_();\n        }\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.minKey = function () {\n        return this.min_().key;\n    };\n    /**\n     * @return {!K} The maximum key in the tree.\n     */\n    LLRBNode.prototype.maxKey = function () {\n        if (this.right.isEmpty()) {\n            return this.key;\n        }\n        else {\n            return this.right.maxKey();\n        }\n    };\n    /**\n     *\n     * @param {!Object} key Key to insert.\n     * @param {!Object} value Value to insert.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with the key/value added.\n     */\n    LLRBNode.prototype.insert = function (key, value, comparator) {\n        var cmp, n;\n        n = this;\n        cmp = comparator(key, n.key);\n        if (cmp < 0) {\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n        }\n        else if (cmp === 0) {\n            n = n.copy(null, value, null, null, null);\n        }\n        else {\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\n     */\n    LLRBNode.prototype.removeMin_ = function () {\n        if (this.left.isEmpty()) {\n            return SortedMap.EMPTY_NODE;\n        }\n        var n = this;\n        if (!n.left.isRed_() && !n.left.left.isRed_())\n            n = n.moveRedLeft_();\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\n        return n.fixUp_();\n    };\n    /**\n     * @param {!Object} key The key of the item to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\n     */\n    LLRBNode.prototype.remove = function (key, comparator) {\n        var n, smallest;\n        n = this;\n        if (comparator(key, n.key) < 0) {\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n                n = n.moveRedLeft_();\n            }\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n        }\n        else {\n            if (n.left.isRed_())\n                n = n.rotateRight_();\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n                n = n.moveRedRight_();\n            }\n            if (comparator(key, n.key) === 0) {\n                if (n.right.isEmpty()) {\n                    return SortedMap.EMPTY_NODE;\n                }\n                else {\n                    smallest = n.right.min_();\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n                }\n            }\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n        }\n        return n.fixUp_();\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this is a RED node.\n     */\n    LLRBNode.prototype.isRed_ = function () {\n        return this.color;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree after performing any needed rotations.\n     */\n    LLRBNode.prototype.fixUp_ = function () {\n        var n = this;\n        if (n.right.isRed_() && !n.left.isRed_())\n            n = n.rotateLeft_();\n        if (n.left.isRed_() && n.left.left.isRed_())\n            n = n.rotateRight_();\n        if (n.left.isRed_() && n.right.isRed_())\n            n = n.colorFlip_();\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedLeft.\n     */\n    LLRBNode.prototype.moveRedLeft_ = function () {\n        var n = this.colorFlip_();\n        if (n.right.left.isRed_()) {\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\n            n = n.rotateLeft_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after moveRedRight.\n     */\n    LLRBNode.prototype.moveRedRight_ = function () {\n        var n = this.colorFlip_();\n        if (n.left.left.isRed_()) {\n            n = n.rotateRight_();\n            n = n.colorFlip_();\n        }\n        return n;\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateLeft.\n     */\n    LLRBNode.prototype.rotateLeft_ = function () {\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, nl, null);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after rotateRight.\n     */\n    LLRBNode.prototype.rotateRight_ = function () {\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, nr);\n    };\n    /**\n     * @private\n     * @return {!LLRBNode} New tree, after colorFlip.\n     */\n    LLRBNode.prototype.colorFlip_ = function () {\n        var left = this.left.copy(null, null, !this.left.color, null, null);\n        var right = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, left, right);\n    };\n    /**\n     * For testing.\n     *\n     * @private\n     * @return {boolean} True if all is well.\n     */\n    LLRBNode.prototype.checkMaxDepth_ = function () {\n        var blackDepth = this.check_();\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBNode.prototype.check_ = function () {\n        var blackDepth;\n        if (this.isRed_() && this.left.isRed_()) {\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n        }\n        if (this.right.isRed_()) {\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n        }\n        blackDepth = this.left.check_();\n        if (blackDepth !== this.right.check_()) {\n            throw new Error('Black depths differ');\n        }\n        else {\n            return blackDepth + (this.isRed_() ? 0 : 1);\n        }\n    };\n    LLRBNode.RED = true;\n    LLRBNode.BLACK = false;\n    return LLRBNode;\n}());\nexports.LLRBNode = LLRBNode;\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nvar LLRBEmptyNode = /** @class */ (function () {\n    function LLRBEmptyNode() {\n    }\n    /**\n     * Returns a copy of the current node.\n     *\n     * @return {!LLRBEmptyNode} The node copy.\n     */\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n        return this;\n    };\n    /**\n     * Returns a copy of the tree, with the specified key/value added.\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBNode} New tree, with item added.\n     */\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n        return new LLRBNode(key, value, null);\n    };\n    /**\n     * Returns a copy of the tree, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @param {Comparator} comparator Comparator.\n     * @return {!LLRBEmptyNode} New tree, with item removed.\n     */\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\n        return this;\n    };\n    /**\n     * @return {number} The total number of nodes in the tree.\n     */\n    LLRBEmptyNode.prototype.count = function () {\n        return 0;\n    };\n    /**\n     * @return {boolean} True if the tree is empty.\n     */\n    LLRBEmptyNode.prototype.isEmpty = function () {\n        return true;\n    };\n    /**\n     * Traverses the tree in key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n        return false;\n    };\n    /**\n     * Traverses the tree in reverse key order and calls the specified action function\n     * for each node.\n     *\n     * @param {function(!K, !V)} action Callback function to be called for each\n     * node.  If it returns true, traversal is aborted.\n     * @return {boolean} True if traversal was aborted.\n     */\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n        return false;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.minKey = function () {\n        return null;\n    };\n    /**\n     * @return {null}\n     */\n    LLRBEmptyNode.prototype.maxKey = function () {\n        return null;\n    };\n    /**\n     * @private\n     * @return {number} Not sure what this returns exactly. :-).\n     */\n    LLRBEmptyNode.prototype.check_ = function () {\n        return 0;\n    };\n    /**\n     * @private\n     * @return {boolean} Whether this node is red.\n     */\n    LLRBEmptyNode.prototype.isRed_ = function () {\n        return false;\n    };\n    return LLRBEmptyNode;\n}());\nexports.LLRBEmptyNode = LLRBEmptyNode;\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nvar SortedMap = /** @class */ (function () {\n    /**\n     * @template K, V\n     * @param {function(K, K):number} comparator_ Key comparator.\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\n     */\n    function SortedMap(comparator_, root_) {\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\n        this.comparator_ = comparator_;\n        this.root_ = root_;\n    }\n    /**\n     * Returns a copy of the map, with the specified key/value added or replaced.\n     * (TODO: We should perhaps rename this method to 'put')\n     *\n     * @param {!K} key Key to be added.\n     * @param {!V} value Value to be added.\n     * @return {!SortedMap.<K, V>} New map, with item added.\n     */\n    SortedMap.prototype.insert = function (key, value) {\n        return new SortedMap(this.comparator_, this.root_\n            .insert(key, value, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns a copy of the map, with the specified key removed.\n     *\n     * @param {!K} key The key to remove.\n     * @return {!SortedMap.<K, V>} New map, with item removed.\n     */\n    SortedMap.prototype.remove = function (key) {\n        return new SortedMap(this.comparator_, this.root_\n            .remove(key, this.comparator_)\n            .copy(null, null, LLRBNode.BLACK, null, null));\n    };\n    /**\n     * Returns the value of the node with the given key, or null.\n     *\n     * @param {!K} key The key to look up.\n     * @return {?V} The value of the node with the given key, or null if the\n     * key doesn't exist.\n     */\n    SortedMap.prototype.get = function (key) {\n        var cmp;\n        var node = this.root_;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                return node.value;\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                node = node.right;\n            }\n        }\n        return null;\n    };\n    /**\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\n     * @param {K} key The key to find the predecessor of\n     * @return {?K} The predecessor key.\n     */\n    SortedMap.prototype.getPredecessorKey = function (key) {\n        var cmp, node = this.root_, rightParent = null;\n        while (!node.isEmpty()) {\n            cmp = this.comparator_(key, node.key);\n            if (cmp === 0) {\n                if (!node.left.isEmpty()) {\n                    node = node.left;\n                    while (!node.right.isEmpty())\n                        node = node.right;\n                    return node.key;\n                }\n                else if (rightParent) {\n                    return rightParent.key;\n                }\n                else {\n                    return null; // first item.\n                }\n            }\n            else if (cmp < 0) {\n                node = node.left;\n            }\n            else if (cmp > 0) {\n                rightParent = node;\n                node = node.right;\n            }\n        }\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n    };\n    /**\n     * @return {boolean} True if the map is empty.\n     */\n    SortedMap.prototype.isEmpty = function () {\n        return this.root_.isEmpty();\n    };\n    /**\n     * @return {number} The total number of nodes in the map.\n     */\n    SortedMap.prototype.count = function () {\n        return this.root_.count();\n    };\n    /**\n     * @return {?K} The minimum key in the map.\n     */\n    SortedMap.prototype.minKey = function () {\n        return this.root_.minKey();\n    };\n    /**\n     * @return {?K} The maximum key in the map.\n     */\n    SortedMap.prototype.maxKey = function () {\n        return this.root_.maxKey();\n    };\n    /**\n     * Traverses the map in key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!K, !V):*} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} The first truthy value returned by action, or the last falsey\n     *   value returned by action\n     */\n    SortedMap.prototype.inorderTraversal = function (action) {\n        return this.root_.inorderTraversal(action);\n    };\n    /**\n     * Traverses the map in reverse key order and calls the specified action function\n     * for each key/value pair.\n     *\n     * @param {function(!Object, !Object)} action Callback function to be called\n     * for each key/value pair.  If action returns true, traversal is aborted.\n     * @return {*} True if the traversal was aborted.\n     */\n    SortedMap.prototype.reverseTraversal = function (action) {\n        return this.root_.reverseTraversal(action);\n    };\n    /**\n     * Returns an iterator over the SortedMap.\n     * @template T\n     * @param {(function(K, V):T)=} resultGenerator\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\n     */\n    SortedMap.prototype.getIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n    };\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n    };\n    /**\n     * Always use the same empty node, to reduce memory.\n     * @const\n     */\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n    return SortedMap;\n}());\nexports.SortedMap = SortedMap;\n\n//# sourceMappingURL=SortedMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/SortedMap.js\n// module id = 158\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar Path_1 = require(\"./util/Path\");\nvar SparseSnapshotTree_1 = require(\"./SparseSnapshotTree\");\nvar SyncTree_1 = require(\"./SyncTree\");\nvar SnapshotHolder_1 = require(\"./SnapshotHolder\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar AuthTokenProvider_1 = require(\"./AuthTokenProvider\");\nvar StatsManager_1 = require(\"./stats/StatsManager\");\nvar StatsReporter_1 = require(\"./stats/StatsReporter\");\nvar StatsListener_1 = require(\"./stats/StatsListener\");\nvar EventQueue_1 = require(\"./view/EventQueue\");\nvar PersistentConnection_1 = require(\"./PersistentConnection\");\nvar ReadonlyRestClient_1 = require(\"./ReadonlyRestClient\");\nvar Database_1 = require(\"../api/Database\");\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/Repo.js\n// module id = 159\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nvar CacheNode = /** @class */ (function () {\n    /**\n     * @param {!Node} node_\n     * @param {boolean} fullyInitialized_\n     * @param {boolean} filtered_\n     */\n    function CacheNode(node_, fullyInitialized_, filtered_) {\n        this.node_ = node_;\n        this.fullyInitialized_ = fullyInitialized_;\n        this.filtered_ = filtered_;\n    }\n    /**\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFullyInitialized = function () {\n        return this.fullyInitialized_;\n    };\n    /**\n     * Returns whether this node is potentially missing children due to a filter applied to the node\n     * @return {boolean}\n     */\n    CacheNode.prototype.isFiltered = function () {\n        return this.filtered_;\n    };\n    /**\n     * @param {!Path} path\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForPath = function (path) {\n        if (path.isEmpty()) {\n            return this.isFullyInitialized() && !this.filtered_;\n        }\n        var childKey = path.getFront();\n        return this.isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!string} key\n     * @return {boolean}\n     */\n    CacheNode.prototype.isCompleteForChild = function (key) {\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\n    };\n    /**\n     * @return {!Node}\n     */\n    CacheNode.prototype.getNode = function () {\n        return this.node_;\n    };\n    return CacheNode;\n}());\nexports.CacheNode = CacheNode;\n\n//# sourceMappingURL=CacheNode.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/CacheNode.js\n// module id = 160\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nexports.CONSTANTS = {\n    /**\n     * @define {boolean} Whether this is the client Node.js SDK.\n     */\n    NODE_CLIENT: false,\n    /**\n     * @define {boolean} Whether this is the Admin Node.js SDK.\n     */\n    NODE_ADMIN: false,\n    /**\n     * Firebase SDK Version\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n//# sourceMappingURL=constants.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/constants.js\n// module id = 161\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar onDisconnect_1 = require(\"./onDisconnect\");\nvar TransactionResult_1 = require(\"./TransactionResult\");\nvar util_1 = require(\"../core/util/util\");\nvar NextPushId_1 = require(\"../core/util/NextPushId\");\nvar Query_1 = require(\"./Query\");\nvar Repo_1 = require(\"../core/Repo\");\nvar Path_1 = require(\"../core/util/Path\");\nvar QueryParams_1 = require(\"../core/view/QueryParams\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar SyncPoint_1 = require(\"../core/SyncPoint\");\nvar Reference = /** @class */ (function (_super) {\n    tslib_1.__extends(Reference, _super);\n    /**\n     * Call options:\n     *   new Reference(Repo, Path) or\n     *   new Reference(url: string, string|RepoManager)\n     *\n     * Externally - this is the firebase.database.Reference type.\n     *\n     * @param {!Repo} repo\n     * @param {(!Path)} path\n     * @extends {Query}\n     */\n    function Reference(repo, path) {\n        var _this = this;\n        if (!(repo instanceof Repo_1.Repo)) {\n            throw new Error('new Reference() no longer supported - use app.database().');\n        }\n        // call Query's constructor, passing in the repo and path.\n        _this = _super.call(this, repo, path, QueryParams_1.QueryParams.DEFAULT, false) || this;\n        return _this;\n    }\n    /** @return {?string} */\n    Reference.prototype.getKey = function () {\n        util_2.validateArgCount('Reference.key', 0, 0, arguments.length);\n        if (this.path.isEmpty())\n            return null;\n        else\n            return this.path.getBack();\n    };\n    /**\n     * @param {!(string|Path)} pathString\n     * @return {!Reference}\n     */\n    Reference.prototype.child = function (pathString) {\n        util_2.validateArgCount('Reference.child', 1, 1, arguments.length);\n        if (typeof pathString === 'number') {\n            pathString = String(pathString);\n        }\n        else if (!(pathString instanceof Path_1.Path)) {\n            if (this.path.getFront() === null)\n                validation_1.validateRootPathString('Reference.child', 1, pathString, false);\n            else\n                validation_1.validatePathString('Reference.child', 1, pathString, false);\n        }\n        return new Reference(this.repo, this.path.child(pathString));\n    };\n    /** @return {?Reference} */\n    Reference.prototype.getParent = function () {\n        util_2.validateArgCount('Reference.parent', 0, 0, arguments.length);\n        var parentPath = this.path.parent();\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\n    };\n    /** @return {!Reference} */\n    Reference.prototype.getRoot = function () {\n        util_2.validateArgCount('Reference.root', 0, 0, arguments.length);\n        var ref = this;\n        while (ref.getParent() !== null) {\n            ref = ref.getParent();\n        }\n        return ref;\n    };\n    /** @return {!Database} */\n    Reference.prototype.databaseProp = function () {\n        return this.repo.database;\n    };\n    /**\n     * @param {*} newVal\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.set = function (newVal, onComplete) {\n        util_2.validateArgCount('Reference.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.set', this.path);\n        validation_1.validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n        util_2.validateCallback('Reference.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, \n        /*priority=*/ null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.update = function (objectToMerge, onComplete) {\n        util_2.validateArgCount('Reference.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.update', this.path);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_1.warn('Passing an Array to Firebase.update() is deprecated. ' +\n                'Use set() if you want to overwrite the existing data, or ' +\n                'an Object with integer keys if you really do want to ' +\n                'only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n        util_2.validateCallback('Reference.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} newVal\n     * @param {string|number|null} newPriority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n        util_2.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.setWithPriority', this.path);\n        validation_1.validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n        validation_1.validatePriority('Reference.setWithPriority', 2, newPriority, false);\n        util_2.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.setWithPriority failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.remove = function (onComplete) {\n        util_2.validateArgCount('Reference.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('Reference.remove', this.path);\n        util_2.validateCallback('Reference.remove', 1, onComplete, true);\n        return this.set(null, onComplete);\n    };\n    /**\n     * @param {function(*):*} transactionUpdate\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\n     * @param {boolean=} applyLocally\n     * @return {!Promise}\n     */\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n        util_2.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n        validation_1.validateWritablePath('Reference.transaction', this.path);\n        util_2.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n        util_2.validateCallback('Reference.transaction', 2, onComplete, true);\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n        // to expose it.\n        validation_1.validateBoolean('Reference.transaction', 3, applyLocally, true);\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\n            throw 'Reference.transaction failed: ' +\n                this.getKey() +\n                ' is a read-only object.';\n        if (applyLocally === undefined)\n            applyLocally = true;\n        var deferred = new util_3.Deferred();\n        if (typeof onComplete === 'function') {\n            deferred.promise.catch(function () { });\n        }\n        var promiseComplete = function (error, committed, snapshot) {\n            if (error) {\n                deferred.reject(error);\n            }\n            else {\n                deferred.resolve(new TransactionResult_1.TransactionResult(committed, snapshot));\n            }\n            if (typeof onComplete === 'function') {\n                onComplete(error, committed, snapshot);\n            }\n        };\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n        return deferred.promise;\n    };\n    /**\n     * @param {string|number|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!Promise}\n     */\n    Reference.prototype.setPriority = function (priority, onComplete) {\n        util_2.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.setPriority', this.path);\n        validation_1.validatePriority('Reference.setPriority', 1, priority, false);\n        util_2.validateCallback('Reference.setPriority', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*=} value\n     * @param {function(?Error)=} onComplete\n     * @return {!Reference}\n     */\n    Reference.prototype.push = function (value, onComplete) {\n        util_2.validateArgCount('Reference.push', 0, 2, arguments.length);\n        validation_1.validateWritablePath('Reference.push', this.path);\n        validation_1.validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n        util_2.validateCallback('Reference.push', 2, onComplete, true);\n        var now = this.repo.serverTime();\n        var name = NextPushId_1.nextPushId(now);\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n        // We use child() to create handles to two different references. The first is turned into a\n        // ThennableReference below by adding then() and catch() methods and is used as the\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\n        // value of the first ThennableReference.\n        var thennablePushRef = this.child(name);\n        var pushRef = this.child(name);\n        var promise;\n        if (value != null) {\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\n        }\n        else {\n            promise = Promise.resolve(pushRef);\n        }\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\n        if (typeof onComplete === 'function') {\n            promise.catch(function () { });\n        }\n        return thennablePushRef;\n    };\n    /**\n     * @return {!OnDisconnect}\n     */\n    Reference.prototype.onDisconnect = function () {\n        validation_1.validateWritablePath('Reference.onDisconnect', this.path);\n        return new onDisconnect_1.OnDisconnect(this.repo, this.path);\n    };\n    Object.defineProperty(Reference.prototype, \"database\", {\n        get: function () {\n            return this.databaseProp();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"key\", {\n        get: function () {\n            return this.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"parent\", {\n        get: function () {\n            return this.getParent();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Reference.prototype, \"root\", {\n        get: function () {\n            return this.getRoot();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Reference;\n}(Query_1.Query));\nexports.Reference = Reference;\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery_1.Query.__referenceConstructor = Reference;\nSyncPoint_1.SyncPoint.__referenceConstructor = Reference;\n\n//# sourceMappingURL=Reference.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/Reference.js\n// module id = 162\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar Path_1 = require(\"../core/util/Path\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js\n// module id = 163\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = require(\"./SortedMap\");\nvar Path_1 = require(\"./Path\");\nvar util_1 = require(\"./util\");\nvar util_2 = require(\"@firebase/util\");\nvar emptyChildrenSingleton;\n/**\n * Singleton empty children collection.\n *\n * @const\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\n */\nvar EmptyChildren = function () {\n    if (!emptyChildrenSingleton) {\n        emptyChildrenSingleton = new SortedMap_1.SortedMap(util_1.stringCompare);\n    }\n    return emptyChildrenSingleton;\n};\n/**\n * A tree with immutable elements.\n */\nvar ImmutableTree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {?T} value\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\n     */\n    function ImmutableTree(value, children) {\n        if (children === void 0) { children = EmptyChildren(); }\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @template T\n     * @param {!Object.<string, !T>} obj\n     * @return {!ImmutableTree.<!T>}\n     */\n    ImmutableTree.fromObject = function (obj) {\n        var tree = ImmutableTree.Empty;\n        util_2.forEach(obj, function (childPath, childSnap) {\n            tree = tree.set(new Path_1.Path(childPath), childSnap);\n        });\n        return tree;\n    };\n    /**\n     * True if the value is empty and there are no children\n     * @return {boolean}\n     */\n    ImmutableTree.prototype.isEmpty = function () {\n        return this.value === null && this.children.isEmpty();\n    };\n    /**\n     * Given a path and predicate, return the first node and the path to that node\n     * where the predicate returns true.\n     *\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n     * on the way back out, it may be better to pass down a pathSoFar obj.\n     *\n     * @param {!Path} relativePath The remainder of the path\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\n     *   node\n     * @return {?{path:!Path, value:!T}}\n     */\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n        if (this.value != null && predicate(this.value)) {\n            return { path: Path_1.Path.Empty, value: this.value };\n        }\n        else {\n            if (relativePath.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = relativePath.getFront();\n                var child = this.children.get(front);\n                if (child !== null) {\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n                    if (childExistingPathAndValue != null) {\n                        var fullPath = new Path_1.Path(front).child(childExistingPathAndValue.path);\n                        return { path: fullPath, value: childExistingPathAndValue.value };\n                    }\n                    else {\n                        return null;\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     * Find, if it exists, the shortest subpath of the given path that points a defined\n     * value in the tree\n     * @param {!Path} relativePath\n     * @return {?{path: !Path, value: !T}}\n     */\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\n    };\n    /**\n     * @param {!Path} relativePath\n     * @return {!ImmutableTree.<T>} The subtree at the given path\n     */\n    ImmutableTree.prototype.subtree = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this;\n        }\n        else {\n            var front = relativePath.getFront();\n            var childTree = this.children.get(front);\n            if (childTree !== null) {\n                return childTree.subtree(relativePath.popFront());\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Sets a value at the specified path.\n     *\n     * @param {!Path} relativePath Path to set value at.\n     * @param {?T} toSet Value to set.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\n        if (relativePath.isEmpty()) {\n            return new ImmutableTree(toSet, this.children);\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.set(relativePath.popFront(), toSet);\n            var newChildren = this.children.insert(front, newChild);\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Removes the value at the specified path.\n     *\n     * @param {!Path} relativePath Path to value to remove.\n     * @return {!ImmutableTree.<T>} Resulting tree.\n     */\n    ImmutableTree.prototype.remove = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            if (this.children.isEmpty()) {\n                return ImmutableTree.Empty;\n            }\n            else {\n                return new ImmutableTree(null, this.children);\n            }\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                var newChild = child.remove(relativePath.popFront());\n                var newChildren = void 0;\n                if (newChild.isEmpty()) {\n                    newChildren = this.children.remove(front);\n                }\n                else {\n                    newChildren = this.children.insert(front, newChild);\n                }\n                if (this.value === null && newChildren.isEmpty()) {\n                    return ImmutableTree.Empty;\n                }\n                else {\n                    return new ImmutableTree(this.value, newChildren);\n                }\n            }\n            else {\n                return this;\n            }\n        }\n    };\n    /**\n     * Gets a value from the tree.\n     *\n     * @param {!Path} relativePath Path to get value for.\n     * @return {?T} Value at path, or null.\n     */\n    ImmutableTree.prototype.get = function (relativePath) {\n        if (relativePath.isEmpty()) {\n            return this.value;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front);\n            if (child) {\n                return child.get(relativePath.popFront());\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Replace the subtree at the specified path with the given new tree.\n     *\n     * @param {!Path} relativePath Path to replace subtree for.\n     * @param {!ImmutableTree} newTree New tree.\n     * @return {!ImmutableTree} Resulting tree.\n     */\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n        if (relativePath.isEmpty()) {\n            return newTree;\n        }\n        else {\n            var front = relativePath.getFront();\n            var child = this.children.get(front) || ImmutableTree.Empty;\n            var newChild = child.setTree(relativePath.popFront(), newTree);\n            var newChildren = void 0;\n            if (newChild.isEmpty()) {\n                newChildren = this.children.remove(front);\n            }\n            else {\n                newChildren = this.children.insert(front, newChild);\n            }\n            return new ImmutableTree(this.value, newChildren);\n        }\n    };\n    /**\n     * Performs a depth first fold on this tree. Transforms a tree into a single\n     * value, given a function that operates on the path to a node, an optional\n     * current value, and a map of child names to folded subtrees\n     * @template V\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     */\n    ImmutableTree.prototype.fold = function (fn) {\n        return this.fold_(Path_1.Path.Empty, fn);\n    };\n    /**\n     * Recursive helper for public-facing fold() method\n     * @template V\n     * @param {!Path} pathSoFar\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\n     * @return {V}\n     * @private\n     */\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n        var accum = {};\n        this.children.inorderTraversal(function (childKey, childTree) {\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n        });\n        return fn(pathSoFar, this.value, accum);\n    };\n    /**\n     * Find the first matching value on the given path. Return the result of applying f to it.\n     * @template V\n     * @param {!Path} path\n     * @param {!function(!Path, !T):?V} f\n     * @return {?V}\n     */\n    ImmutableTree.prototype.findOnPath = function (path, f) {\n        return this.findOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n        var result = this.value ? f(pathSoFar, this.value) : false;\n        if (result) {\n            return result;\n        }\n        else {\n            if (pathToFollow.isEmpty()) {\n                return null;\n            }\n            else {\n                var front = pathToFollow.getFront();\n                var nextChild = this.children.get(front);\n                if (nextChild) {\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {!Path} path\n     * @param {!function(!Path, !T)} f\n     * @returns {!ImmutableTree.<T>}\n     */\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\n        return this.foreachOnPath_(path, Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n        if (pathToFollow.isEmpty()) {\n            return this;\n        }\n        else {\n            if (this.value) {\n                f(currentRelativePath, this.value);\n            }\n            var front = pathToFollow.getFront();\n            var nextChild = this.children.get(front);\n            if (nextChild) {\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n            }\n            else {\n                return ImmutableTree.Empty;\n            }\n        }\n    };\n    /**\n     * Calls the given function for each node in the tree that has a value.\n     *\n     * @param {function(!Path, !T)} f A function to be called with\n     *   the path from the root of the tree to a node, and the value at that node.\n     *   Called in depth-first order.\n     */\n    ImmutableTree.prototype.foreach = function (f) {\n        this.foreach_(Path_1.Path.Empty, f);\n    };\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            childTree.foreach_(currentRelativePath.child(childName), f);\n        });\n        if (this.value) {\n            f(currentRelativePath, this.value);\n        }\n    };\n    /**\n     *\n     * @param {function(string, !T)} f\n     */\n    ImmutableTree.prototype.foreachChild = function (f) {\n        this.children.inorderTraversal(function (childName, childTree) {\n            if (childTree.value) {\n                f(childName, childTree.value);\n            }\n        });\n    };\n    ImmutableTree.Empty = new ImmutableTree(null);\n    return ImmutableTree;\n}());\nexports.ImmutableTree = ImmutableTree;\n\n//# sourceMappingURL=ImmutableTree.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/ImmutableTree.js\n// module id = 164\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"../Change\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\nvar PriorityIndex_1 = require(\"../../snap/indexes/PriorityIndex\");\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n *\n * @constructor\n * @implements {NodeFilter}\n * @param {!Index} index\n */\nvar IndexedFilter = /** @class */ (function () {\n    function IndexedFilter(index_) {\n        this.index_ = index_;\n    }\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        util_1.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n        var oldChild = snap.getImmediateChild(key);\n        // Check if anything actually changed.\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n            // to avoid treating these cases as \"nothing changed.\"\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\n                // Nothing changed.\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n                return snap;\n            }\n        }\n        if (optChangeAccumulator != null) {\n            if (newChild.isEmpty()) {\n                if (snap.hasChild(key)) {\n                    optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, oldChild));\n                }\n                else {\n                    util_1.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n                }\n            }\n            else if (oldChild.isEmpty()) {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, newChild));\n            }\n            else {\n                optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, newChild, oldChild));\n            }\n        }\n        if (snap.isLeafNode() && newChild.isEmpty()) {\n            return snap;\n        }\n        else {\n            // Make sure the node is indexed\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (optChangeAccumulator != null) {\n            if (!oldSnap.isLeafNode()) {\n                oldSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (!newSnap.hasChild(key)) {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(key, childNode));\n                    }\n                });\n            }\n            if (!newSnap.isLeafNode()) {\n                newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                    if (oldSnap.hasChild(key)) {\n                        var oldChild = oldSnap.getImmediateChild(key);\n                        if (!oldChild.equals(childNode)) {\n                            optChangeAccumulator.trackChildChange(Change_1.Change.childChangedChange(key, childNode, oldChild));\n                        }\n                    }\n                    else {\n                        optChangeAccumulator.trackChildChange(Change_1.Change.childAddedChange(key, childNode));\n                    }\n                });\n            }\n        }\n        return newSnap.withIndex(this.index_);\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        if (oldSnap.isEmpty()) {\n            return ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        else {\n            return oldSnap.updatePriority(newPriority);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.filtersNodes = function () {\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndexedFilter = function () {\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    IndexedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    return IndexedFilter;\n}());\nexports.IndexedFilter = IndexedFilter;\n\n//# sourceMappingURL=IndexedFilter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/IndexedFilter.js\n// module id = 165\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StatsCollection_1 = require(\"./StatsCollection\");\nvar StatsManager = /** @class */ (function () {\n    function StatsManager() {\n    }\n    StatsManager.getCollection = function (repoInfo) {\n        var hashString = repoInfo.toString();\n        if (!this.collections_[hashString]) {\n            this.collections_[hashString] = new StatsCollection_1.StatsCollection();\n        }\n        return this.collections_[hashString];\n    };\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n        var hashString = repoInfo.toString();\n        if (!this.reporters_[hashString]) {\n            this.reporters_[hashString] = creatorFunction();\n        }\n        return this.reporters_[hashString];\n    };\n    StatsManager.collections_ = {};\n    StatsManager.reporters_ = {};\n    return StatsManager;\n}());\nexports.StatsManager = StatsManager;\n\n//# sourceMappingURL=StatsManager.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsManager.js\n// module id = 166\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Repo_1 = require(\"./Repo\");\nvar util_2 = require(\"./util/util\");\nvar parser_1 = require(\"./util/libs/parser\");\nvar validation_1 = require(\"./util/validation\");\nrequire(\"./Repo_transaction\");\n/** @const {string} */\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\n * Creates and caches Repo instances.\n */\nvar RepoManager = /** @class */ (function () {\n    function RepoManager() {\n        /**\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n         */\n        this.repos_ = {};\n        /**\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n         * @private {boolean}\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].interrupt();\n            }\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].resume();\n            }\n        }\n    };\n    /**\n     * This function should only ever be called to CREATE a new database instance.\n     *\n     * @param {!FirebaseApp} app\n     * @return {!Database}\n     */\n    RepoManager.prototype.databaseFromApp = function (app, url) {\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            util_2.fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\n                DATABASE_URL_OPTION +\n                ' option when calling firebase.initializeApp().');\n        }\n        var parsedUrl = parser_1.parseRepoInfo(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        validation_1.validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            util_2.fatal('Database URL must point to the root of a Firebase Database ' +\n                '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\n     * Remove the repo and make sure it is disconnected.\n     *\n     * @param {!Repo} repo\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        var appRepos = util_1.safeGet(this.repos_, repo.app.name);\n        // This should never happen...\n        if (!appRepos || util_1.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n            util_2.fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n        }\n        repo.interrupt();\n        delete appRepos[repo.repoInfo_.toURLString()];\n    };\n    /**\n     * Ensures a repo doesn't already exist and then creates one using the\n     * provided app.\n     *\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\n     * @param {!FirebaseApp} app\n     * @return {!Repo} The Repo object for the specified server / repoName.\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var appRepos = util_1.safeGet(this.repos_, app.name);\n        if (!appRepos) {\n            appRepos = {};\n            this.repos_[app.name] = appRepos;\n        }\n        var repo = util_1.safeGet(appRepos, repoInfo.toURLString());\n        if (repo) {\n            util_2.fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n        }\n        repo = new Repo_1.Repo(repoInfo, this.useRestClient_, app);\n        appRepos[repoInfo.toURLString()] = repo;\n        return repo;\n    };\n    /**\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n     * @param {boolean} forceRestClient\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}());\nexports.RepoManager = RepoManager;\n\n//# sourceMappingURL=RepoManager.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/RepoManager.js\n// module id = 167\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\n/**\n * Throws an error if the provided assertion is falsy\n * @param {*} assertion The assertion to be tested for falsiness\n * @param {!string} message The message to display if the check fails\n */\nexports.assert = function (assertion, message) {\n    if (!assertion) {\n        throw exports.assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n * @param {string} message\n * @return {!Error}\n */\nexports.assertionError = function (message) {\n    return new Error('Firebase Database (' +\n        constants_1.CONSTANTS.SDK_VERSION +\n        ') INTERNAL ASSERT FAILED: ' +\n        message);\n};\n\n//# sourceMappingURL=assert.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/assert.js\n// module id = 170\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stringToByteArray = function (str) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) == 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param {Array<number>} bytes Array of numbers representing characters.\n * @return {string} Stringification of the array.\n */\nvar byteArrayToString = function (bytes) {\n    // TODO(user): Use native implementations if/when available\n    var out = [], pos = 0, c = 0;\n    while (pos < bytes.length) {\n        var c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            var c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            var c4 = bytes[pos++];\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        }\n        else {\n            var c2 = bytes[pos++];\n            var c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// Static lookup maps, lazily populated by init_()\nexports.base64 = {\n    /**\n     * Maps bytes to characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @type {Object}\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @type {Object}\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     * @type {string}\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     * @type {string}\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     * @type {string}\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     * @type {boolean}\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeByteArray: function (input, opt_webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        var byteToCharMap = opt_webSafe\n            ? this.byteToCharMapWebSafe_\n            : this.byteToCharMap_;\n        var output = [];\n        for (var i = 0; i < input.length; i += 3) {\n            var byte1 = input[i];\n            var haveByte2 = i + 1 < input.length;\n            var byte2 = haveByte2 ? input[i + 1] : 0;\n            var haveByte3 = i + 2 < input.length;\n            var byte3 = haveByte3 ? input[i + 2] : 0;\n            var outByte1 = byte1 >> 2;\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n            var outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param {string} input A string to encode.\n     * @param {boolean=} opt_webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return {string} The base64 encoded string.\n     */\n    encodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param {string} input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the\n     *     alternative alphabet.\n     * @return {string} string representing the decoded value.\n     */\n    decodeString: function (input, opt_webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param {string} input Input to decode.\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\n     * @return {!Array<number>} bytes representing the decoded value.\n     */\n    decodeStringToByteArray: function (input, opt_webSafe) {\n        this.init_();\n        var charToByteMap = opt_webSafe\n            ? this.charToByteMapWebSafe_\n            : this.charToByteMap_;\n        var output = [];\n        for (var i = 0; i < input.length;) {\n            var byte1 = charToByteMap[input.charAt(i++)];\n            var haveByte2 = i < input.length;\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            var haveByte3 = i < input.length;\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            var haveByte4 = i < input.length;\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw Error();\n            }\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\n            output.push(outByte1);\n            if (byte3 != 64) {\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n                output.push(outByte2);\n                if (byte4 != 64) {\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_: function () {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\n * URL-safe base64 encoding\n * @param {!string} str\n * @return {!string}\n */\nexports.base64Encode = function (str) {\n    var utf8Bytes = stringToByteArray(str);\n    return exports.base64.encodeByteArray(utf8Bytes, true);\n};\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param {string} str To be decoded\n * @return {?string} Decoded result, if possible\n */\nexports.base64Decode = function (str) {\n    try {\n        return exports.base64.decodeString(str, true);\n    }\n    catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n//# sourceMappingURL=crypt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/crypt.js\n// module id = 171\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\nexports.jsonEval = jsonEval;\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\nexports.stringify = stringify;\n\n//# sourceMappingURL=json.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/json.js\n// module id = 172\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\nexports.contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nexports.safeGet = function (obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n        return obj[key];\n    // else return undefined.\n};\n/**\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\n *\n * @param {?Object.<K,V>} obj Object to enumerate.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.forEach = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            fn(key, obj[key]);\n        }\n    }\n};\n/**\n * Copies all the (own) properties from one object to another.\n * @param {!Object} objTo\n * @param {!Object} objFrom\n * @return {!Object} objTo\n */\nexports.extend = function (objTo, objFrom) {\n    exports.forEach(objFrom, function (key, value) {\n        objTo[key] = value;\n    });\n    return objTo;\n};\n/**\n * Returns a clone of the specified object.\n * @param {!Object} obj\n * @return {!Object} cloned obj.\n */\nexports.clone = function (obj) {\n    return exports.extend({}, obj);\n};\n/**\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\n * for functions.\n *\n * @param obj {*} A potential object.\n * @returns {boolean} True if it's an object.\n */\nexports.isNonNullObject = function (obj) {\n    return typeof obj === 'object' && obj !== null;\n};\nexports.isEmpty = function (obj) {\n    for (var key in obj) {\n        return false;\n    }\n    return true;\n};\nexports.getCount = function (obj) {\n    var rv = 0;\n    for (var key in obj) {\n        rv++;\n    }\n    return rv;\n};\nexports.map = function (obj, f, opt_obj) {\n    var res = {};\n    for (var key in obj) {\n        res[key] = f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n};\nexports.findKey = function (obj, fn, opt_this) {\n    for (var key in obj) {\n        if (fn.call(opt_this, obj[key], key, obj)) {\n            return key;\n        }\n    }\n    return undefined;\n};\nexports.findValue = function (obj, fn, opt_this) {\n    var key = exports.findKey(obj, fn, opt_this);\n    return key && obj[key];\n};\nexports.getAnyKey = function (obj) {\n    for (var key in obj) {\n        return key;\n    }\n};\nexports.getValues = function (obj) {\n    var res = [];\n    var i = 0;\n    for (var key in obj) {\n        res[i++] = obj[key];\n    }\n    return res;\n};\n/**\n * Tests whether every key/value pair in an object pass the test implemented\n * by the provided function\n *\n * @param {?Object.<K,V>} obj Object to test.\n * @param {!function(K, V)} fn Function to call for each key and value.\n * @template K,V\n */\nexports.every = function (obj, fn) {\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (!fn(key, obj[key])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n\n//# sourceMappingURL=obj.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/obj.js\n// module id = 173\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"../core/util/util\");\nvar parser_1 = require(\"../core/util/libs/parser\");\nvar Path_1 = require(\"../core/util/Path\");\nvar Reference_1 = require(\"./Reference\");\nvar Repo_1 = require(\"../core/Repo\");\nvar RepoManager_1 = require(\"../core/RepoManager\");\nvar util_2 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nvar Database = /** @class */ (function () {\n    /**\n     * The constructor should not be called by users of our public API.\n     * @param {!Repo} repo_\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof Repo_1.Repo)) {\n            util_1.fatal(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new Reference_1.Reference(repo_, Path_1.Path.Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function () {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Database.prototype.ref = function (path) {\n        this.checkDeleted_('ref');\n        util_2.validateArgCount('database.ref', 0, 1, arguments.length);\n        if (path instanceof Reference_1.Reference) {\n            return this.refFromURL(path.toString());\n        }\n        return path !== undefined ? this.root_.child(path) : this.root_;\n    };\n    /**\n     * Returns a reference to the root or the path specified in url.\n     * We throw a exception if the url is not in the same domain as the\n     * current repo.\n     * @param {string} url\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        util_2.validateArgCount(apiName, 1, 1, arguments.length);\n        var parsedURL = parser_1.parseRepoInfo(url);\n        validation_1.validateUrl(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            util_1.fatal(apiName +\n                ': Host name does not match the current database: ' +\n                '(found ' +\n                repoInfo.host +\n                ' but expected ' +\n                this.repo_.repoInfo_.host +\n                ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\n     * @param {string} apiName\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            util_1.fatal('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        util_2.validateArgCount('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        util_2.validateArgCount('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}());\nexports.Database = Database;\nvar DatabaseInternals = /** @class */ (function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                this.database.checkDeleted_('delete');\n                RepoManager_1.RepoManager.getInstance().deleteRepo(this.database.repo_);\n                this.database.repo_ = null;\n                this.database.root_ = null;\n                this.database.INTERNAL = null;\n                this.database = null;\n                return [2 /*return*/];\n            });\n        });\n    };\n    return DatabaseInternals;\n}());\nexports.DatabaseInternals = DatabaseInternals;\n\n//# sourceMappingURL=Database.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/Database.js\n// module id = 174\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A container for all of the Logger instances\n */\nexport var instances = [];\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n/**\n * The default log level\n */\nvar defaultLogLevel = LogLevel.INFO;\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nvar defaultLogHandler = function (instance, logType) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (logType < instance.logLevel)\n        return;\n    var now = new Date().toISOString();\n    switch (logType) {\n        /**\n         * By default, `console.debug` is not displayed in the developer console (in\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n         * logs to the `console.log` function.\n         */\n        case LogLevel.DEBUG:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.VERBOSE:\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.INFO:\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.WARN:\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        case LogLevel.ERROR:\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\n            break;\n        default:\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n    }\n};\nvar Logger = /** @class */ (function () {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    function Logger(name) {\n        this.name = name;\n        /**\n         * The log level of the given Logger instance.\n         */\n        this._logLevel = defaultLogLevel;\n        /**\n         * The log handler for the Logger instance.\n         */\n        this._logHandler = defaultLogHandler;\n        /**\n         * Capture the current instance for later use\n         */\n        instances.push(this);\n    }\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\n        get: function () {\n            return this._logLevel;\n        },\n        set: function (val) {\n            if (!(val in LogLevel)) {\n                throw new TypeError('Invalid value assigned to `logLevel`');\n            }\n            this._logLevel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\n        get: function () {\n            return this._logHandler;\n        },\n        set: function (val) {\n            if (typeof val !== 'function') {\n                throw new TypeError('Value assigned to `logHandler` must be a function');\n            }\n            this._logHandler = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The functions below are all based on the `console` interface\n     */\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\n    };\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\n    };\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\n    };\n    return Logger;\n}());\nexport { Logger };\n\n//# sourceMappingURL=logger.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/esm/src/logger.js\n// module id = 175\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../Path\");\nvar RepoInfo_1 = require(\"../../RepoInfo\");\nvar util_1 = require(\"../util\");\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            }\n            catch (e) { }\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\n * @param {!string} queryString\n * @return {!{[key:string]:string}} key value hash\n */\nfunction decodeQuery(queryString) {\n    var results = {};\n    if (queryString.startsWith('?')) {\n        queryString = queryString.substring(1);\n    }\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\n        var segment = _a[_i];\n        if (segment.length === 0) {\n            continue;\n        }\n        var kv = segment.split('=');\n        if (kv.length === 2) {\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n        }\n        else {\n            util_1.warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n        }\n    }\n    return results;\n}\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\nexports.parseRepoInfo = function (dataURL) {\n    var parsedUrl = exports.parseURL(dataURL), namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        util_1.fatal(parsedUrl.host +\n            ' is no longer supported. ' +\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if ((!namespace || namespace == 'undefined') &&\n        parsedUrl.domain !== 'localhost') {\n        util_1.fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        util_1.warnIfPageIsSecure();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new RepoInfo_1.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new Path_1.Path(parsedUrl.pathString)\n    };\n};\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nexports.parseURL = function (dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '', domain = '', subdomain = '', pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true, scheme = 'https', port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host, path, and query string.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        var questionMarkInd = dataURL.indexOf('?');\n        if (questionMarkInd === -1) {\n            questionMarkInd = dataURL.length;\n        }\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n        if (slashInd < questionMarkInd) {\n            // For pathString, questionMarkInd will always come after slashInd\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n        }\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n        else {\n            colonInd = dataURL.length;\n        }\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        }\n        else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\n            domain = 'localhost';\n        }\n        // Support `ns` query param if subdomain not already set\n        if (subdomain === '' && 'ns' in queryParams) {\n            subdomain = queryParams['ns'];\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n//# sourceMappingURL=parser.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/libs/parser.js\n// module id = 176\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar storage_1 = require(\"./storage/storage\");\nvar Constants_1 = require(\"../realtime/Constants\");\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nvar RepoInfo = /** @class */ (function () {\n    /**\n     * @param {string} host Hostname portion of the url for the repo\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\n     * @param {string} namespace The namespace represented by the repo\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n     * @param {string=} persistenceKey Override the default session persistence storage key\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) { persistenceKey = ''; }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = storage_1.PersistentStorage.get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost || this.isCustomHost();\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                storage_1.PersistentStorage.set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\n     * Returns the websocket URL for this repo\n     * @param {string} type of connection\n     * @param {Object} params list\n     * @return {string} The URL for this repo\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        util_1.assert(typeof type === 'string', 'typeof type must == string');\n        util_1.assert(typeof params === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === Constants_1.WEBSOCKET) {\n            connURL =\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        }\n        else if (type === Constants_1.LONG_POLLING) {\n            connURL =\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        }\n        else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        util_2.forEach(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}());\nexports.RepoInfo = RepoInfo;\n\n//# sourceMappingURL=RepoInfo.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/RepoInfo.js\n// module id = 177\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_2 = require(\"../core/util/util\");\nvar util_3 = require(\"@firebase/util\");\n/**\n * @constructor\n */\nvar OnDisconnect = /** @class */ (function () {\n    /**\n     * @param {!Repo} repo_\n     * @param {!Path} path_\n     */\n    function OnDisconnect(repo_, path_) {\n        this.repo_ = repo_;\n        this.path_ = path_;\n    }\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.cancel = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n        util_1.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.remove = function (onComplete) {\n        util_1.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.remove', this.path_);\n        util_1.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.set = function (value, onComplete) {\n        util_1.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.set', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n        util_1.validateCallback('OnDisconnect.set', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {*} value\n     * @param {number|string|null} priority\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n        util_1.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n        validation_1.validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n        validation_1.validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n        util_1.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    /**\n     * @param {!Object} objectToMerge\n     * @param {function(?Error)=} onComplete\n     * @return {!firebase.Promise}\n     */\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n        util_1.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n        validation_1.validateWritablePath('OnDisconnect.update', this.path_);\n        if (Array.isArray(objectToMerge)) {\n            var newObjectToMerge = {};\n            for (var i = 0; i < objectToMerge.length; ++i) {\n                newObjectToMerge['' + i] = objectToMerge[i];\n            }\n            objectToMerge = newObjectToMerge;\n            util_2.warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n        }\n        validation_1.validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n        util_1.validateCallback('OnDisconnect.update', 2, onComplete, true);\n        var deferred = new util_3.Deferred();\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n        return deferred.promise;\n    };\n    return OnDisconnect;\n}());\nexports.OnDisconnect = OnDisconnect;\n\n//# sourceMappingURL=onDisconnect.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/onDisconnect.js\n// module id = 178\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar KeyIndex_1 = require(\"../core/snap/indexes/KeyIndex\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\nvar ValueIndex_1 = require(\"../core/snap/indexes/ValueIndex\");\nvar PathIndex_1 = require(\"../core/snap/indexes/PathIndex\");\nvar util_2 = require(\"../core/util/util\");\nvar Path_1 = require(\"../core/util/Path\");\nvar validation_1 = require(\"../core/util/validation\");\nvar util_3 = require(\"@firebase/util\");\nvar EventRegistration_1 = require(\"../core/view/EventRegistration\");\nvar util_4 = require(\"@firebase/util\");\nvar __referenceConstructor;\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nvar Query = /** @class */ (function () {\n    function Query(repo, path, queryParams_, orderByCalled_) {\n        this.repo = repo;\n        this.path = path;\n        this.queryParams_ = queryParams_;\n        this.orderByCalled_ = orderByCalled_;\n    }\n    Object.defineProperty(Query, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Validates start/end values for queries.\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateQueryEndpoints_ = function (params) {\n        var startNode = null;\n        var endNode = null;\n        if (params.hasStart()) {\n            startNode = params.getIndexStartValue();\n        }\n        if (params.hasEnd()) {\n            endNode = params.getIndexEndValue();\n        }\n        if (params.getIndex() === KeyIndex_1.KEY_INDEX) {\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\n                'startAt(), endAt(), or equalTo().';\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\n                'or equalTo() must be a string.';\n            if (params.hasStart()) {\n                var startName = params.getIndexStartName();\n                if (startName != util_2.MIN_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof startNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n            if (params.hasEnd()) {\n                var endName = params.getIndexEndName();\n                if (endName != util_2.MAX_NAME) {\n                    throw new Error(tooManyArgsError);\n                }\n                else if (typeof endNode !== 'string') {\n                    throw new Error(wrongArgTypeError);\n                }\n            }\n        }\n        else if (params.getIndex() === PriorityIndex_1.PRIORITY_INDEX) {\n            if ((startNode != null && !validation_1.isValidPriority(startNode)) ||\n                (endNode != null && !validation_1.isValidPriority(endNode))) {\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n            }\n        }\n        else {\n            util_1.assert(params.getIndex() instanceof PathIndex_1.PathIndex ||\n                params.getIndex() === ValueIndex_1.VALUE_INDEX, 'unknown index type.');\n            if ((startNode != null && typeof startNode === 'object') ||\n                (endNode != null && typeof endNode === 'object')) {\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\n                    'an object.');\n            }\n        }\n    };\n    /**\n     * Validates that limit* has been called with the correct combination of parameters\n     * @param {!QueryParams} params\n     * @private\n     */\n    Query.validateLimit_ = function (params) {\n        if (params.hasStart() &&\n            params.hasEnd() &&\n            params.hasLimit() &&\n            !params.hasAnchoredLimit()) {\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n        }\n    };\n    /**\n     * Validates that no other order by call has been made\n     * @param {!string} fnName\n     * @private\n     */\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n        if (this.orderByCalled_ === true) {\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n        }\n    };\n    /**\n     * @return {!QueryParams}\n     */\n    Query.prototype.getQueryParams = function () {\n        return this.queryParams_;\n    };\n    /**\n     * @return {!Reference}\n     */\n    Query.prototype.getRef = function () {\n        util_3.validateArgCount('Query.ref', 0, 0, arguments.length);\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n        // method gets called.\n        return new Query.__referenceConstructor(this.repo, this.path);\n    };\n    /**\n     * @param {!string} eventType\n     * @param {!function(DataSnapshot, string=)} callback\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\n     * @param {Object=} context\n     * @return {!function(DataSnapshot, string=)}\n     */\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n        util_3.validateArgCount('Query.on', 2, 4, arguments.length);\n        validation_1.validateEventType('Query.on', 1, eventType, false);\n        util_3.validateCallback('Query.on', 2, callback, false);\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n        if (eventType === 'value') {\n            this.onValueEvent(callback, ret.cancel, ret.context);\n        }\n        else {\n            var callbacks = {};\n            callbacks[eventType] = callback;\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\n        }\n        return callback;\n    };\n    /**\n     * @param {!function(!DataSnapshot)} callback\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n        var container = new EventRegistration_1.ValueEventRegistration(callback, cancelCallback || null, context || null);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\n     * @param {?function(Error)} cancelCallback\n     * @param {?Object} context\n     * @protected\n     */\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n        var container = new EventRegistration_1.ChildEventRegistration(callbacks, cancelCallback, context);\n        this.repo.addEventCallbackForQuery(this, container);\n    };\n    /**\n     * @param {string=} eventType\n     * @param {(function(!DataSnapshot, ?string=))=} callback\n     * @param {Object=} context\n     */\n    Query.prototype.off = function (eventType, callback, context) {\n        util_3.validateArgCount('Query.off', 0, 3, arguments.length);\n        validation_1.validateEventType('Query.off', 1, eventType, true);\n        util_3.validateCallback('Query.off', 2, callback, true);\n        util_3.validateContextObject('Query.off', 3, context, true);\n        var container = null;\n        var callbacks = null;\n        if (eventType === 'value') {\n            var valueCallback = callback || null;\n            container = new EventRegistration_1.ValueEventRegistration(valueCallback, null, context || null);\n        }\n        else if (eventType) {\n            if (callback) {\n                callbacks = {};\n                callbacks[eventType] = callback;\n            }\n            container = new EventRegistration_1.ChildEventRegistration(callbacks, null, context || null);\n        }\n        this.repo.removeEventCallbackForQuery(this, container);\n    };\n    /**\n     * Attaches a listener, waits for the first event, and then removes the listener\n     * @param {!string} eventType\n     * @param {!function(!DataSnapshot, string=)} userCallback\n     * @param cancelOrContext\n     * @param context\n     * @return {!firebase.Promise}\n     */\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\n        var _this = this;\n        util_3.validateArgCount('Query.once', 1, 4, arguments.length);\n        validation_1.validateEventType('Query.once', 1, eventType, false);\n        util_3.validateCallback('Query.once', 2, userCallback, true);\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n        // against the Promise specification.\n        var firstCall = true;\n        var deferred = new util_4.Deferred();\n        // A dummy error handler in case a user wasn't expecting promises\n        deferred.promise.catch(function () { });\n        var onceCallback = function (snapshot) {\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n            // triggers multiple events (e.g. child_added or child_changed).\n            if (firstCall) {\n                firstCall = false;\n                _this.off(eventType, onceCallback);\n                if (userCallback) {\n                    userCallback.bind(ret.context)(snapshot);\n                }\n                deferred.resolve(snapshot);\n            }\n        };\n        this.on(eventType, onceCallback, \n        /*cancel=*/ function (err) {\n            _this.off(eventType, onceCallback);\n            if (ret.cancel)\n                ret.cancel.bind(ret.context)(err);\n            deferred.reject(err);\n        });\n        return deferred.promise;\n    };\n    /**\n     * Set a limit and anchor it to the start of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToFirst = function (limit) {\n        util_3.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n    };\n    /**\n     * Set a limit and anchor it to the end of the window.\n     * @param {!number} limit\n     * @return {!Query}\n     */\n    Query.prototype.limitToLast = function (limit) {\n        util_3.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n        if (typeof limit !== 'number' ||\n            Math.floor(limit) !== limit ||\n            limit <= 0) {\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\n        }\n        if (this.queryParams_.hasLimit()) {\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\n                'limitToFirst, or limitToLast).');\n        }\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n    };\n    /**\n     * Given a child path, return a new query ordered by the specified grandchild path.\n     * @param {!string} path\n     * @return {!Query}\n     */\n    Query.prototype.orderByChild = function (path) {\n        util_3.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n        if (path === '$key') {\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n        }\n        else if (path === '$priority') {\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n        }\n        else if (path === '$value') {\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n        }\n        validation_1.validatePathString('Query.orderByChild', 1, path, false);\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\n        var parsedPath = new Path_1.Path(path);\n        if (parsedPath.isEmpty()) {\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n        }\n        var index = new PathIndex_1.PathIndex(parsedPath);\n        var newParams = this.queryParams_.orderBy(index);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the KeyIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByKey = function () {\n        util_3.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\n        var newParams = this.queryParams_.orderBy(KeyIndex_1.KEY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the PriorityIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByPriority = function () {\n        util_3.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n        var newParams = this.queryParams_.orderBy(PriorityIndex_1.PRIORITY_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * Return a new query ordered by the ValueIndex\n     * @return {!Query}\n     */\n    Query.prototype.orderByValue = function () {\n        util_3.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\n        var newParams = this.queryParams_.orderBy(ValueIndex_1.VALUE_INDEX);\n        Query.validateQueryEndpoints_(newParams);\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.startAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.startAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.startAt', 2, name, true);\n        var newParams = this.queryParams_.startAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\n                'or equalTo).');\n        }\n        // Calling with no params tells us to start at the beginning.\n        if (value === undefined) {\n            value = null;\n            name = null;\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * @param {number|string|boolean|null} value\n     * @param {?string=} name\n     * @return {!Query}\n     */\n    Query.prototype.endAt = function (value, name) {\n        if (value === void 0) { value = null; }\n        util_3.validateArgCount('Query.endAt', 0, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n        validation_1.validateKey('Query.endAt', 2, name, true);\n        var newParams = this.queryParams_.endAt(value, name);\n        Query.validateLimit_(newParams);\n        Query.validateQueryEndpoints_(newParams);\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n    };\n    /**\n     * Load the selection of children with exactly the specified value, and, optionally,\n     * the specified name.\n     * @param {number|string|boolean|null} value\n     * @param {string=} name\n     * @return {!Query}\n     */\n    Query.prototype.equalTo = function (value, name) {\n        util_3.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n        validation_1.validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n        validation_1.validateKey('Query.equalTo', 2, name, true);\n        if (this.queryParams_.hasStart()) {\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\n                'equalTo).');\n        }\n        if (this.queryParams_.hasEnd()) {\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\n                'equalTo).');\n        }\n        return this.startAt(value, name).endAt(value, name);\n    };\n    /**\n     * @return {!string} URL for this location.\n     */\n    Query.prototype.toString = function () {\n        util_3.validateArgCount('Query.toString', 0, 0, arguments.length);\n        return this.repo.toString() + this.path.toUrlEncodedString();\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users.\n    Query.prototype.toJSON = function () {\n        // An optional spacer argument is unnecessary for a string.\n        util_3.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n        return this.toString();\n    };\n    /**\n     * An object representation of the query parameters used by this Query.\n     * @return {!Object}\n     */\n    Query.prototype.queryObject = function () {\n        return this.queryParams_.getQueryObject();\n    };\n    /**\n     * @return {!string}\n     */\n    Query.prototype.queryIdentifier = function () {\n        var obj = this.queryObject();\n        var id = util_2.ObjectToUniqueKey(obj);\n        return id === '{}' ? 'default' : id;\n    };\n    /**\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\n     * @param {Query} other\n     * @return {boolean}\n     */\n    Query.prototype.isEqual = function (other) {\n        util_3.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n        if (!(other instanceof Query)) {\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n            throw new Error(error);\n        }\n        var sameRepo = this.repo === other.repo;\n        var samePath = this.path.equals(other.path);\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n        return sameRepo && samePath && sameQueryIdentifier;\n    };\n    /**\n     * Helper used by .on and .once to extract the context and or cancel arguments.\n     * @param {!string} fnName The function name (on or once)\n     * @param {(function(Error)|Object)=} cancelOrContext\n     * @param {Object=} context\n     * @return {{cancel: ?function(Error), context: ?Object}}\n     * @private\n     */\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n        var ret = { cancel: null, context: null };\n        if (cancelOrContext && context) {\n            ret.cancel = cancelOrContext;\n            util_3.validateCallback(fnName, 3, ret.cancel, true);\n            ret.context = context;\n            util_3.validateContextObject(fnName, 4, ret.context, true);\n        }\n        else if (cancelOrContext) {\n            // we have either a cancel callback or a context.\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n                // it's a context!\n                ret.context = cancelOrContext;\n            }\n            else if (typeof cancelOrContext === 'function') {\n                ret.cancel = cancelOrContext;\n            }\n            else {\n                throw new Error(util_3.errorPrefix(fnName, 3, true) +\n                    ' must either be a cancel callback or a context object.');\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Query.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Query;\n}());\nexports.Query = Query;\n\n//# sourceMappingURL=Query.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/Query.js\n// module id = 179\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar MAX_NODE;\nfunction setMaxNode(val) {\n    MAX_NODE = val;\n}\nexports.setMaxNode = setMaxNode;\n/**\n * @param {(!string|!number)} priority\n * @return {!string}\n */\nexports.priorityHashText = function (priority) {\n    if (typeof priority === 'number')\n        return 'number:' + util_2.doubleToIEEE754String(priority);\n    else\n        return 'string:' + priority;\n};\n/**\n * Validates that a priority snapshot Node is valid.\n *\n * @param {!Node} priorityNode\n */\nexports.validatePriorityNode = function (priorityNode) {\n    if (priorityNode.isLeafNode()) {\n        var val = priorityNode.val();\n        util_1.assert(typeof val === 'string' ||\n            typeof val === 'number' ||\n            (typeof val === 'object' && util_3.contains(val, '.sv')), 'Priority must be a string or number.');\n    }\n    else {\n        util_1.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n    }\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n    util_1.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n\n//# sourceMappingURL=snap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/snap.js\n// module id = 180\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Index_1 = require(\"./Index\");\nvar Node_1 = require(\"../Node\");\nvar util_1 = require(\"../../util/util\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @constructor\n * @extends {Index}\n * @private\n */\nvar ValueIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(ValueIndex, _super);\n    function ValueIndex() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.compare = function (a, b) {\n        var indexCmp = a.node.compareTo(b.node);\n        if (indexCmp === 0) {\n            return util_1.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.isDefinedOn = function (node) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n        return !oldNode.equals(newNode);\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.minPost = function () {\n        return Node_1.NamedNode.MIN;\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueIndex.prototype.maxPost = function () {\n        return Node_1.NamedNode.MAX;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {string} name\n     * @return {!NamedNode}\n     */\n    ValueIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        return new Node_1.NamedNode(name, valueNode);\n    };\n    /**\n     * @return {!string} String representation for inclusion in a query spec\n     */\n    ValueIndex.prototype.toString = function () {\n        return '.value';\n    };\n    return ValueIndex;\n}(Index_1.Index));\nexports.ValueIndex = ValueIndex;\nexports.VALUE_INDEX = new ValueIndex();\n\n//# sourceMappingURL=ValueIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/ValueIndex.js\n// module id = 181\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar childSet_1 = require(\"./childSet\");\nvar util_2 = require(\"@firebase/util\");\nvar Node_1 = require(\"./Node\");\nvar PriorityIndex_1 = require(\"./indexes/PriorityIndex\");\nvar KeyIndex_1 = require(\"./indexes/KeyIndex\");\nvar _defaultIndexMap;\nvar fallbackObject = {};\n/**\n *\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\n * @param {Object.<string, Index>} indexSet\n * @constructor\n */\nvar IndexMap = /** @class */ (function () {\n    function IndexMap(indexes_, indexSet_) {\n        this.indexes_ = indexes_;\n        this.indexSet_ = indexSet_;\n    }\n    Object.defineProperty(IndexMap, \"Default\", {\n        /**\n         * The default IndexMap for nodes without a priority\n         * @type {!IndexMap}\n         * @const\n         */\n        get: function () {\n            util_1.assert(fallbackObject && PriorityIndex_1.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n            _defaultIndexMap =\n                _defaultIndexMap ||\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PriorityIndex_1.PRIORITY_INDEX });\n            return _defaultIndexMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param {!string} indexKey\n     * @return {?SortedMap.<NamedNode, Node>}\n     */\n    IndexMap.prototype.get = function (indexKey) {\n        var sortedMap = util_2.safeGet(this.indexes_, indexKey);\n        if (!sortedMap)\n            throw new Error('No index defined for ' + indexKey);\n        if (sortedMap === fallbackObject) {\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n            // regular child map\n            return null;\n        }\n        else {\n            return sortedMap;\n        }\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @return {boolean}\n     */\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\n        return util_2.contains(this.indexSet_, indexDefinition.toString());\n    };\n    /**\n     * @param {!Index} indexDefinition\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n        util_1.assert(indexDefinition !== KeyIndex_1.KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n        var childList = [];\n        var sawIndexedValue = false;\n        var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n        var next = iter.getNext();\n        while (next) {\n            sawIndexedValue =\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n            childList.push(next);\n            next = iter.getNext();\n        }\n        var newIndex;\n        if (sawIndexedValue) {\n            newIndex = childSet_1.buildChildSet(childList, indexDefinition.getCompare());\n        }\n        else {\n            newIndex = fallbackObject;\n        }\n        var indexName = indexDefinition.toString();\n        var newIndexSet = util_2.clone(this.indexSet_);\n        newIndexSet[indexName] = indexDefinition;\n        var newIndexes = util_2.clone(this.indexes_);\n        newIndexes[indexName] = newIndex;\n        return new IndexMap(newIndexes, newIndexSet);\n    };\n    /**\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n        var _this = this;\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren, indexName) {\n            var index = util_2.safeGet(_this.indexSet_, indexName);\n            util_1.assert(index, 'Missing index implementation for ' + indexName);\n            if (indexedChildren === fallbackObject) {\n                // Check to see if we need to index everything\n                if (index.isDefinedOn(namedNode.node)) {\n                    // We need to build this index\n                    var childList = [];\n                    var iter = existingChildren.getIterator(Node_1.NamedNode.Wrap);\n                    var next = iter.getNext();\n                    while (next) {\n                        if (next.name != namedNode.name) {\n                            childList.push(next);\n                        }\n                        next = iter.getNext();\n                    }\n                    childList.push(namedNode);\n                    return childSet_1.buildChildSet(childList, index.getCompare());\n                }\n                else {\n                    // No change, this remains a fallback\n                    return fallbackObject;\n                }\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                var newChildren = indexedChildren;\n                if (existingSnap) {\n                    newChildren = newChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                return newChildren.insert(namedNode, namedNode.node);\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    /**\n     * Create a new IndexMap instance with the given value removed\n     * @param {!NamedNode} namedNode\n     * @param {!SortedMap.<string, !Node>} existingChildren\n     * @return {!IndexMap}\n     */\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n        var newIndexes = util_2.map(this.indexes_, function (indexedChildren) {\n            if (indexedChildren === fallbackObject) {\n                // This is the fallback. Just return it, nothing to do in this case\n                return indexedChildren;\n            }\n            else {\n                var existingSnap = existingChildren.get(namedNode.name);\n                if (existingSnap) {\n                    return indexedChildren.remove(new Node_1.NamedNode(namedNode.name, existingSnap));\n                }\n                else {\n                    // No record of this child\n                    return indexedChildren;\n                }\n            }\n        });\n        return new IndexMap(newIndexes, this.indexSet_);\n    };\n    return IndexMap;\n}());\nexports.IndexMap = IndexMap;\n\n//# sourceMappingURL=IndexMap.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/IndexMap.js\n// module id = 182\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SortedMap_1 = require(\"../util/SortedMap\");\nvar SortedMap_2 = require(\"../util/SortedMap\");\nvar LOG_2 = Math.log(2);\n/**\n * @constructor\n */\nvar Base12Num = /** @class */ (function () {\n    /**\n     * @param {number} length\n     */\n    function Base12Num(length) {\n        var logBase2 = function (num) {\n            return parseInt((Math.log(num) / LOG_2), 10);\n        };\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\n        this.count = logBase2(length + 1);\n        this.current_ = this.count - 1;\n        var mask = bitMask(this.count);\n        this.bits_ = (length + 1) & mask;\n    }\n    /**\n     * @return {boolean}\n     */\n    Base12Num.prototype.nextBitIsOne = function () {\n        //noinspection JSBitwiseOperatorUsage\n        var result = !(this.bits_ & (0x1 << this.current_));\n        this.current_--;\n        return result;\n    };\n    return Base12Num;\n}());\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @template K, V\n * @param {Array.<!NamedNode>} childList Unsorted list of children\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\n *                                                        type is not NamedNode\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\n * @return {SortedMap.<K, V>}\n */\nexports.buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n    childList.sort(cmp);\n    var buildBalancedTree = function (low, high) {\n        var length = high - low;\n        var namedNode;\n        var key;\n        if (length == 0) {\n            return null;\n        }\n        else if (length == 1) {\n            namedNode = childList[low];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, null, null);\n        }\n        else {\n            var middle = parseInt((length / 2), 10) + low;\n            var left = buildBalancedTree(low, middle);\n            var right = buildBalancedTree(middle + 1, high);\n            namedNode = childList[middle];\n            key = keyFn ? keyFn(namedNode) : namedNode;\n            return new SortedMap_1.LLRBNode(key, namedNode.node, SortedMap_1.LLRBNode.BLACK, left, right);\n        }\n    };\n    var buildFrom12Array = function (base12) {\n        var node = null;\n        var root = null;\n        var index = childList.length;\n        var buildPennant = function (chunkSize, color) {\n            var low = index - chunkSize;\n            var high = index;\n            index -= chunkSize;\n            var childTree = buildBalancedTree(low + 1, high);\n            var namedNode = childList[low];\n            var key = keyFn ? keyFn(namedNode) : namedNode;\n            attachPennant(new SortedMap_1.LLRBNode(key, namedNode.node, color, null, childTree));\n        };\n        var attachPennant = function (pennant) {\n            if (node) {\n                node.left = pennant;\n                node = pennant;\n            }\n            else {\n                root = pennant;\n                node = pennant;\n            }\n        };\n        for (var i = 0; i < base12.count; ++i) {\n            var isOne = base12.nextBitIsOne();\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\n            if (isOne) {\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n            }\n            else {\n                // current == 2\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.BLACK);\n                buildPennant(chunkSize, SortedMap_1.LLRBNode.RED);\n            }\n        }\n        return root;\n    };\n    var base12 = new Base12Num(childList.length);\n    var root = buildFrom12Array(base12);\n    return new SortedMap_2.SortedMap(mapSortFn || cmp, root);\n};\n\n//# sourceMappingURL=childSet.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/childSet.js\n// module id = 183\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nfunction NAME_ONLY_COMPARATOR(left, right) {\n    return util_1.nameCompare(left.name, right.name);\n}\nexports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;\nfunction NAME_COMPARATOR(left, right) {\n    return util_1.nameCompare(left, right);\n}\nexports.NAME_COMPARATOR = NAME_COMPARATOR;\n\n//# sourceMappingURL=comparators.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/comparators.js\n// module id = 184\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../../util/util\");\nvar Index_1 = require(\"./Index\");\nvar ChildrenNode_1 = require(\"../ChildrenNode\");\nvar Node_1 = require(\"../Node\");\nvar nodeFromJSON_1 = require(\"../nodeFromJSON\");\n/**\n * @param {!Path} indexPath\n * @constructor\n * @extends {Index}\n */\nvar PathIndex = /** @class */ (function (_super) {\n    tslib_1.__extends(PathIndex, _super);\n    function PathIndex(indexPath_) {\n        var _this = _super.call(this) || this;\n        _this.indexPath_ = indexPath_;\n        util_1.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n        return _this;\n    }\n    /**\n     * @param {!Node} snap\n     * @return {!Node}\n     * @protected\n     */\n    PathIndex.prototype.extractChild = function (snap) {\n        return snap.getChild(this.indexPath_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.isDefinedOn = function (node) {\n        return !node.getChild(this.indexPath_).isEmpty();\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.compare = function (a, b) {\n        var aChild = this.extractChild(a.node);\n        var bChild = this.extractChild(b.node);\n        var indexCmp = aChild.compareTo(bChild);\n        if (indexCmp === 0) {\n            return util_2.nameCompare(a.name, b.name);\n        }\n        else {\n            return indexCmp;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.makePost = function (indexValue, name) {\n        var valueNode = nodeFromJSON_1.nodeFromJSON(indexValue);\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n        return new Node_1.NamedNode(name, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.maxPost = function () {\n        var node = ChildrenNode_1.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, ChildrenNode_1.MAX_NODE);\n        return new Node_1.NamedNode(util_2.MAX_NAME, node);\n    };\n    /**\n     * @inheritDoc\n     */\n    PathIndex.prototype.toString = function () {\n        return this.indexPath_.slice().join('/');\n    };\n    return PathIndex;\n}(Index_1.Index));\nexports.PathIndex = PathIndex;\n\n//# sourceMappingURL=PathIndex.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/snap/indexes/PathIndex.js\n// module id = 185\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"./Path\");\nvar SparseSnapshotTree_1 = require(\"../SparseSnapshotTree\");\nvar LeafNode_1 = require(\"../snap/LeafNode\");\nvar nodeFromJSON_1 = require(\"../snap/nodeFromJSON\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * Generate placeholders for deferred values.\n * @param {?Object} values\n * @return {!Object}\n */\nexports.generateWithValues = function (values) {\n    values = values || {};\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\n    return values;\n};\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n * @param {(Object|string|number|boolean)} value\n * @param {!Object} serverValues\n * @return {!(string|number|boolean)}\n */\nexports.resolveDeferredValue = function (value, serverValues) {\n    if (!value || typeof value !== 'object') {\n        return value;\n    }\n    else {\n        util_1.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n        return serverValues[value['.sv']];\n    }\n};\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param {!SparseSnapshotTree} tree\n * @param {!Object} serverValues\n * @return {!SparseSnapshotTree}\n */\nexports.resolveDeferredValueTree = function (tree, serverValues) {\n    var resolvedTree = new SparseSnapshotTree_1.SparseSnapshotTree();\n    tree.forEachTree(new Path_1.Path(''), function (path, node) {\n        resolvedTree.remember(path, exports.resolveDeferredValueSnapshot(node, serverValues));\n    });\n    return resolvedTree;\n};\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n * @param {!Node} node\n * @param {!Object} serverValues\n * @return {!Node}\n */\nexports.resolveDeferredValueSnapshot = function (node, serverValues) {\n    var rawPri = node.getPriority().val();\n    var priority = exports.resolveDeferredValue(rawPri, serverValues);\n    var newNode;\n    if (node.isLeafNode()) {\n        var leafNode = node;\n        var value = exports.resolveDeferredValue(leafNode.getValue(), serverValues);\n        if (value !== leafNode.getValue() ||\n            priority !== leafNode.getPriority().val()) {\n            return new LeafNode_1.LeafNode(value, nodeFromJSON_1.nodeFromJSON(priority));\n        }\n        else {\n            return node;\n        }\n    }\n    else {\n        var childrenNode = node;\n        newNode = childrenNode;\n        if (priority !== childrenNode.getPriority().val()) {\n            newNode = newNode.updatePriority(new LeafNode_1.LeafNode(priority));\n        }\n        childrenNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n            var newChildNode = exports.resolveDeferredValueSnapshot(childNode, serverValues);\n            if (newChildNode !== childNode) {\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\n            }\n        });\n        return newNode;\n    }\n};\n\n//# sourceMappingURL=ServerValues.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/ServerValues.js\n// module id = 186\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"./util/Path\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar CountedSet_1 = require(\"./util/CountedSet\");\n/**\n * Helper class to store a sparse set of snapshots.\n *\n * @constructor\n */\nvar SparseSnapshotTree = /** @class */ (function () {\n    function SparseSnapshotTree() {\n        /**\n         * @private\n         * @type {Node}\n         */\n        this.value_ = null;\n        /**\n         * @private\n         * @type {CountedSet}\n         */\n        this.children_ = null;\n    }\n    /**\n     * Gets the node stored at the given path if one exists.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {?Node} The retrieved node, or null.\n     */\n    SparseSnapshotTree.prototype.find = function (path) {\n        if (this.value_ != null) {\n            return this.value_.getChild(path);\n        }\n        else if (!path.isEmpty() && this.children_ != null) {\n            var childKey = path.getFront();\n            path = path.popFront();\n            if (this.children_.contains(childKey)) {\n                var childTree = this.children_.get(childKey);\n                return childTree.find(path);\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Stores the given node at the specified path. If there is already a node\n     * at a shallower path, it merges the new data into that snapshot node.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @param {!Node} data The new data, or null.\n     */\n    SparseSnapshotTree.prototype.remember = function (path, data) {\n        if (path.isEmpty()) {\n            this.value_ = data;\n            this.children_ = null;\n        }\n        else if (this.value_ !== null) {\n            this.value_ = this.value_.updateChild(path, data);\n        }\n        else {\n            if (this.children_ == null) {\n                this.children_ = new CountedSet_1.CountedSet();\n            }\n            var childKey = path.getFront();\n            if (!this.children_.contains(childKey)) {\n                this.children_.add(childKey, new SparseSnapshotTree());\n            }\n            var child = this.children_.get(childKey);\n            path = path.popFront();\n            child.remember(path, data);\n        }\n    };\n    /**\n     * Purge the data at path from the cache.\n     *\n     * @param {!Path} path Path to look up snapshot for.\n     * @return {boolean} True if this node should now be removed.\n     */\n    SparseSnapshotTree.prototype.forget = function (path) {\n        if (path.isEmpty()) {\n            this.value_ = null;\n            this.children_ = null;\n            return true;\n        }\n        else {\n            if (this.value_ !== null) {\n                if (this.value_.isLeafNode()) {\n                    // We're trying to forget a node that doesn't exist\n                    return false;\n                }\n                else {\n                    var value = this.value_;\n                    this.value_ = null;\n                    var self_1 = this;\n                    value.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, tree) {\n                        self_1.remember(new Path_1.Path(key), tree);\n                    });\n                    return this.forget(path);\n                }\n            }\n            else if (this.children_ !== null) {\n                var childKey = path.getFront();\n                path = path.popFront();\n                if (this.children_.contains(childKey)) {\n                    var safeToRemove = this.children_.get(childKey).forget(path);\n                    if (safeToRemove) {\n                        this.children_.remove(childKey);\n                    }\n                }\n                if (this.children_.isEmpty()) {\n                    this.children_ = null;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Recursively iterates through all of the stored tree and calls the\n     * callback on each one.\n     *\n     * @param {!Path} prefixPath Path to look up node for.\n     * @param {!Function} func The function to invoke for each tree.\n     */\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n        if (this.value_ !== null) {\n            func(prefixPath, this.value_);\n        }\n        else {\n            this.forEachChild(function (key, tree) {\n                var path = new Path_1.Path(prefixPath.toString() + '/' + key);\n                tree.forEachTree(path, func);\n            });\n        }\n    };\n    /**\n     * Iterates through each immediate child and triggers the callback.\n     *\n     * @param {!Function} func The function to invoke for each child.\n     */\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\n        if (this.children_ !== null) {\n            this.children_.each(function (key, tree) {\n                func(key, tree);\n            });\n        }\n    };\n    return SparseSnapshotTree;\n}());\nexports.SparseSnapshotTree = SparseSnapshotTree;\n\n//# sourceMappingURL=SparseSnapshotTree.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/SparseSnapshotTree.js\n// module id = 187\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Implements a set with a count of elements.\n *\n * @template K, V\n */\nvar CountedSet = /** @class */ (function () {\n    function CountedSet() {\n        this.set = {};\n    }\n    /**\n     * @param {!K} item\n     * @param {V} val\n     */\n    CountedSet.prototype.add = function (item, val) {\n        this.set[item] = val !== null ? val : true;\n    };\n    /**\n     * @param {!K} key\n     * @return {boolean}\n     */\n    CountedSet.prototype.contains = function (key) {\n        return util_1.contains(this.set, key);\n    };\n    /**\n     * @param {!K} item\n     * @return {V}\n     */\n    CountedSet.prototype.get = function (item) {\n        return this.contains(item) ? this.set[item] : undefined;\n    };\n    /**\n     * @param {!K} item\n     */\n    CountedSet.prototype.remove = function (item) {\n        delete this.set[item];\n    };\n    /**\n     * Deletes everything in the set\n     */\n    CountedSet.prototype.clear = function () {\n        this.set = {};\n    };\n    /**\n     * True if there's nothing in the set\n     * @return {boolean}\n     */\n    CountedSet.prototype.isEmpty = function () {\n        return util_1.isEmpty(this.set);\n    };\n    /**\n     * @return {number} The number of items in the set\n     */\n    CountedSet.prototype.count = function () {\n        return util_1.getCount(this.set);\n    };\n    /**\n     * Run a function on each k,v pair in the set\n     * @param {function(K, V)} fn\n     */\n    CountedSet.prototype.each = function (fn) {\n        util_1.forEach(this.set, function (k, v) { return fn(k, v); });\n    };\n    /**\n     * Mostly for debugging\n     * @return {Array.<K>} The keys present in this CountedSet\n     */\n    CountedSet.prototype.keys = function () {\n        var keys = [];\n        util_1.forEach(this.set, function (k) {\n            keys.push(k);\n        });\n        return keys;\n    };\n    return CountedSet;\n}());\nexports.CountedSet = CountedSet;\n\n//# sourceMappingURL=CountedSet.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/CountedSet.js\n// module id = 188\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"./Operation\");\nvar Path_1 = require(\"../util/Path\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!Node} snap\n * @constructor\n * @implements {Operation}\n */\nvar Overwrite = /** @class */ (function () {\n    function Overwrite(source, path, snap) {\n        this.source = source;\n        this.path = path;\n        this.snap = snap;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.OVERWRITE;\n    }\n    Overwrite.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new Overwrite(this.source, Path_1.Path.Empty, this.snap.getImmediateChild(childName));\n        }\n        else {\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\n        }\n    };\n    return Overwrite;\n}());\nexports.Overwrite = Overwrite;\n\n//# sourceMappingURL=Overwrite.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Overwrite.js\n// module id = 189\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = require(\"./view/CacheNode\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar ViewCache_1 = require(\"./view/ViewCache\");\nvar View_1 = require(\"./view/View\");\nvar __referenceConstructor;\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nvar SyncPoint = /** @class */ (function () {\n    function SyncPoint() {\n        /**\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\n         * queryId and the value is the View for that query.\n         *\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n         *\n         * @type {!Object.<!string, !View>}\n         * @private\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            util_1.assert(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return util_2.isEmpty(this.views_);\n    };\n    /**\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} optCompleteServerCache\n     * @return {!Array.<!Event>}\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = util_2.safeGet(this.views_, queryId);\n            util_1.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        }\n        else {\n            var events_1 = [];\n            util_2.forEach(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache Complete server cache, if we have it.\n     * @param {boolean} serverCacheComplete\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = util_2.safeGet(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            }\n            else if (serverCache instanceof ChildrenNode_1.ChildrenNode) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            }\n            else {\n                eventCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new ViewCache_1.ViewCache(new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\n            view = new View_1.View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n     *\n     * If query is the default query, we'll check all views for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            util_2.forEach(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        }\n        else {\n            // remove the callback from the specific view.\n            var view = util_2.safeGet(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\n     * @return {!Array.<!View>}\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\n        return values.filter(function (view) {\n            return !view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n    };\n    /**\n     *\n     * @param {!Path} path The path to the desired complete snapshot\n     * @return {?Node} A complete cache, if it exists\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        util_2.forEach(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\n     * @param {!Query} query\n     * @return {?View}\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        }\n        else {\n            var queryId = query.queryIdentifier();\n            return util_2.safeGet(this.views_, queryId);\n        }\n    };\n    /**\n     * @param {!Query} query\n     * @return {boolean}\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\n     * @return {?View}\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = util_2.findValue(this.views_, function (view) {\n            return view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}());\nexports.SyncPoint = SyncPoint;\n\n//# sourceMappingURL=SyncPoint.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/SyncPoint.js\n// module id = 190\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n *\n * @constructor\n */\nvar ViewCache = /** @class */ (function () {\n    /**\n     *\n     * @param {!CacheNode} eventCache_\n     * @param {!CacheNode} serverCache_\n     */\n    function ViewCache(eventCache_, serverCache_) {\n        this.eventCache_ = eventCache_;\n        this.serverCache_ = serverCache_;\n    }\n    /**\n     * @param {!Node} eventSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n        return new ViewCache(new CacheNode_1.CacheNode(eventSnap, complete, filtered), this.serverCache_);\n    };\n    /**\n     * @param {!Node} serverSnap\n     * @param {boolean} complete\n     * @param {boolean} filtered\n     * @return {!ViewCache}\n     */\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n        return new ViewCache(this.eventCache_, new CacheNode_1.CacheNode(serverSnap, complete, filtered));\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getEventCache = function () {\n        return this.eventCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteEventSnap = function () {\n        return this.eventCache_.isFullyInitialized()\n            ? this.eventCache_.getNode()\n            : null;\n    };\n    /**\n     * @return {!CacheNode}\n     */\n    ViewCache.prototype.getServerCache = function () {\n        return this.serverCache_;\n    };\n    /**\n     * @return {?Node}\n     */\n    ViewCache.prototype.getCompleteServerSnap = function () {\n        return this.serverCache_.isFullyInitialized()\n            ? this.serverCache_.getNode()\n            : null;\n    };\n    /**\n     * @const\n     * @type {ViewCache}\n     */\n    ViewCache.Empty = new ViewCache(new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false), new CacheNode_1.CacheNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, \n    /*fullyInitialized=*/ false, \n    /*filtered=*/ false));\n    return ViewCache;\n}());\nexports.ViewCache = ViewCache;\n\n//# sourceMappingURL=ViewCache.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ViewCache.js\n// module id = 191\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n * @constructor\n */\nvar StatsListener = /** @class */ (function () {\n    function StatsListener(collection_) {\n        this.collection_ = collection_;\n        this.last_ = null;\n    }\n    StatsListener.prototype.get = function () {\n        var newStats = this.collection_.get();\n        var delta = util_1.clone(newStats);\n        if (this.last_) {\n            util_1.forEach(this.last_, function (stat, value) {\n                delta[stat] = delta[stat] - value;\n            });\n        }\n        this.last_ = newStats;\n        return delta;\n    };\n    return StatsListener;\n}());\nexports.StatsListener = StatsListener;\n\n//# sourceMappingURL=StatsListener.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsListener.js\n// module id = 192\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"./util/util\");\nvar Path_1 = require(\"./util/Path\");\nvar VisibilityMonitor_1 = require(\"./util/VisibilityMonitor\");\nvar OnlineMonitor_1 = require(\"./util/OnlineMonitor\");\nvar util_5 = require(\"@firebase/util\");\nvar Connection_1 = require(\"../realtime/Connection\");\nvar util_6 = require(\"@firebase/util\");\nvar util_7 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    tslib_1.__extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body) {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js\n// module id = 193\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nvar EventEmitter = /** @class */ (function () {\n    /**\n     * @param {!Array.<string>} allowedEvents_\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        util_1.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\n     * To be called by derived classes to trigger events.\n     * @param {!string} eventType\n     * @param {...*} var_args\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback &&\n                (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        util_1.assert(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n\n//# sourceMappingURL=EventEmitter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/EventEmitter.js\n// module id = 194\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar Constants_1 = require(\"./Constants\");\nvar TransportManager_1 = require(\"./TransportManager\");\n// Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT = 60000;\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n *\n * @constructor\n */\nvar Connection = /** @class */ (function () {\n    /**\n     * @param {!string} id - an id for this connection\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n     */\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n        this.id = id;\n        this.repoInfo_ = repoInfo_;\n        this.onMessage_ = onMessage_;\n        this.onReady_ = onReady_;\n        this.onDisconnect_ = onDisconnect_;\n        this.onKill_ = onKill_;\n        this.lastSessionId = lastSessionId;\n        this.connectionCount = 0;\n        this.pendingDataMessages = [];\n        this.state_ = 0 /* CONNECTING */;\n        this.log_ = util_1.logWrapper('c:' + this.id + ':');\n        this.transportManager_ = new TransportManager_1.TransportManager(repoInfo_);\n        this.log_('Connection created');\n        this.start_();\n    }\n    /**\n     * Starts a connection attempt\n     * @private\n     */\n    Connection.prototype.start_ = function () {\n        var _this = this;\n        var conn = this.transportManager_.initialTransport();\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessageReceived = this.connReceiver_(this.conn_);\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\n        this.tx_ = this.conn_;\n        this.rx_ = this.conn_;\n        this.secondaryConn_ = null;\n        this.isHealthy_ = false;\n        /*\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n         * still have the context of your originating frame.\n         */\n        setTimeout(function () {\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n        }, Math.floor(0));\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\n        if (healthyTimeout_ms > 0) {\n            this.healthyTimeout_ = util_1.setTimeoutNonBlocking(function () {\n                _this.healthyTimeout_ = null;\n                if (!_this.isHealthy_) {\n                    if (_this.conn_ &&\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\n                            _this.conn_.bytesReceived +\n                            ' bytes.  Marking connection healthy.');\n                        _this.isHealthy_ = true;\n                        _this.conn_.markConnectionHealthy();\n                    }\n                    else if (_this.conn_ &&\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\n                            _this.conn_.bytesSent +\n                            ' bytes.  Leaving connection alive.');\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n                        // the server.\n                    }\n                    else {\n                        _this.log_('Closing unhealthy connection after timeout.');\n                        _this.close();\n                    }\n                }\n            }, Math.floor(healthyTimeout_ms));\n        }\n    };\n    /**\n     * @return {!string}\n     * @private\n     */\n    Connection.prototype.nextTransportId_ = function () {\n        return 'c:' + this.id + ':' + this.connectionCount++;\n    };\n    Connection.prototype.disconnReceiver_ = function (conn) {\n        var _this = this;\n        return function (everConnected) {\n            if (conn === _this.conn_) {\n                _this.onConnectionLost_(everConnected);\n            }\n            else if (conn === _this.secondaryConn_) {\n                _this.log_('Secondary connection lost.');\n                _this.onSecondaryConnectionLost_();\n            }\n            else {\n                _this.log_('closing an old connection');\n            }\n        };\n    };\n    Connection.prototype.connReceiver_ = function (conn) {\n        var _this = this;\n        return function (message) {\n            if (_this.state_ != 2 /* DISCONNECTED */) {\n                if (conn === _this.rx_) {\n                    _this.onPrimaryMessageReceived_(message);\n                }\n                else if (conn === _this.secondaryConn_) {\n                    _this.onSecondaryMessageReceived_(message);\n                }\n                else {\n                    _this.log_('message on old connection');\n                }\n            }\n        };\n    };\n    /**\n     *\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\n     */\n    Connection.prototype.sendRequest = function (dataMsg) {\n        // wrap in a data message envelope and send it on\n        var msg = { t: 'd', d: dataMsg };\n        this.sendData_(msg);\n    };\n    Connection.prototype.tryCleanupConnection = function () {\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n            this.conn_ = this.secondaryConn_;\n            this.secondaryConn_ = null;\n            // the server will shutdown the old connection\n        }\n    };\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\n        if (MESSAGE_TYPE in controlData) {\n            var cmd = controlData[MESSAGE_TYPE];\n            if (cmd === SWITCH_ACK) {\n                this.upgradeIfSecondaryHealthy_();\n            }\n            else if (cmd === CONTROL_RESET) {\n                // Most likely the session wasn't valid. Abandon the switch attempt\n                this.log_('Got a reset on secondary, closing it');\n                this.secondaryConn_.close();\n                // If we were already using this connection for something, than we need to fully close\n                if (this.tx_ === this.secondaryConn_ ||\n                    this.rx_ === this.secondaryConn_) {\n                    this.close();\n                }\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on secondary.');\n                this.secondaryResponsesRequired_--;\n                this.upgradeIfSecondaryHealthy_();\n            }\n        }\n    };\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onSecondaryControl_(data);\n        }\n        else if (layer == 'd') {\n            // got a data message, but we're still second connection. Need to buffer it up\n            this.pendingDataMessages.push(data);\n        }\n        else {\n            throw new Error('Unknown protocol layer: ' + layer);\n        }\n    };\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n        if (this.secondaryResponsesRequired_ <= 0) {\n            this.log_('Secondary connection is healthy.');\n            this.isHealthy_ = true;\n            this.secondaryConn_.markConnectionHealthy();\n            this.proceedWithUpgrade_();\n        }\n        else {\n            // Send a ping to make sure the connection is healthy.\n            this.log_('sending ping on secondary.');\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.proceedWithUpgrade_ = function () {\n        // tell this connection to consider itself open\n        this.secondaryConn_.start();\n        // send ack\n        this.log_('sending client ack on secondary');\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n        // send end packet on primary transport, switch to sending on this one\n        // can receive on this one, buffer responses until end received on primary transport\n        this.log_('Ending transmission on primary');\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n        this.tx_ = this.secondaryConn_;\n        this.tryCleanupConnection();\n    };\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n        var layer = util_1.requireKey('t', parsedData);\n        var data = util_1.requireKey('d', parsedData);\n        if (layer == 'c') {\n            this.onControl_(data);\n        }\n        else if (layer == 'd') {\n            this.onDataMessage_(data);\n        }\n    };\n    Connection.prototype.onDataMessage_ = function (message) {\n        this.onPrimaryResponse_();\n        // We don't do anything with data messages, just kick them up a level\n        this.onMessage_(message);\n    };\n    Connection.prototype.onPrimaryResponse_ = function () {\n        if (!this.isHealthy_) {\n            this.primaryResponsesRequired_--;\n            if (this.primaryResponsesRequired_ <= 0) {\n                this.log_('Primary connection is healthy.');\n                this.isHealthy_ = true;\n                this.conn_.markConnectionHealthy();\n            }\n        }\n    };\n    Connection.prototype.onControl_ = function (controlData) {\n        var cmd = util_1.requireKey(MESSAGE_TYPE, controlData);\n        if (MESSAGE_DATA in controlData) {\n            var payload = controlData[MESSAGE_DATA];\n            if (cmd === SERVER_HELLO) {\n                this.onHandshake_(payload);\n            }\n            else if (cmd === END_TRANSMISSION) {\n                this.log_('recvd end transmission on primary');\n                this.rx_ = this.secondaryConn_;\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n                    this.onDataMessage_(this.pendingDataMessages[i]);\n                }\n                this.pendingDataMessages = [];\n                this.tryCleanupConnection();\n            }\n            else if (cmd === CONTROL_SHUTDOWN) {\n                // This was previously the 'onKill' callback passed to the lower-level connection\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\n                this.onConnectionShutdown_(payload);\n            }\n            else if (cmd === CONTROL_RESET) {\n                // payload in this case is the host we should contact\n                this.onReset_(payload);\n            }\n            else if (cmd === CONTROL_ERROR) {\n                util_1.error('Server Error: ' + payload);\n            }\n            else if (cmd === CONTROL_PONG) {\n                this.log_('got pong on primary.');\n                this.onPrimaryResponse_();\n                this.sendPingOnPrimaryIfNecessary_();\n            }\n            else {\n                util_1.error('Unknown control packet command: ' + cmd);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Object} handshake The handshake data returned from the server\n     * @private\n     */\n    Connection.prototype.onHandshake_ = function (handshake) {\n        var timestamp = handshake.ts;\n        var version = handshake.v;\n        var host = handshake.h;\n        this.sessionId = handshake.s;\n        this.repoInfo_.updateHost(host);\n        // if we've already closed the connection, then don't bother trying to progress further\n        if (this.state_ == 0 /* CONNECTING */) {\n            this.conn_.start();\n            this.onConnectionEstablished_(this.conn_, timestamp);\n            if (Constants_1.PROTOCOL_VERSION !== version) {\n                util_1.warn('Protocol version mismatch detected');\n            }\n            // TODO: do we want to upgrade? when? maybe a delay?\n            this.tryStartUpgrade_();\n        }\n    };\n    Connection.prototype.tryStartUpgrade_ = function () {\n        var conn = this.transportManager_.upgradeTransport();\n        if (conn) {\n            this.startUpgrade_(conn);\n        }\n    };\n    Connection.prototype.startUpgrade_ = function (conn) {\n        var _this = this;\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n        // can consider the transport healthy.\n        this.secondaryResponsesRequired_ =\n            conn['responsesRequiredToBeHealthy'] || 0;\n        var onMessage = this.connReceiver_(this.secondaryConn_);\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n        this.secondaryConn_.open(onMessage, onDisconnect);\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n        util_1.setTimeoutNonBlocking(function () {\n            if (_this.secondaryConn_) {\n                _this.log_('Timed out trying to upgrade.');\n                _this.secondaryConn_.close();\n            }\n        }, Math.floor(UPGRADE_TIMEOUT));\n    };\n    Connection.prototype.onReset_ = function (host) {\n        this.log_('Reset packet received.  New host: ' + host);\n        this.repoInfo_.updateHost(host);\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n        // We don't currently support resets after the connection has already been established\n        if (this.state_ === 1 /* CONNECTED */) {\n            this.close();\n        }\n        else {\n            // Close whatever connections we have open and start again.\n            this.closeConnections_();\n            this.start_();\n        }\n    };\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n        var _this = this;\n        this.log_('Realtime connection established.');\n        this.conn_ = conn;\n        this.state_ = 1 /* CONNECTED */;\n        if (this.onReady_) {\n            this.onReady_(timestamp, this.sessionId);\n            this.onReady_ = null;\n        }\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n        // send some pings.\n        if (this.primaryResponsesRequired_ === 0) {\n            this.log_('Primary connection is healthy.');\n            this.isHealthy_ = true;\n        }\n        else {\n            util_1.setTimeoutNonBlocking(function () {\n                _this.sendPingOnPrimaryIfNecessary_();\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n        }\n    };\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\n            this.log_('sending ping on primary.');\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n        }\n    };\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\n        var conn = this.secondaryConn_;\n        this.secondaryConn_ = null;\n        if (this.tx_ === conn || this.rx_ === conn) {\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\n            this.close();\n        }\n    };\n    /**\n     *\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\n     * we should flush the host cache\n     * @private\n     */\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\n        this.conn_ = null;\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\n            this.log_('Realtime connection failed.');\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n            if (this.repoInfo_.isCacheableHost()) {\n                storage_1.PersistentStorage.remove('host:' + this.repoInfo_.host);\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n                this.repoInfo_.internalHost = this.repoInfo_.host;\n            }\n        }\n        else if (this.state_ === 1 /* CONNECTED */) {\n            this.log_('Realtime connection lost.');\n        }\n        this.close();\n    };\n    /**\n     *\n     * @param {string} reason\n     * @private\n     */\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\n        this.log_('Connection shutdown command received. Shutting down...');\n        if (this.onKill_) {\n            this.onKill_(reason);\n            this.onKill_ = null;\n        }\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\n        // so clear the callback.\n        this.onDisconnect_ = null;\n        this.close();\n    };\n    Connection.prototype.sendData_ = function (data) {\n        if (this.state_ !== 1 /* CONNECTED */) {\n            throw 'Connection is not connected';\n        }\n        else {\n            this.tx_.send(data);\n        }\n    };\n    /**\n     * Cleans up this connection, calling the appropriate callbacks\n     */\n    Connection.prototype.close = function () {\n        if (this.state_ !== 2 /* DISCONNECTED */) {\n            this.log_('Closing realtime connection.');\n            this.state_ = 2 /* DISCONNECTED */;\n            this.closeConnections_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_();\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     *\n     * @private\n     */\n    Connection.prototype.closeConnections_ = function () {\n        this.log_('Shutting down all connections');\n        if (this.conn_) {\n            this.conn_.close();\n            this.conn_ = null;\n        }\n        if (this.secondaryConn_) {\n            this.secondaryConn_.close();\n            this.secondaryConn_ = null;\n        }\n        if (this.healthyTimeout_) {\n            clearTimeout(this.healthyTimeout_);\n            this.healthyTimeout_ = null;\n        }\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/Connection.js\n// module id = 195\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar CountedSet_1 = require(\"../core/util/CountedSet\");\nvar StatsManager_1 = require(\"../core/stats/StatsManager\");\nvar PacketReceiver_1 = require(\"./polling/PacketReceiver\");\nvar Constants_1 = require(\"./Constants\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\n// URL query parameters associated with longpolling\nexports.FIREBASE_LONGPOLL_START_PARAM = 'start';\nexports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexports.FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n * @const\n * @type {number}\n */\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\n * How long to wait before aborting a long-polling connection attempt.\n * @const\n * @type {number}\n */\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\n * This class manages a single long-polling connection.\n *\n * @constructor\n * @implements {Transport}\n */\nvar BrowserPollConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId An identifier for this connection, used for logging\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\n     *                                         transport session\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n     *                                     connection previously\n     */\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.repoInfo = repoInfo;\n        this.transportSessionId = transportSessionId;\n        this.lastSessionId = lastSessionId;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.everConnected_ = false;\n        this.log_ = util_1.logWrapper(connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.urlFn = function (params) {\n            return repoInfo.connectionURL(Constants_1.LONG_POLLING, params);\n        };\n    }\n    /**\n     *\n     * @param {function(Object)} onMessage Callback when messages arrive\n     * @param {function()} onDisconnect Callback with connection lost.\n     */\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.curSegmentNum = 0;\n        this.onDisconnect_ = onDisconnect;\n        this.myPacketOrderer = new PacketReceiver_1.PacketReceiver(onMessage);\n        this.isClosed_ = false;\n        this.connectTimeoutTimer_ = setTimeout(function () {\n            _this.log_('Timed out trying to connect.');\n            // Make sure we clear the host cache\n            _this.onClosed_();\n            _this.connectTimeoutTimer_ = null;\n        }, Math.floor(LP_CONNECT_TIMEOUT));\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\n        util_1.executeWhenDOMReady(function () {\n            if (_this.isClosed_)\n                return;\n            //Set up a callback that gets triggered once a connection is set up.\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var command = args[0], arg1 = args[1], arg2 = args[2], arg3 = args[3], arg4 = args[4];\n                _this.incrementIncomingBytes_(args);\n                if (!_this.scriptTagHolder)\n                    return; // we closed the connection.\n                if (_this.connectTimeoutTimer_) {\n                    clearTimeout(_this.connectTimeoutTimer_);\n                    _this.connectTimeoutTimer_ = null;\n                }\n                _this.everConnected_ = true;\n                if (command == exports.FIREBASE_LONGPOLL_START_PARAM) {\n                    _this.id = arg1;\n                    _this.password = arg2;\n                }\n                else if (command === exports.FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\n                    if (arg1) {\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\n                        // through our already open polls), so don't send any more.\n                        _this.scriptTagHolder.sendNewPolls = false;\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\n                        // all of the responses up to this one before closing\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\n                            _this.onClosed_();\n                        });\n                    }\n                    else {\n                        _this.onClosed_();\n                    }\n                }\n                else {\n                    throw new Error('Unrecognized command received: ' + command);\n                }\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var pN = args[0], data = args[1];\n                _this.incrementIncomingBytes_(args);\n                _this.myPacketOrderer.handleResponse(pN, data);\n            }, function () {\n                _this.onClosed_();\n            }, _this.urlFn);\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n            //from cache.\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_START_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\n                urlParams[exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n            urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n            if (_this.transportSessionId) {\n                urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n            }\n            if (_this.lastSessionId) {\n                urlParams[Constants_1.LAST_SESSION_PARAM] = _this.lastSessionId;\n            }\n            if (!util_3.isNodeSdk() &&\n                typeof location !== 'undefined' &&\n                location.href &&\n                location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n                urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n            }\n            var connectURL = _this.urlFn(urlParams);\n            _this.log_('Connecting via long-poll to ' + connectURL);\n            _this.scriptTagHolder.addTag(connectURL, function () {\n                /* do nothing */\n            });\n        });\n    };\n    /**\n     * Call this when a handshake has completed successfully and we want to consider the connection established\n     */\n    BrowserPollConnection.prototype.start = function () {\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\n        this.addDisconnectPingFrame(this.id, this.password);\n    };\n    /**\n     * Forces long polling to be considered as a potential transport\n     */\n    BrowserPollConnection.forceAllow = function () {\n        BrowserPollConnection.forceAllow_ = true;\n    };\n    /**\n     * Forces longpolling to not be considered as a potential transport\n     */\n    BrowserPollConnection.forceDisallow = function () {\n        BrowserPollConnection.forceDisallow_ = true;\n    };\n    // Static method, use string literal so it can be accessed in a generic way\n    BrowserPollConnection.isAvailable = function () {\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n        return (BrowserPollConnection.forceAllow_ ||\n            (!BrowserPollConnection.forceDisallow_ &&\n                typeof document !== 'undefined' &&\n                document.createElement != null &&\n                !util_1.isChromeExtensionContentScript() &&\n                !util_1.isWindowsStoreApp() &&\n                !util_3.isNodeSdk()));\n    };\n    /**\n     * No-op for polling\n     */\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\n    /**\n     * Stops polling and cleans up the iframe\n     * @private\n     */\n    BrowserPollConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.scriptTagHolder) {\n            this.scriptTagHolder.close();\n            this.scriptTagHolder = null;\n        }\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n        if (this.myDisconnFrame) {\n            document.body.removeChild(this.myDisconnFrame);\n            this.myDisconnFrame = null;\n        }\n        if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n        }\n    };\n    /**\n     * Triggered when this transport is closed\n     * @private\n     */\n    BrowserPollConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is closing itself');\n            this.shutdown_();\n            if (this.onDisconnect_) {\n                this.onDisconnect_(this.everConnected_);\n                this.onDisconnect_ = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n     * that we've left.\n     */\n    BrowserPollConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('Longpoll is being closed.');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n     * broken into chunks (since URLs have a small maximum length).\n     * @param {!Object} data The JSON data to transmit.\n     */\n    BrowserPollConnection.prototype.send = function (data) {\n        var dataStr = util_2.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //first, lets get the base64-encoded data\n        var base64data = util_2.base64Encode(dataStr);\n        //We can only fit a certain amount in each URL, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_1.splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n        //of segments so that we can reassemble the packet on the server.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n            this.curSegmentNum++;\n        }\n    };\n    /**\n     * This is how we notify the server that we're leaving.\n     * We aren't able to send requests with DHTML on a window close event, but we can\n     * trigger XHR requests in some browsers (everything but Opera basically).\n     * @param {!string} id\n     * @param {!string} pw\n     */\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n        if (util_3.isNodeSdk())\n            return;\n        this.myDisconnFrame = document.createElement('iframe');\n        var urlParams = {};\n        urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n        urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = id;\n        urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = pw;\n        this.myDisconnFrame.src = this.urlFn(urlParams);\n        this.myDisconnFrame.style.display = 'none';\n        document.body.appendChild(this.myDisconnFrame);\n    };\n    /**\n     * Used to track the bytes received by this client\n     * @param {*} args\n     * @private\n     */\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n        var bytesReceived = util_2.stringify(args).length;\n        this.bytesReceived += bytesReceived;\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\n    };\n    return BrowserPollConnection;\n}());\nexports.BrowserPollConnection = BrowserPollConnection;\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n * @constructor\n *********************************************************************************************/\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\n    /**\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\n     */\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n        this.onDisconnect = onDisconnect;\n        this.urlFn = urlFn;\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n        //problems in some browsers.\n        /**\n         * @type {CountedSet.<number, number>}\n         */\n        this.outstandingRequests = new CountedSet_1.CountedSet();\n        //A queue of the pending segments waiting for transmission to the server.\n        this.pendingSegs = [];\n        //A serial number. We use this for two things:\n        // 1) A way to ensure the browser doesn't cache responses to polls\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n        //    JSONP code in the order it was added to the iframe.\n        this.currentSerial = Math.floor(Math.random() * 100000000);\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n        // incoming data from the server that we're waiting for).\n        this.sendNewPolls = true;\n        if (!util_3.isNodeSdk()) {\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n            //iframes where we put the long-polling script tags. We have two callbacks:\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\n            //   2) Message Callback - Triggered when new data arrives.\n            this.uniqueCallbackIdentifier = util_1.LUIDGenerator();\n            window[exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n            window[exports.FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\n            //Create an iframe for us to add script tags to.\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n            // Set the iframe's contents.\n            var script = '';\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n            // for ie9, but ie8 needs to do it again in the document itself.\n            if (this.myIFrame.src &&\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n                var currentDomain = document.domain;\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n            }\n            var iframeContents = '<html><body>' + script + '</body></html>';\n            try {\n                this.myIFrame.doc.open();\n                this.myIFrame.doc.write(iframeContents);\n                this.myIFrame.doc.close();\n            }\n            catch (e) {\n                util_1.log('frame writing exception');\n                if (e.stack) {\n                    util_1.log(e.stack);\n                }\n                util_1.log(e);\n            }\n        }\n        else {\n            this.commandCB = commandCB;\n            this.onMessageCB = onMessageCB;\n        }\n    }\n    /**\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n     * actually use.\n     * @private\n     * @return {Element}\n     */\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\n        var iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        // This is necessary in order to initialize the document inside the iframe\n        if (document.body) {\n            document.body.appendChild(iframe);\n            try {\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n                var a = iframe.contentWindow.document;\n                if (!a) {\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n                    util_1.log('No IE domain setting required');\n                }\n            }\n            catch (e) {\n                var domain = document.domain;\n                iframe.src =\n                    \"javascript:void((function(){document.open();document.domain='\" +\n                        domain +\n                        \"';document.close();})())\";\n            }\n        }\n        else {\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n            // never gets hit.\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n        }\n        // Get the document of the iframe in a browser-specific way.\n        if (iframe.contentDocument) {\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n        }\n        else if (iframe.contentWindow) {\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\n        }\n        else if (iframe.document) {\n            iframe.doc = iframe.document; //others?\n        }\n        return iframe;\n    };\n    /**\n     * Cancel all outstanding queries and remove the frame.\n     */\n    FirebaseIFrameScriptHolder.prototype.close = function () {\n        var _this = this;\n        //Mark this iframe as dead, so no new requests are sent.\n        this.alive = false;\n        if (this.myIFrame) {\n            //We have to actually remove all of the html inside this iframe before removing it from the\n            //window, or IE will continue loading and executing the script tags we've already added, which\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n            this.myIFrame.doc.body.innerHTML = '';\n            setTimeout(function () {\n                if (_this.myIFrame !== null) {\n                    document.body.removeChild(_this.myIFrame);\n                    _this.myIFrame = null;\n                }\n            }, Math.floor(0));\n        }\n        if (util_3.isNodeSdk() && this.myID) {\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            var theURL = this.urlFn(urlParams);\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\n        }\n        // Protect from being called recursively.\n        var onDisconnect = this.onDisconnect;\n        if (onDisconnect) {\n            this.onDisconnect = null;\n            onDisconnect();\n        }\n    };\n    /**\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n     * @param {!string} id - The ID of this connection\n     * @param {!string} pw - The password for this connection\n     */\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n        this.myID = id;\n        this.myPW = pw;\n        this.alive = true;\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n        while (this.newRequest_()) { }\n    };\n    /**\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n     * too many outstanding requests and we are still alive.\n     *\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n     * needed.\n     */\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n        // close the old request.\n        if (this.alive &&\n            this.sendNewPolls &&\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\n            //construct our url\n            this.currentSerial++;\n            var urlParams = {};\n            urlParams[exports.FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n            urlParams[exports.FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n            urlParams[exports.FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n            var theURL = this.urlFn(urlParams);\n            //Now add as much data as we can.\n            var curDataString = '';\n            var i = 0;\n            while (this.pendingSegs.length > 0) {\n                //first, lets see if the next segment will fit.\n                var nextSeg = this.pendingSegs[0];\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\n                    MAX_URL_DATA_SIZE) {\n                    //great, the segment will fit. Lets append it.\n                    var theSeg = this.pendingSegs.shift();\n                    curDataString =\n                        curDataString +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n                            i +\n                            '=' +\n                            theSeg.seg +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n                            i +\n                            '=' +\n                            theSeg.ts +\n                            '&' +\n                            exports.FIREBASE_LONGPOLL_DATA_PARAM +\n                            i +\n                            '=' +\n                            theSeg.d;\n                    i++;\n                }\n                else {\n                    break;\n                }\n            }\n            theURL = theURL + curDataString;\n            this.addLongPollTag_(theURL, this.currentSerial);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Queue a packet for transmission to the server.\n     * @param segnum - A sequential id for this packet segment used for reassembly\n     * @param totalsegs - The total number of segments in this packet\n     * @param data - The data for this segment.\n     */\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n        //add this to the queue of segments to send.\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n        //send the data immediately if there isn't already data being transmitted, unless\n        //startLongPoll hasn't been called yet.\n        if (this.alive) {\n            this.newRequest_();\n        }\n    };\n    /**\n     * Add a script tag for a regular long-poll request.\n     * @param {!string} url - The URL of the script tag.\n     * @param {!number} serial - The serial number of the request.\n     * @private\n     */\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n        var _this = this;\n        //remember that we sent this request.\n        this.outstandingRequests.add(serial, 1);\n        var doNewRequest = function () {\n            _this.outstandingRequests.remove(serial);\n            _this.newRequest_();\n        };\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n        var readyStateCB = function () {\n            // Request completed.  Cancel the keepalive.\n            clearTimeout(keepaliveTimeout);\n            // Trigger a new request so we can continue receiving data.\n            doNewRequest();\n        };\n        this.addTag(url, readyStateCB);\n    };\n    /**\n     * Add an arbitrary script tag to the iframe.\n     * @param {!string} url - The URL for the script tag source.\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\n     */\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n        var _this = this;\n        if (util_3.isNodeSdk()) {\n            this.doNodeLongPoll(url, loadCB);\n        }\n        else {\n            setTimeout(function () {\n                try {\n                    // if we're already closed, don't add this poll\n                    if (!_this.sendNewPolls)\n                        return;\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\n                    newScript_1.type = 'text/javascript';\n                    newScript_1.async = true;\n                    newScript_1.src = url;\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\n                        var rstate = newScript_1.readyState;\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\n                            if (newScript_1.parentNode) {\n                                newScript_1.parentNode.removeChild(newScript_1);\n                            }\n                            loadCB();\n                        }\n                    };\n                    newScript_1.onerror = function () {\n                        util_1.log('Long-poll script failed to load: ' + url);\n                        _this.sendNewPolls = false;\n                        _this.close();\n                    };\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\n                }\n                catch (e) {\n                    // TODO: we should make this error visible somehow\n                }\n            }, Math.floor(1));\n        }\n    };\n    return FirebaseIFrameScriptHolder;\n}());\nexports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;\n\n//# sourceMappingURL=BrowserPollConnection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/BrowserPollConnection.js\n// module id = 196\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../core/util/util\");\nvar StatsManager_1 = require(\"../core/stats/StatsManager\");\nvar Constants_1 = require(\"./Constants\");\nvar util_3 = require(\"@firebase/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n}\nelse if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\nexports.setWebSocketImpl = setWebSocketImpl;\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nvar WebSocketConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId identifier for this transport\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = util_2.logWrapper(this.connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @return {string} connection url\n     * @private\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n        if (!util_5.isNodeSdk() &&\n            typeof location !== 'undefined' &&\n            location.href &&\n            location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n            urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n        }\n        if (transportSessionId) {\n            urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[Constants_1.LAST_SESSION_PARAM] = lastSessionId;\n        }\n        return repoInfo.connectionURL(Constants_1.WEBSOCKET, urlParams);\n    };\n    /**\n     *\n     * @param onMessage Callback when messages arrive\n     * @param onDisconnect Callback with connection lost.\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        storage_1.PersistentStorage.set('previous_websocket_failure', true);\n        try {\n            if (util_5.isNodeSdk()) {\n                var device = util_3.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + Constants_1.PROTOCOL_VERSION + \"/\" + app_1.default.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = process['env'];\n                var proxy = this.connURL.indexOf('wss://') == 0\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\n                    : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            }\n            else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        }\n        catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n     */\n    WebSocketConnection.prototype.start = function () { };\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return (!isOldAndroid &&\n            WebSocketImpl !== null &&\n            !WebSocketConnection.forceDisallow_);\n    };\n    /**\n     * Returns true if we previously failed to connect with this transport.\n     * @return {boolean}\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return (storage_1.PersistentStorage.isInMemoryStorage ||\n            storage_1.PersistentStorage.get('previous_websocket_failure') === true);\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        storage_1.PersistentStorage.remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = util_4.jsonEval(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\n     * @param {number} frameCount The number of frames we are expecting from the server\n     * @private\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n     * @param {!String} data\n     * @return {?String} Any remaining data to be process, or null if there is none\n     * @private\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        util_1.assert(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\n     * Process a websocket frame that has arrived from the server.\n     * @param mess The frame data\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null)\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        }\n        else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\n     * Send a message to the server\n     * @param {Object} data The JSON object to transmit\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = util_4.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_2.splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler.\n     * Close the websocket and kill the connection.\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n     * the last activity.\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\n     * Send a string over the websocket.\n     *\n     * @param {string} str String to send.\n     * @private\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        }\n        catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\n     * Number of response before we consider the connection \"healthy.\"\n     * @type {number}\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\n     * Time to wait for the connection te become healthy before giving up.\n     * @type {number}\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}());\nexports.WebSocketConnection = WebSocketConnection;\n\n//# sourceMappingURL=WebSocketConnection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/WebSocketConnection.js\n// module id = 197\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nvar ServerActions = /** @class */ (function () {\n    function ServerActions() {\n    }\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, ?string)} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\n    /**\n     * Refreshes the auth token for the current connection.\n     * @param {string} token The authentication token\n     */\n    ServerActions.prototype.refreshAuthToken = function (token) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\n    /**\n     * @param {Object.<string, *>} stats\n     */\n    ServerActions.prototype.reportStats = function (stats) { };\n    return ServerActions;\n}());\nexports.ServerActions = ServerActions;\n\n//# sourceMappingURL=ServerActions.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/ServerActions.js\n// module id = 198\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./IndexedFilter\");\nvar PriorityIndex_1 = require(\"../../snap/indexes/PriorityIndex\");\nvar Node_1 = require(\"../../../core/snap/Node\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar RangedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\n     * @param {!NamedNode} node\n     * @return {boolean}\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\n            this.index_.compare(node, this.getEndPost()) <= 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            if (!self.matches(new Node_1.NamedNode(key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        }\n        else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        }\n        else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}());\nexports.RangedFilter = RangedFilter;\n\n//# sourceMappingURL=RangedFilter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/RangedFilter.js\n// module id = 199\n// module chunks = 0","import React from 'react';\nimport styled from 'styled-components';\nimport TextArea from '../components/TextArea';\n\nconst Input = ({\n  id,\n  label,\n  hasValue,\n  multiline,\n  className,\n  ...props,\n}) => (\n  <InputWrapper className={className}>\n    <React.Fragment>\n      {!multiline &&\n        <InputElement\n          id={id}\n          name={id}\n          aria-labelledby={`${id}-label`}\n          {...props}\n        />\n      }\n      {!!multiline &&\n        <InputTextArea\n          id={id}\n          name={id}\n          aria-labelledby={`${id}-label`}\n          {...props}\n        />\n      }\n      <InputLabel\n        id={`${id}-label`}\n        hasValue={hasValue}\n        htmlFor={id}\n      >\n        {label}\n      </InputLabel>\n    </React.Fragment>\n  </InputWrapper>\n);\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  margin-top: 16px;\n`;\n\nconst InputElement = styled.input`\n  background: transparent;\n  color: ${props => props.theme.colorText(1)};\n  box-shadow: inset 0 -2px 0 0 ${props => props.theme.colorText(0.2)};\n  transition: box-shadow 0.4s ease;\n  height: 34px;\n  width: 100%;\n  font-size: 16px;\n  font-family: inherit;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  padding-bottom: 16px;\n  z-index: 16;\n  appearance: none;\n  -webkit-border-radius: 0;\n\n  &:focus {\n    outline: none;\n    box-shadow: inset 0 -2px 0 0 ${props => props.theme.colorPrimary(1)};\n  }\n\n  &::-webkit-contacts-auto-fill-button {\n    background-color: ${props => props.theme.colorText(0.4)};\n    transition: background-color 0.3s ease;\n  }\n\n  &::-webkit-contacts-auto-fill-button:hover {\n    background-color: ${props => props.theme.colorPrimary(1)};\n  }\n`;\n\nconst InputTextArea = InputElement.withComponent(TextArea);\n\nconst InputLabelFocus = props =>`\n  color: ${props.theme.colorText(0.4)};\n  transform: scale(0.8) translateY(-28px);\n`;\n\nconst InputLabel = styled.label`\n  color: ${props => props.theme.colorText(0.8)};\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  transform-origin: top left;\n  transition: all 0.4s ${props => props.theme.curveFastoutSlowin};\n\n  ${InputElement}:focus + &,\n  ${InputTextArea}:focus + & {\n    ${props => InputLabelFocus(props)}\n  }\n\n  ${props => props.hasValue &&`\n    ${InputLabelFocus(props)}\n  `}\n`;\n\nexport default Input;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Input.js","import React, { Component } from 'react';\nimport autosize from 'autosize';\n\nexport default class TextArea extends Component {\n  componentDidMount() {\n    autosize(this.textarea);\n  }\n\n  render() {\n    const { className, allowResize, ...props } = this.props;\n\n    return (\n      <textarea\n        {...props}\n        ref={node => this.textarea = node}\n        className={className}\n        style={{resize: allowResize ? null : 'none'}}\n      />\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TextArea.js","/*!\n\tautosize 4.0.1\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(['module', 'exports'], factory);\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight !== styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/autosize/dist/autosize.js\n// module id = 229\n// module chunks = 0","import { firebase } from '@firebase/app';\nimport '@firebase/database';\n\n// Firebase config for storing messages from the contact form.\n// Replace this with your own config or remove the form if you're\n// checking out or modifying my protfolio – HW\nimport config from '../config';\n\nconst firebaseConfig = config.firebase;\nconst Firebase = firebase.initializeApp(firebaseConfig);\n\nexport default Firebase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Firebase.js","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createSubscribe, deepCopy, deepExtend, ErrorFactory, patchProperty } from '@firebase/util';\nvar contains = function (obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n};\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n// An array to capture listeners before the true auth functions\n// exist\nvar tokenListeners = [];\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nvar FirebaseAppImpl = /** @class */ (function () {\n    function FirebaseAppImpl(options, name, firebase_) {\n        this.firebase_ = firebase_;\n        this.isDeleted_ = false;\n        this.services_ = {};\n        this.name_ = name;\n        this.options_ = deepCopy(options);\n        this.INTERNAL = {\n            getUid: function () { return null; },\n            getToken: function () { return Promise.resolve(null); },\n            addAuthTokenListener: function (callback) {\n                tokenListeners.push(callback);\n                // Make sure callback is called, asynchronously, in the absence of the auth module\n                setTimeout(function () { return callback(null); }, 0);\n            },\n            removeAuthTokenListener: function (callback) {\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\n            }\n        };\n    }\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.name_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\n        get: function () {\n            this.checkDestroyed_();\n            return this.options_;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAppImpl.prototype.delete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.checkDestroyed_();\n            resolve();\n        })\n            .then(function () {\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\n            var services = [];\n            Object.keys(_this.services_).forEach(function (serviceKey) {\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\n                    services.push(_this.services_[serviceKey][instanceKey]);\n                });\n            });\n            return Promise.all(services.map(function (service) {\n                return service.INTERNAL.delete();\n            }));\n        })\n            .then(function () {\n            _this.isDeleted_ = true;\n            _this.services_ = {};\n        });\n    };\n    /**\n     * Return a service instance associated with this app (creating it\n     * on demand), identified by the passed instanceIdentifier.\n     *\n     * NOTE: Currently storage is the only one that is leveraging this\n     * functionality. They invoke it by calling:\n     *\n     * ```javascript\n     * firebase.app().storage('STORAGE BUCKET ID')\n     * ```\n     *\n     * The service name is passed to this already\n     * @internal\n     */\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\n        this.checkDestroyed_();\n        if (!this.services_[name]) {\n            this.services_[name] = {};\n        }\n        if (!this.services_[name][instanceIdentifier]) {\n            /**\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\n             * then we will pass that instance on, otherwise we pass `null`\n             */\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\n                ? instanceIdentifier\n                : undefined;\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\n            this.services_[name][instanceIdentifier] = service;\n        }\n        return this.services_[name][instanceIdentifier];\n    };\n    /**\n     * Callback function used to extend an App instance at the time\n     * of service instance creation.\n     */\n    FirebaseAppImpl.prototype.extendApp = function (props) {\n        var _this = this;\n        // Copy the object onto the FirebaseAppImpl prototype\n        deepExtend(this, props);\n        /**\n         * If the app has overwritten the addAuthTokenListener stub, forward\n         * the active token listeners on to the true fxn.\n         *\n         * TODO: This function is required due to our current module\n         * structure. Once we are able to rely strictly upon a single module\n         * implementation, this code should be refactored and Auth should\n         * provide these stubs and the upgrade logic\n         */\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\n            tokenListeners.forEach(function (listener) {\n                _this.INTERNAL.addAuthTokenListener(listener);\n            });\n            tokenListeners = [];\n        }\n    };\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\n        if (this.isDeleted_) {\n            error('app-deleted', { name: this.name_ });\n        }\n    };\n    return FirebaseAppImpl;\n}());\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n    FirebaseAppImpl.prototype.delete ||\n    console.log('dc');\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace() {\n    var apps_ = {};\n    var factories = {};\n    var appHooks = {};\n    // A namespace is a plain JavaScript Object.\n    var namespace = {\n        // Hack to prevent Babel from modifying the object returned\n        // as the firebase namespace.\n        __esModule: true,\n        initializeApp: initializeApp,\n        app: app,\n        apps: null,\n        Promise: Promise,\n        SDK_VERSION: '4.10.1',\n        INTERNAL: {\n            registerService: registerService,\n            createFirebaseNamespace: createFirebaseNamespace,\n            extendNamespace: extendNamespace,\n            createSubscribe: createSubscribe,\n            ErrorFactory: ErrorFactory,\n            removeApp: removeApp,\n            factories: factories,\n            useAsService: useAsService,\n            Promise: Promise,\n            deepExtend: deepExtend\n        }\n    };\n    // Inject a circular default export to allow Babel users who were previously\n    // using:\n    //\n    //   import firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase').default;\n    //\n    // instead of\n    //\n    //   import * as firebase from 'firebase';\n    //   which becomes: var firebase = require('firebase');\n    patchProperty(namespace, 'default', namespace);\n    // firebase.apps is a read-only getter.\n    Object.defineProperty(namespace, 'apps', {\n        get: getApps\n    });\n    /**\n     * Called by App.delete() - but before any services associated with the App\n     * are deleted.\n     */\n    function removeApp(name) {\n        var app = apps_[name];\n        callAppHooks(app, 'delete');\n        delete apps_[name];\n    }\n    /**\n     * Get the App object for a given name (or DEFAULT).\n     */\n    function app(name) {\n        name = name || DEFAULT_ENTRY_NAME;\n        if (!contains(apps_, name)) {\n            error('no-app', { name: name });\n        }\n        return apps_[name];\n    }\n    patchProperty(app, 'App', FirebaseAppImpl);\n    /**\n     * Create a new App instance (name must be unique).\n     */\n    function initializeApp(options, name) {\n        if (name === undefined) {\n            name = DEFAULT_ENTRY_NAME;\n        }\n        else {\n            if (typeof name !== 'string' || name === '') {\n                error('bad-app-name', { name: name + '' });\n            }\n        }\n        if (contains(apps_, name)) {\n            error('duplicate-app', { name: name });\n        }\n        var app = new FirebaseAppImpl(options, name, namespace);\n        apps_[name] = app;\n        callAppHooks(app, 'create');\n        return app;\n    }\n    /*\n     * Return an array of all the non-deleted FirebaseApps.\n     */\n    function getApps() {\n        // Make a copy so caller cannot mutate the apps list.\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\n    }\n    /*\n     * Register a Firebase Service.\n     *\n     * firebase.INTERNAL.registerService()\n     *\n     * TODO: Implement serviceProperties.\n     */\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\n        // Cannot re-register a service that already exists\n        if (factories[name]) {\n            error('duplicate-service', { name: name });\n        }\n        // Capture the service factory for later service instantiation\n        factories[name] = createService;\n        // Capture the appHook, if passed\n        if (appHook) {\n            appHooks[name] = appHook;\n            // Run the **new** app hook on all existing apps\n            getApps().forEach(function (app) {\n                appHook('create', app);\n            });\n        }\n        // The Service namespace is an accessor function ...\n        var serviceNamespace = function (appArg) {\n            if (appArg === void 0) { appArg = app(); }\n            if (typeof appArg[name] !== 'function') {\n                // Invalid argument.\n                // This happens in the following case: firebase.storage('gs:/')\n                error('invalid-app-argument', { name: name });\n            }\n            // Forward service instance lookup to the FirebaseApp.\n            return appArg[name]();\n        };\n        // ... and a container for service-level properties.\n        if (serviceProperties !== undefined) {\n            deepExtend(serviceNamespace, serviceProperties);\n        }\n        // Monkey-patch the serviceNamespace onto the firebase namespace\n        namespace[name] = serviceNamespace;\n        // Patch the FirebaseAppImpl prototype\n        FirebaseAppImpl.prototype[name] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var serviceFxn = this._getService.bind(this, name);\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n        };\n        return serviceNamespace;\n    }\n    /**\n     * Patch the top-level firebase namespace with additional properties.\n     *\n     * firebase.INTERNAL.extendNamespace()\n     */\n    function extendNamespace(props) {\n        deepExtend(namespace, props);\n    }\n    function callAppHooks(app, eventName) {\n        Object.keys(factories).forEach(function (serviceName) {\n            // Ignore virtual services\n            var factoryName = useAsService(app, serviceName);\n            if (factoryName === null) {\n                return;\n            }\n            if (appHooks[factoryName]) {\n                appHooks[factoryName](eventName, app);\n            }\n        });\n    }\n    // Map the requested service to a registered service name\n    // (used to map auth to serverAuth service when needed).\n    function useAsService(app, name) {\n        if (name === 'serverAuth') {\n            return null;\n        }\n        var useService = name;\n        var options = app.options;\n        return useService;\n    }\n    return namespace;\n}\nfunction error(code, args) {\n    throw appErrors.create(code, args);\n}\n// TypeScript does not support non-string indexes!\n// let errors: {[code: AppError: string} = {\nvar errors = {\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\n        'call Firebase App.initializeApp()',\n    'bad-app-name': \"Illegal App name: '{$name}\",\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\n        'account is only allowed in a Node.js environment. On client ' +\n        'devices, you should instead initialize the SDK with an api key and ' +\n        'auth domain',\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\n        'Firebase App instance.'\n};\nvar appErrors = new ErrorFactory('app', 'Firebase', errors);\n\n\n//# sourceMappingURL=firebaseApp.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/esm/src/firebaseApp.js\n// module id = 231\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\nexports.patchProperty = patchProperty;\n\n//# sourceMappingURL=deepCopy.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/deepCopy.js\n// module id = 232\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\n     * @return {!function(?(Error), ?=)}\n     */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            }\n            else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n//# sourceMappingURL=deferred.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/deferred.js\n// module id = 233\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return {string} user agent string\n */\nexports.getUA = function () {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    }\n    else {\n        return '';\n    }\n};\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\n * Cordova `onDeviceReady`, which would normally wait for a callback.\n *\n * @return {boolean} isMobileCordova\n */\nexports.isMobileCordova = function () {\n    return (typeof window !== 'undefined' &&\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(exports.getUA()));\n};\n/**\n * Detect React Native.\n *\n * @return {boolean} True if ReactNative environment is detected.\n */\nexports.isReactNative = function () {\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\n};\n/**\n * Detect Node.js.\n *\n * @return {boolean} True if Node.js environment is detected.\n */\nexports.isNodeSdk = function () {\n    return constants_1.CONSTANTS.NODE_CLIENT === true || constants_1.CONSTANTS.NODE_ADMIN === true;\n};\n\n//# sourceMappingURL=environment.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/environment.js\n// module id = 234\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_NAME = 'FirebaseError';\nvar captureStackTrace = Error\n    .captureStackTrace;\n// Export for faking in tests\nfunction patchCapture(captureFake) {\n    var result = captureStackTrace;\n    captureStackTrace = captureFake;\n    return result;\n}\nexports.patchCapture = patchCapture;\nvar FirebaseError = /** @class */ (function () {\n    function FirebaseError(code, message) {\n        this.code = code;\n        this.message = message;\n        var stack;\n        // We want the stack value, if implemented by Error\n        if (captureStackTrace) {\n            // Patches this.stack, omitted calls above ErrorFactory#create\n            captureStackTrace(this, ErrorFactory.prototype.create);\n        }\n        else {\n            var err_1 = Error.apply(this, arguments);\n            this.name = ERROR_NAME;\n            // Make non-enumerable getter for the property.\n            Object.defineProperty(this, 'stack', {\n                get: function () {\n                    return err_1.stack;\n                }\n            });\n        }\n    }\n    return FirebaseError;\n}());\nexports.FirebaseError = FirebaseError;\n// Back-door inheritance\nFirebaseError.prototype = Object.create(Error.prototype);\nFirebaseError.prototype.constructor = FirebaseError;\nFirebaseError.prototype.name = ERROR_NAME;\nvar ErrorFactory = /** @class */ (function () {\n    function ErrorFactory(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n        // Matches {$name}, by default.\n        this.pattern = /\\{\\$([^}]+)}/g;\n        // empty\n    }\n    ErrorFactory.prototype.create = function (code, data) {\n        if (data === undefined) {\n            data = {};\n        }\n        var template = this.errors[code];\n        var fullCode = this.service + '/' + code;\n        var message;\n        if (template === undefined) {\n            message = 'Error';\n        }\n        else {\n            message = template.replace(this.pattern, function (match, key) {\n                var value = data[key];\n                return value !== undefined ? value.toString() : '<' + key + '?>';\n            });\n        }\n        // Service: Error message (service/code).\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\n        var err = new FirebaseError(fullCode, message);\n        // Populate the Error object with message parts for programmatic\n        // accesses (e.g., e.file).\n        for (var prop in data) {\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\n                continue;\n            }\n            err[prop] = data[prop];\n        }\n        return err;\n    };\n    return ErrorFactory;\n}());\nexports.ErrorFactory = ErrorFactory;\n\n//# sourceMappingURL=errors.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/errors.js\n// module id = 235\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypt_1 = require(\"./crypt\");\nvar json_1 = require(\"./json\");\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {{header: *, claims: *, data: *, signature: string}}\n */\nexports.decode = function (token) {\n    var header = {}, claims = {}, data = {}, signature = '';\n    try {\n        var parts = token.split('.');\n        header = json_1.jsonEval(crypt_1.base64Decode(parts[0]) || '');\n        claims = json_1.jsonEval(crypt_1.base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    }\n    catch (e) { }\n    return {\n        header: header,\n        claims: claims,\n        data: data,\n        signature: signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidTimestamp = function (token) {\n    var claims = exports.decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        }\n        else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        }\n        else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {?number}\n */\nexports.issuedAtTime = function (token) {\n    var claims = exports.decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\n * signature.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isValidFormat = function (token) {\n    var decoded = exports.decode(token), claims = decoded.claims;\n    return (!!decoded.signature &&\n        !!claims &&\n        typeof claims === 'object' &&\n        claims.hasOwnProperty('iat'));\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n *\n * @param {?string} token\n * @return {boolean}\n */\nexports.isAdmin = function (token) {\n    var claims = exports.decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n//# sourceMappingURL=jwt.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/jwt.js\n// module id = 236\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar obj_1 = require(\"./obj\");\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\n * object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n *\n * @param {!Object} querystringParams\n * @return {string}\n */\nexports.querystring = function (querystringParams) {\n    var params = [];\n    obj_1.forEach(querystringParams, function (key, value) {\n        if (Array.isArray(value)) {\n            value.forEach(function (arrayVal) {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        }\n        else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    });\n    return params.length ? '&' + params.join('&') : '';\n};\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\n *\n * @param {string} querystring\n * @return {!Object}\n */\nexports.querystringDecode = function (querystring) {\n    var obj = {};\n    var tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(function (token) {\n        if (token) {\n            var key = token.split('=');\n            obj[key[0]] = key[1];\n        }\n    });\n    return obj;\n};\n\n//# sourceMappingURL=query.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/query.js\n// module id = 237\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hash_1 = require(\"./hash\");\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = /** @class */ (function (_super) {\n    tslib_1.__extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(opt_offset) << 24) |\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\n                        buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        }\n        else {\n            for (var i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[opt_offset] << 24) |\n                        (buf[opt_offset + 1] << 16) |\n                        (buf[opt_offset + 2] << 8) |\n                        buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(hash_1.Hash));\nexports.Sha1 = Sha1;\n\n//# sourceMappingURL=sha1.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/sha1.js\n// module id = 238\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See Sha1 and Md5 for sample implementations.\n *\n */\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\nvar Hash = /** @class */ (function () {\n    function Hash() {\n        /**\n         * The block size for the hasher.\n         * @type {number}\n         */\n        this.blockSize = -1;\n    }\n    return Hash;\n}());\nexports.Hash = Hash;\n\n//# sourceMappingURL=hash.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/hash.js\n// module id = 239\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    var proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\nexports.createSubscribe = createSubscribe;\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nvar ObserverProxy = /** @class */ (function () {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    function ObserverProxy(executor, onNoObservers) {\n        var _this = this;\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task\n            .then(function () {\n            executor(_this);\n        })\n            .catch(function (e) {\n            _this.error(e);\n        });\n    }\n    ObserverProxy.prototype.next = function (value) {\n        this.forEachObserver(function (observer) {\n            observer.next(value);\n        });\n    };\n    ObserverProxy.prototype.error = function (error) {\n        this.forEachObserver(function (observer) {\n            observer.error(error);\n        });\n        this.close(error);\n    };\n    ObserverProxy.prototype.complete = function () {\n        this.forEachObserver(function (observer) {\n            observer.complete();\n        });\n        this.close();\n    };\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber sychronously to their\n     *   call to subscribe().\n     */\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\n        var _this = this;\n        var observer;\n        if (nextOrObserver === undefined &&\n            error === undefined &&\n            complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\n            observer = nextOrObserver;\n        }\n        else {\n            observer = {\n                next: nextOrObserver,\n                error: error,\n                complete: complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            this.task.then(function () {\n                try {\n                    if (_this.finalError) {\n                        observer.error(_this.finalError);\n                    }\n                    else {\n                        observer.complete();\n                    }\n                }\n                catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    };\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    };\n    ObserverProxy.prototype.forEachObserver = function (fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (var i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    };\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    ObserverProxy.prototype.sendOne = function (i, fn) {\n        var _this = this;\n        // Execute the callback asynchronously\n        this.task.then(function () {\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\n                try {\n                    fn(_this.observers[i]);\n                }\n                catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    };\n    ObserverProxy.prototype.close = function (err) {\n        var _this = this;\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        this.task.then(function () {\n            _this.observers = undefined;\n            _this.onNoObservers = undefined;\n        });\n    };\n    return ObserverProxy;\n}());\n/** Turn synchronous function into one called asynchronously. */\nfunction async(fn, onError) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        Promise.resolve(true)\n            .then(function () {\n            fn.apply(void 0, args);\n        })\n            .catch(function (error) {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\nexports.async = async;\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\n        var method = methods_1[_i];\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n//# sourceMappingURL=subscribe.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/subscribe.js\n// module id = 240\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param {!string} fnName The function name\n * @param {!number} minCount The minimum number of arguments to allow for the function call\n * @param {!number} maxCount The maximum number of argument to allow for the function call\n * @param {!number} argCount The actual number of arguments provided.\n */\nexports.validateArgCount = function (fnName, minCount, maxCount, argCount) {\n    var argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    }\n    else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        var error = fnName +\n            ' failed: Was called with ' +\n            argCount +\n            (argCount === 1 ? ' argument.' : ' arguments.') +\n            ' Expects ' +\n            argError +\n            '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param {!string} fnName The function name\n * @param {!number} argumentNumber The index of the argument\n * @param {boolean} optional Whether or not the argument is optional\n * @return {!string} The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argumentNumber, optional) {\n    var argName = '';\n    switch (argumentNumber) {\n        case 1:\n            argName = optional ? 'first' : 'First';\n            break;\n        case 2:\n            argName = optional ? 'second' : 'Second';\n            break;\n        case 3:\n            argName = optional ? 'third' : 'Third';\n            break;\n        case 4:\n            argName = optional ? 'fourth' : 'Fourth';\n            break;\n        default:\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\n    }\n    var error = fnName + ' failed: ';\n    error += argName + ' argument ';\n    return error;\n}\nexports.errorPrefix = errorPrefix;\n/**\n * @param {!string} fnName\n * @param {!number} argumentNumber\n * @param {!string} namespace\n * @param {boolean} optional\n */\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\n    if (optional && !namespace)\n        return;\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid firebase namespace.');\n    }\n}\nexports.validateNamespace = validateNamespace;\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\n    if (optional && !callback)\n        return;\n    if (typeof callback !== 'function')\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid function.');\n}\nexports.validateCallback = validateCallback;\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\n    if (optional && !context)\n        return;\n    if (typeof context !== 'object' || context === null)\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\n            'must be a valid context object.');\n}\nexports.validateContextObject = validateContextObject;\n\n//# sourceMappingURL=validation.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/validation.js\n// module id = 241\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = require(\"./assert\");\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nexports.stringToByteArray = function (str) {\n    var out = [], p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            var high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert_1.assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if (c < 65536) {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexports.stringLength = function (str) {\n    var p = 0;\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        }\n        else if (c < 2048) {\n            p += 2;\n        }\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        }\n        else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n//# sourceMappingURL=utf8.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/cjs/src/utf8.js\n// module id = 242\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar Database_1 = require(\"./src/api/Database\");\nexports.Database = Database_1.Database;\nvar Query_1 = require(\"./src/api/Query\");\nexports.Query = Query_1.Query;\nvar Reference_1 = require(\"./src/api/Reference\");\nexports.Reference = Reference_1.Reference;\nvar util_1 = require(\"./src/core/util/util\");\nexports.enableLogging = util_1.enableLogging;\nvar RepoManager_1 = require(\"./src/core/RepoManager\");\nvar INTERNAL = require(\"./src/api/internal\");\nvar TEST_ACCESS = require(\"./src/api/test_access\");\nvar util_2 = require(\"@firebase/util\");\nvar ServerValue = Database_1.Database.ServerValue;\nexports.ServerValue = ServerValue;\nfunction registerDatabase(instance) {\n    // Register the Database Service with the 'firebase' namespace.\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager_1.RepoManager.getInstance().databaseFromApp(app, url); }, \n    // firebase.database namespace properties\n    {\n        Reference: Reference_1.Reference,\n        Query: Query_1.Query,\n        Database: Database_1.Database,\n        enableLogging: util_1.enableLogging,\n        INTERNAL: INTERNAL,\n        ServerValue: ServerValue,\n        TEST_ACCESS: TEST_ACCESS\n    }, null, true);\n    if (util_2.isNodeSdk()) {\n        module.exports = namespace;\n    }\n}\nexports.registerDatabase = registerDatabase;\nregisterDatabase(app_1.default);\nvar DataSnapshot_1 = require(\"./src/api/DataSnapshot\");\nexports.DataSnapshot = DataSnapshot_1.DataSnapshot;\nvar onDisconnect_1 = require(\"./src/api/onDisconnect\");\nexports.OnDisconnect = onDisconnect_1.OnDisconnect;\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/index.js\n// module id = 243\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nvar DOMStorageWrapper = /** @class */ (function () {\n    /**\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\n     * @param {string} key The key to save the value under\n     * @param {?Object} value The value being stored, or null to remove the key.\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        }\n        else {\n            this.domStorage_.setItem(this.prefixedName_(key), util_1.stringify(value));\n        }\n    };\n    /**\n     * @param {string} key\n     * @return {*} The value that was stored under this key, or null\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        }\n        else {\n            return util_1.jsonEval(storedVal);\n        }\n    };\n    /**\n     * @param {string} key\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}());\nexports.DOMStorageWrapper = DOMStorageWrapper;\n\n//# sourceMappingURL=DOMStorageWrapper.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/DOMStorageWrapper.js\n// module id = 244\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n *\n * @constructor\n */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n        this.cache_ = {};\n        this.isInMemoryStorage = true;\n    }\n    MemoryStorage.prototype.set = function (key, value) {\n        if (value == null) {\n            delete this.cache_[key];\n        }\n        else {\n            this.cache_[key] = value;\n        }\n    };\n    MemoryStorage.prototype.get = function (key) {\n        if (util_1.contains(this.cache_, key)) {\n            return this.cache_[key];\n        }\n        return null;\n    };\n    MemoryStorage.prototype.remove = function (key) {\n        delete this.cache_[key];\n    };\n    return MemoryStorage;\n}());\nexports.MemoryStorage = MemoryStorage;\n\n//# sourceMappingURL=MemoryStorage.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/storage/MemoryStorage.js\n// module id = 245\n// module chunks = 0","/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { instances } from './src/logger';\nexport function setLogLevel(level) {\n    instances.forEach(function (inst) {\n        inst.logLevel = level;\n    });\n}\nexport { Logger, LogLevel } from './src/logger';\n\n//# sourceMappingURL=index.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/esm/index.js\n// module id = 246\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar TransactionResult = /** @class */ (function () {\n    /**\n     * A type for the resolve value of Firebase.transaction.\n     * @constructor\n     * @dict\n     * @param {boolean} committed\n     * @param {DataSnapshot} snapshot\n     */\n    function TransactionResult(committed, snapshot) {\n        this.committed = committed;\n        this.snapshot = snapshot;\n    }\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    TransactionResult.prototype.toJSON = function () {\n        util_1.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n    };\n    return TransactionResult;\n}());\nexports.TransactionResult = TransactionResult;\n\n//# sourceMappingURL=TransactionResult.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/TransactionResult.js\n// module id = 247\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexports.nextPushId = (function () {\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n    // Timestamp of last push, used to prevent local collisions if you push twice\n    // in one ms.\n    var lastPushTime = 0;\n    // We generate 72-bits of randomness which get turned into 12 characters and\n    // appended to the timestamp to prevent collisions with other clients. We\n    // store the last characters we generated because in the event of a collision,\n    // we'll use those same characters except \"incremented\" by one.\n    var lastRandChars = [];\n    return function (now) {\n        var duplicateTime = now === lastPushTime;\n        lastPushTime = now;\n        var i;\n        var timeStampChars = new Array(8);\n        for (i = 7; i >= 0; i--) {\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n            // NOTE: Can't use << here because javascript will convert to int and lose\n            // the upper bits.\n            now = Math.floor(now / 64);\n        }\n        util_1.assert(now === 0, 'Cannot push at time == 0');\n        var id = timeStampChars.join('');\n        if (!duplicateTime) {\n            for (i = 0; i < 12; i++) {\n                lastRandChars[i] = Math.floor(Math.random() * 64);\n            }\n        }\n        else {\n            // If the timestamp hasn't changed since last push, use the same random\n            // number, except incremented by 1.\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n                lastRandChars[i] = 0;\n            }\n            lastRandChars[i]++;\n        }\n        for (i = 0; i < 12; i++) {\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\n        }\n        util_1.assert(id.length === 20, 'nextPushId: Length should be 20.');\n        return id;\n    };\n})();\n\n//# sourceMappingURL=NextPushId.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/NextPushId.js\n// module id = 248\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DataSnapshot_1 = require(\"../../api/DataSnapshot\");\nvar Event_1 = require(\"./Event\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Represents registration for 'value' events.\n */\nvar ValueEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?function(!DataSnapshot)} callback_\n     * @param {?function(Error)} cancelCallback_\n     * @param {?Object} context_\n     */\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\n        this.callback_ = callback_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\n        return eventType === 'value';\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent('value', this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, query.getRef(), index));\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_1 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_1.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_1 = this.callback_;\n            return function () {\n                cb_1.call(ctx, eventData.snapshot);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.matches = function (other) {\n        if (!(other instanceof ValueEventRegistration)) {\n            return false;\n        }\n        else if (!other.callback_ || !this.callback_) {\n            // If no callback specified, we consider it to match any callback.\n            return true;\n        }\n        else {\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callback_ !== null;\n    };\n    return ValueEventRegistration;\n}());\nexports.ValueEventRegistration = ValueEventRegistration;\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n *\n * @constructor\n * @implements {EventRegistration}\n */\nvar ChildEventRegistration = /** @class */ (function () {\n    /**\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\n     * @param {?function(Error)} cancelCallback_\n     * @param {Object=} context_\n     */\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n        this.callbacks_ = callbacks_;\n        this.cancelCallback_ = cancelCallback_;\n        this.context_ = context_;\n    }\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n        eventToCheck =\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n        return util_1.contains(this.callbacks_, eventToCheck);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n        if (this.cancelCallback_) {\n            return new Event_1.CancelEvent(this, error, path);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\n        util_2.assert(change.childName != null, 'Child events should have a childName.');\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\n        var index = query.getQueryParams().getIndex();\n        return new Event_1.DataEvent(change.type, this, new DataSnapshot_1.DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n        var ctx = this.context_;\n        if (eventData.getEventType() === 'cancel') {\n            util_2.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n            var cancelCB_2 = this.cancelCallback_;\n            return function () {\n                // We know that error exists, we checked above that this is a cancel event\n                cancelCB_2.call(ctx, eventData.error);\n            };\n        }\n        else {\n            var cb_2 = this.callbacks_[eventData.eventType];\n            return function () {\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n            };\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.matches = function (other) {\n        if (other instanceof ChildEventRegistration) {\n            if (!this.callbacks_ || !other.callbacks_) {\n                return true;\n            }\n            else if (this.context_ === other.context_) {\n                var otherCount = util_1.getCount(other.callbacks_);\n                var thisCount = util_1.getCount(this.callbacks_);\n                if (otherCount === thisCount) {\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n                    //  If event types don't match, not a match\n                    // If count is not 1, exact match across all\n                    if (otherCount === 1) {\n                        var otherKey /** @type {!string} */ = util_1.getAnyKey(other.callbacks_);\n                        var thisKey /** @type {!string} */ = util_1.getAnyKey(this.callbacks_);\n                        return (thisKey === otherKey &&\n                            (!other.callbacks_[otherKey] ||\n                                !this.callbacks_[thisKey] ||\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\n                    }\n                    else {\n                        // Exact match on each key.\n                        return util_1.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\n        return this.callbacks_ !== null;\n    };\n    return ChildEventRegistration;\n}());\nexports.ChildEventRegistration = ChildEventRegistration;\n\n//# sourceMappingURL=EventRegistration.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventRegistration.js\n// module id = 249\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Encapsulates the data needed to raise an event\n * @implements {Event}\n */\nvar DataEvent = /** @class */ (function () {\n    /**\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\n     * @param {!DataSnapshot} snapshot The data backing the event\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\n     */\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n        this.eventType = eventType;\n        this.eventRegistration = eventRegistration;\n        this.snapshot = snapshot;\n        this.prevName = prevName;\n    }\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getPath = function () {\n        var ref = this.snapshot.getRef();\n        if (this.eventType === 'value') {\n            return ref.path;\n        }\n        else {\n            return ref.getParent().path;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventType = function () {\n        return this.eventType;\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    DataEvent.prototype.toString = function () {\n        return (this.getPath().toString() +\n            ':' +\n            this.eventType +\n            ':' +\n            util_1.stringify(this.snapshot.exportVal()));\n    };\n    return DataEvent;\n}());\nexports.DataEvent = DataEvent;\nvar CancelEvent = /** @class */ (function () {\n    /**\n     * @param {EventRegistration} eventRegistration\n     * @param {Error} error\n     * @param {!Path} path\n     */\n    function CancelEvent(eventRegistration, error, path) {\n        this.eventRegistration = eventRegistration;\n        this.error = error;\n        this.path = path;\n    }\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getPath = function () {\n        return this.path;\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventType = function () {\n        return 'cancel';\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.getEventRunner = function () {\n        return this.eventRegistration.getEventRunner(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CancelEvent.prototype.toString = function () {\n        return this.path.toString() + ':cancel';\n    };\n    return CancelEvent;\n}());\nexports.CancelEvent = CancelEvent;\n\n//# sourceMappingURL=Event.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/Event.js\n// module id = 250\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar AckUserWrite_1 = require(\"./operation/AckUserWrite\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar util_3 = require(\"@firebase/util\");\nvar ImmutableTree_1 = require(\"./util/ImmutableTree\");\nvar ListenComplete_1 = require(\"./operation/ListenComplete\");\nvar Merge_1 = require(\"./operation/Merge\");\nvar Operation_1 = require(\"./operation/Operation\");\nvar Overwrite_1 = require(\"./operation/Overwrite\");\nvar Path_1 = require(\"./util/Path\");\nvar SyncPoint_1 = require(\"./SyncPoint\");\nvar WriteTree_1 = require(\"./WriteTree\");\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n * @constructor\n */\nvar SyncTree = /** @class */ (function () {\n    /**\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\n     *   to server data.\n     */\n    function SyncTree(listenProvider_) {\n        this.listenProvider_ = listenProvider_;\n        /**\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n         * @type {!ImmutableTree.<!SyncPoint>}\n         * @private\n         */\n        this.syncPointTree_ = ImmutableTree_1.ImmutableTree.Empty;\n        /**\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n         * @type {!WriteTree}\n         * @private\n         */\n        this.pendingWriteTree_ = new WriteTree_1.WriteTree();\n        this.tagToQueryMap_ = {};\n        this.queryToTagMap_ = {};\n    }\n    /**\n     * Apply the data changes for a user-generated set() or transaction() call.\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @param {number} writeId\n     * @param {boolean=} visible\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n        // Record pending write.\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n        if (!visible) {\n            return [];\n        }\n        else {\n            return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.User, path, newData));\n        }\n    };\n    /**\n     * Apply the data from a user-generated update() call\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n        // Record pending merge.\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.User, path, changeTree));\n    };\n    /**\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n     *\n     * @param {!number} writeId\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n        if (revert === void 0) { revert = false; }\n        var write = this.pendingWriteTree_.getWrite(writeId);\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n        if (!needToReevaluate) {\n            return [];\n        }\n        else {\n            var affectedTree_1 = ImmutableTree_1.ImmutableTree.Empty;\n            if (write.snap != null) {\n                // overwrite\n                affectedTree_1 = affectedTree_1.set(Path_1.Path.Empty, true);\n            }\n            else {\n                util_3.forEach(write.children, function (pathString, node) {\n                    affectedTree_1 = affectedTree_1.set(new Path_1.Path(pathString), node);\n                });\n            }\n            return this.applyOperationToSyncPoints_(new AckUserWrite_1.AckUserWrite(write.path, affectedTree_1, revert));\n        }\n    };\n    /**\n     * Apply new server data for the specified path..\n     *\n     * @param {!Path} path\n     * @param {!Node} newData\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n        return this.applyOperationToSyncPoints_(new Overwrite_1.Overwrite(Operation_1.OperationSource.Server, path, newData));\n    };\n    /**\n     * Apply new server data to be merged in at the specified path.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n        var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n        return this.applyOperationToSyncPoints_(new Merge_1.Merge(Operation_1.OperationSource.Server, path, changeTree));\n    };\n    /**\n     * Apply a listen complete for a query\n     *\n     * @param {!Path} path\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyListenComplete = function (path) {\n        return this.applyOperationToSyncPoints_(new ListenComplete_1.ListenComplete(Operation_1.OperationSource.Server, path));\n    };\n    /**\n     * Apply new server data for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey != null) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new Overwrite_1.Overwrite(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // Query must have been removed already\n            return [];\n        }\n    };\n    /**\n     * Apply server data to be merged in for the specified tagged query.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var changeTree = ImmutableTree_1.ImmutableTree.fromObject(changedChildren);\n            var op = new Merge_1.Merge(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Apply a listen complete for a tagged query\n     *\n     * @param {!Path} path\n     * @param {!number} tag\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n        var queryKey = this.queryKeyForTag_(tag);\n        if (queryKey) {\n            var r = SyncTree.parseQueryKey_(queryKey);\n            var queryPath = r.path, queryId = r.queryId;\n            var relativePath = Path_1.Path.relativePath(queryPath, path);\n            var op = new ListenComplete_1.ListenComplete(Operation_1.OperationSource.forServerTaggedQuery(queryId), relativePath);\n            return this.applyTaggedOperation_(queryPath, op);\n        }\n        else {\n            // We've already removed the query. No big deal, ignore the update\n            return [];\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n        var path = query.path;\n        var serverCache = null;\n        var foundAncestorDefaultView = false;\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n            var relativePath = Path_1.Path.relativePath(pathToSyncPoint, path);\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || sp.hasCompleteView();\n        });\n        var syncPoint = this.syncPointTree_.get(path);\n        if (!syncPoint) {\n            syncPoint = new SyncPoint_1.SyncPoint();\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n        }\n        else {\n            foundAncestorDefaultView =\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var serverCacheComplete;\n        if (serverCache != null) {\n            serverCacheComplete = true;\n        }\n        else {\n            serverCacheComplete = false;\n            serverCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            var subtree = this.syncPointTree_.subtree(path);\n            subtree.foreachChild(function (childName, childSyncPoint) {\n                var completeCache = childSyncPoint.getCompleteServerCache(Path_1.Path.Empty);\n                if (completeCache) {\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\n                }\n            });\n        }\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n            // We need to track a tag for this query\n            var queryKey = SyncTree.makeQueryKey_(query);\n            util_1.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\n            var tag = SyncTree.getNextQueryTag_();\n            this.queryToTagMap_[queryKey] = tag;\n            // Coerce to string to avoid sparse arrays.\n            this.tagToQueryMap_['_' + tag] = queryKey;\n        }\n        var writesCache = this.pendingWriteTree_.childWrites(path);\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\n            events = events.concat(this.setupListener_(query, view));\n        }\n        return events;\n    };\n    /**\n     * Remove event callback(s).\n     *\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var _this = this;\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\n        var path = query.path;\n        var maybeSyncPoint = this.syncPointTree_.get(path);\n        var cancelEvents = [];\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n        // not loadsAllData().\n        if (maybeSyncPoint &&\n            (query.queryIdentifier() === 'default' ||\n                maybeSyncPoint.viewExistsForQuery(query))) {\n            /**\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\n             */\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n            if (maybeSyncPoint.isEmpty()) {\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\n            }\n            var removed = removedAndEvents.removed;\n            cancelEvents = removedAndEvents.events;\n            // We may have just removed one of many listeners and can short-circuit this whole process\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n            // properly set up.\n            //\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n            // queryId === 'default'\n            var removingDefault = -1 !==\n                removed.findIndex(function (query) {\n                    return query.getQueryParams().loadsAllData();\n                });\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n                return parentSyncPoint.hasCompleteView();\n            });\n            if (removingDefault && !covered) {\n                var subtree = this.syncPointTree_.subtree(path);\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\n                // removal\n                if (!subtree.isEmpty()) {\n                    // We need to fold over our subtree and collect the listeners to send\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\n                    // Ok, we've collected all the listens we need. Set them up.\n                    for (var i = 0; i < newViews.length; ++i) {\n                        var view = newViews[i], newQuery = view.getQuery();\n                        var listener = this.createListenerForView_(view);\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n                    }\n                }\n                else {\n                    // There's nothing below us, so nothing we need to start listening on\n                }\n            }\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\n            if (!covered && removed.length > 0 && !cancelError) {\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n                // default. Otherwise, we need to iterate through and cancel each individual query\n                if (removingDefault) {\n                    // We don't tag default listeners\n                    var defaultTag = null;\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n                }\n                else {\n                    removed.forEach(function (queryToRemove) {\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n                    });\n                }\n            }\n            // Now, clear all of the tags we're tracking for the removed listens\n            this.removeTags_(removed);\n        }\n        else {\n            // No-op, this listener must've been already removed\n        }\n        return cancelEvents;\n    };\n    /**\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\n     * it, but as this is only used by transaction code, that should always be the case anyways.\n     *\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n     * @param {!Path} path The path to the data we want\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\n     * @return {?Node}\n     */\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n        var includeHiddenSets = true;\n        var writeTree = this.pendingWriteTree_;\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n            var relativePath = Path_1.Path.relativePath(pathSoFar, path);\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\n            if (serverCache) {\n                return serverCache;\n            }\n        });\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n    };\n    /**\n     * This collapses multiple unfiltered views into a single view, since we only need a single\n     * listener for them.\n     *\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\n     * @return {!Array.<!View>}\n     * @private\n     */\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n                var completeView = maybeChildSyncPoint.getCompleteView();\n                return [completeView];\n            }\n            else {\n                // No complete view here, flatten any deeper listens into an array\n                var views_1 = [];\n                if (maybeChildSyncPoint) {\n                    views_1 = maybeChildSyncPoint.getQueryViews();\n                }\n                util_3.forEach(childMap, function (key, childViews) {\n                    views_1 = views_1.concat(childViews);\n                });\n                return views_1;\n            }\n        });\n    };\n    /**\n     * @param {!Array.<!Query>} queries\n     * @private\n     */\n    SyncTree.prototype.removeTags_ = function (queries) {\n        for (var j = 0; j < queries.length; ++j) {\n            var removedQuery = queries[j];\n            if (!removedQuery.getQueryParams().loadsAllData()) {\n                // We should have a tag for this\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\n                delete this.queryToTagMap_[removedQueryKey];\n                delete this.tagToQueryMap_['_' + removedQueryTag];\n            }\n        }\n    };\n    /**\n     * Normalizes a query to a query we send the server for listening\n     * @param {!Query} query\n     * @return {!Query} The normalized query\n     * @private\n     */\n    SyncTree.queryForListening_ = function (query) {\n        if (query.getQueryParams().loadsAllData() &&\n            !query.getQueryParams().isDefault()) {\n            // We treat queries that load all data as default queries\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n            // from Query\n            return /** @type {!Query} */ query.getRef();\n        }\n        else {\n            return query;\n        }\n    };\n    /**\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\n     *\n     * @param {!Query} query\n     * @param {!View} view\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\n     * @private\n     */\n    SyncTree.prototype.setupListener_ = function (query, view) {\n        var path = query.path;\n        var tag = this.tagForQuery_(query);\n        var listener = this.createListenerForView_(view);\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n        var subtree = this.syncPointTree_.subtree(path);\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n        // may need to shadow other listens as well.\n        if (tag) {\n            util_1.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n        }\n        else {\n            // Shadow everything at or below this location, this is a default listener.\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n                if (!relativePath.isEmpty() &&\n                    maybeChildSyncPoint &&\n                    maybeChildSyncPoint.hasCompleteView()) {\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\n                }\n                else {\n                    // No default listener here, flatten any deeper queries into an array\n                    var queries_1 = [];\n                    if (maybeChildSyncPoint) {\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\n                    }\n                    util_3.forEach(childMap, function (key, childQueries) {\n                        queries_1 = queries_1.concat(childQueries);\n                    });\n                    return queries_1;\n                }\n            });\n            for (var i = 0; i < queriesToStop.length; ++i) {\n                var queryToStop = queriesToStop[i];\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n            }\n        }\n        return events;\n    };\n    /**\n     *\n     * @param {!View} view\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\n     * @private\n     */\n    SyncTree.prototype.createListenerForView_ = function (view) {\n        var _this = this;\n        var query = view.getQuery();\n        var tag = this.tagForQuery_(query);\n        return {\n            hashFn: function () {\n                var cache = view.getServerCache() || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                return cache.hash();\n            },\n            onComplete: function (status) {\n                if (status === 'ok') {\n                    if (tag) {\n                        return _this.applyTaggedListenComplete(query.path, tag);\n                    }\n                    else {\n                        return _this.applyListenComplete(query.path);\n                    }\n                }\n                else {\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n                    var error = util_2.errorForServerCode(status, query);\n                    return _this.removeEventRegistration(query, \n                    /*eventRegistration*/ null, error);\n                }\n            }\n        };\n    };\n    /**\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n     * @private\n     * @param {!Query} query\n     * @return {string}\n     */\n    SyncTree.makeQueryKey_ = function (query) {\n        return query.path.toString() + '$' + query.queryIdentifier();\n    };\n    /**\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n     * @private\n     * @param {!string} queryKey\n     * @return {{queryId: !string, path: !Path}}\n     */\n    SyncTree.parseQueryKey_ = function (queryKey) {\n        var splitIndex = queryKey.indexOf('$');\n        util_1.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n        return {\n            queryId: queryKey.substr(splitIndex + 1),\n            path: new Path_1.Path(queryKey.substr(0, splitIndex))\n        };\n    };\n    /**\n     * Return the query associated with the given tag, if we have one\n     * @param {!number} tag\n     * @return {?string}\n     * @private\n     */\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\n        return this.tagToQueryMap_['_' + tag];\n    };\n    /**\n     * Return the tag associated with the given query.\n     * @param {!Query} query\n     * @return {?number}\n     * @private\n     */\n    SyncTree.prototype.tagForQuery_ = function (query) {\n        var queryKey = SyncTree.makeQueryKey_(query);\n        return util_3.safeGet(this.queryToTagMap_, queryKey);\n    };\n    /**\n     * Static accessor for query tags.\n     * @return {number}\n     * @private\n     */\n    SyncTree.getNextQueryTag_ = function () {\n        return SyncTree.nextQueryTag_++;\n    };\n    /**\n     * A helper method to apply tagged operations\n     *\n     * @param {!Path} queryPath\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n        var syncPoint = this.syncPointTree_.get(queryPath);\n        util_1.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n        return syncPoint.applyOperation(operation, writesCache, \n        /*serverCache=*/ null);\n    };\n    /**\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n     *\n     * NOTES:\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n     *   3. A snapshot Node with cached server data, if we have it.\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\n     *\n     * @param {!Operation} operation\n     * @return {!Array.<!Event>}\n     * @private\n     */\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path_1.Path.Empty));\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        if (operation.path.isEmpty()) {\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n        }\n        else {\n            var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\n            if (serverCache == null && syncPoint != null) {\n                serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n            }\n            var events = [];\n            var childName = operation.path.getFront();\n            var childOperation = operation.operationForChild(childName);\n            var childTree = syncPointTree.children.get(childName);\n            if (childTree && childOperation) {\n                var childServerCache = serverCache\n                    ? serverCache.getImmediateChild(childName)\n                    : null;\n                var childWritesCache = writesCache.child(childName);\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n            if (syncPoint) {\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n            }\n            return events;\n        }\n    };\n    /**\n     * Recursive helper for applyOperationToSyncPoints_\n     *\n     * @private\n     * @param {!Operation} operation\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\n     * @param {?Node} serverCache\n     * @param {!WriteTreeRef} writesCache\n     * @return {!Array.<!Event>}\n     */\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n        var _this = this;\n        var syncPoint = syncPointTree.get(Path_1.Path.Empty);\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\n        if (serverCache == null && syncPoint != null) {\n            serverCache = syncPoint.getCompleteServerCache(Path_1.Path.Empty);\n        }\n        var events = [];\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\n            var childServerCache = serverCache\n                ? serverCache.getImmediateChild(childName)\n                : null;\n            var childWritesCache = writesCache.child(childName);\n            var childOperation = operation.operationForChild(childName);\n            if (childOperation) {\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n            }\n        });\n        if (syncPoint) {\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n        }\n        return events;\n    };\n    /**\n     * Static tracker for next query tag.\n     * @type {number}\n     * @private\n     */\n    SyncTree.nextQueryTag_ = 1;\n    return SyncTree;\n}());\nexports.SyncTree = SyncTree;\n\n//# sourceMappingURL=SyncTree.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/SyncTree.js\n// module id = 251\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\nvar AckUserWrite = /** @class */ (function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n    /**@inheritDoc */ path, \n    /**@inheritDoc */ affectedTree, \n    /**@inheritDoc */ revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = Operation_1.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            util_1.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        }\n        else if (this.affectedTree.value != null) {\n            util_1.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        }\n        else {\n            var childTree = this.affectedTree.subtree(new Path_1.Path(childName));\n            return new AckUserWrite(Path_1.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}());\nexports.AckUserWrite = AckUserWrite;\n\n//# sourceMappingURL=AckUserWrite.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/AckUserWrite.js\n// module id = 252\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @constructor\n * @implements {Operation}\n */\nvar ListenComplete = /** @class */ (function () {\n    function ListenComplete(source, path) {\n        this.source = source;\n        this.path = path;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.LISTEN_COMPLETE;\n    }\n    ListenComplete.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            return new ListenComplete(this.source, Path_1.Path.Empty);\n        }\n        else {\n            return new ListenComplete(this.source, this.path.popFront());\n        }\n    };\n    return ListenComplete;\n}());\nexports.ListenComplete = ListenComplete;\n\n//# sourceMappingURL=ListenComplete.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/ListenComplete.js\n// module id = 253\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"./Operation\");\nvar Overwrite_1 = require(\"./Overwrite\");\nvar Path_1 = require(\"../util/Path\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * @param {!OperationSource} source\n * @param {!Path} path\n * @param {!ImmutableTree.<!Node>} children\n * @constructor\n * @implements {Operation}\n */\nvar Merge = /** @class */ (function () {\n    function Merge(\n    /**@inheritDoc */ source, \n    /**@inheritDoc */ path, \n    /**@inheritDoc */ children) {\n        this.source = source;\n        this.path = path;\n        this.children = children;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.MERGE;\n    }\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.operationForChild = function (childName) {\n        if (this.path.isEmpty()) {\n            var childTree = this.children.subtree(new Path_1.Path(childName));\n            if (childTree.isEmpty()) {\n                // This child is unaffected\n                return null;\n            }\n            else if (childTree.value) {\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n                return new Overwrite_1.Overwrite(this.source, Path_1.Path.Empty, childTree.value);\n            }\n            else {\n                // This is a merge at a deeper level\n                return new Merge(this.source, Path_1.Path.Empty, childTree);\n            }\n        }\n        else {\n            util_1.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n            return new Merge(this.source, this.path.popFront(), this.children);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Merge.prototype.toString = function () {\n        return ('Operation(' +\n            this.path +\n            ': ' +\n            this.source.toString() +\n            ' merge: ' +\n            this.children.toString() +\n            ')');\n    };\n    return Merge;\n}());\nexports.Merge = Merge;\n\n//# sourceMappingURL=Merge.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/operation/Merge.js\n// module id = 254\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar ViewProcessor_1 = require(\"./ViewProcessor\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar CacheNode_1 = require(\"./CacheNode\");\nvar ViewCache_1 = require(\"./ViewCache\");\nvar EventGenerator_1 = require(\"./EventGenerator\");\nvar util_1 = require(\"@firebase/util\");\nvar Operation_1 = require(\"../operation/Operation\");\nvar Change_1 = require(\"./Change\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n * @constructor\n */\nvar View = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     * @param {!ViewCache} initialViewCache\n     */\n    function View(query_, initialViewCache) {\n        this.query_ = query_;\n        this.eventRegistrations_ = [];\n        var params = this.query_.getQueryParams();\n        var indexFilter = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        var filter = params.getNodeFilter();\n        /**\n         * @type {ViewProcessor}\n         * @private\n         */\n        this.processor_ = new ViewProcessor_1.ViewProcessor(filter);\n        var initialServerCache = initialViewCache.getServerCache();\n        var initialEventCache = initialViewCache.getEventCache();\n        // Don't filter server node with other filter than index, wait for tagged listen\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n        var eventSnap = filter.updateFullNode(ChildrenNode_1.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n        var newServerCache = new CacheNode_1.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n        var newEventCache = new CacheNode_1.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n        /**\n         * @type {!ViewCache}\n         * @private\n         */\n        this.viewCache_ = new ViewCache_1.ViewCache(newEventCache, newServerCache);\n        /**\n         * @type {!EventGenerator}\n         * @private\n         */\n        this.eventGenerator_ = new EventGenerator_1.EventGenerator(this.query_);\n    }\n    /**\n     * @return {!Query}\n     */\n    View.prototype.getQuery = function () {\n        return this.query_;\n    };\n    /**\n     * @return {?Node}\n     */\n    View.prototype.getServerCache = function () {\n        return this.viewCache_.getServerCache().getNode();\n    };\n    /**\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    View.prototype.getCompleteServerCache = function (path) {\n        var cache = this.viewCache_.getCompleteServerSnap();\n        if (cache) {\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n            // we need to see if it contains the child we're interested in.\n            if (this.query_.getQueryParams().loadsAllData() ||\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\n                return cache.getChild(path);\n            }\n        }\n        return null;\n    };\n    /**\n     * @return {boolean}\n     */\n    View.prototype.isEmpty = function () {\n        return this.eventRegistrations_.length === 0;\n    };\n    /**\n     * @param {!EventRegistration} eventRegistration\n     */\n    View.prototype.addEventRegistration = function (eventRegistration) {\n        this.eventRegistrations_.push(eventRegistration);\n    };\n    /**\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\n     */\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n        var cancelEvents = [];\n        if (cancelError) {\n            util_1.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n            var path_1 = this.query_.path;\n            this.eventRegistrations_.forEach(function (registration) {\n                cancelError /** @type {!Error} */ = cancelError;\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n                if (maybeEvent) {\n                    cancelEvents.push(maybeEvent);\n                }\n            });\n        }\n        if (eventRegistration) {\n            var remaining = [];\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n                var existing = this.eventRegistrations_[i];\n                if (!existing.matches(eventRegistration)) {\n                    remaining.push(existing);\n                }\n                else if (eventRegistration.hasAnyCallback()) {\n                    // We're removing just this one\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n                    break;\n                }\n            }\n            this.eventRegistrations_ = remaining;\n        }\n        else {\n            this.eventRegistrations_ = [];\n        }\n        return cancelEvents;\n    };\n    /**\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n        if (operation.type === Operation_1.OperationType.MERGE &&\n            operation.source.queryId !== null) {\n            util_1.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n            util_1.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n        }\n        var oldViewCache = this.viewCache_;\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n        this.processor_.assertIndexed(result.viewCache);\n        util_1.assert(result.viewCache.getServerCache().isFullyInitialized() ||\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n        this.viewCache_ = result.viewCache;\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n    };\n    /**\n     * @param {!EventRegistration} registration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.getInitialEvents = function (registration) {\n        var eventSnap = this.viewCache_.getEventCache();\n        var initialChanges = [];\n        if (!eventSnap.getNode().isLeafNode()) {\n            var eventNode = eventSnap.getNode();\n            eventNode.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n                initialChanges.push(Change_1.Change.childAddedChange(key, childNode));\n            });\n        }\n        if (eventSnap.isFullyInitialized()) {\n            initialChanges.push(Change_1.Change.valueChange(eventSnap.getNode()));\n        }\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n    };\n    /**\n     * @private\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {EventRegistration=} eventRegistration\n     * @return {!Array.<!Event>}\n     */\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n        var registrations = eventRegistration\n            ? [eventRegistration]\n            : this.eventRegistrations_;\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n    };\n    return View;\n}());\nexports.View = View;\n\n//# sourceMappingURL=View.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/View.js\n// module id = 255\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Operation_1 = require(\"../operation/Operation\");\nvar util_1 = require(\"@firebase/util\");\nvar ChildChangeAccumulator_1 = require(\"./ChildChangeAccumulator\");\nvar Change_1 = require(\"./Change\");\nvar ChildrenNode_1 = require(\"../snap/ChildrenNode\");\nvar KeyIndex_1 = require(\"../snap/indexes/KeyIndex\");\nvar ImmutableTree_1 = require(\"../util/ImmutableTree\");\nvar Path_1 = require(\"../util/Path\");\nvar CompleteChildSource_1 = require(\"./CompleteChildSource\");\n/**\n * @constructor\n * @struct\n */\nvar ProcessorResult = /** @class */ (function () {\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Array.<!Change>} changes\n     */\n    function ProcessorResult(viewCache, changes) {\n        this.viewCache = viewCache;\n        this.changes = changes;\n    }\n    return ProcessorResult;\n}());\nexports.ProcessorResult = ProcessorResult;\n/**\n * @constructor\n */\nvar ViewProcessor = /** @class */ (function () {\n    /**\n     * @param {!NodeFilter} filter_\n     */\n    function ViewProcessor(filter_) {\n        this.filter_ = filter_;\n    }\n    /**\n     * @param {!ViewCache} viewCache\n     */\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\n        util_1.assert(viewCache\n            .getEventCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n        util_1.assert(viewCache\n            .getServerCache()\n            .getNode()\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @return {!ProcessorResult}\n     */\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n        var accumulator = new ChildChangeAccumulator_1.ChildChangeAccumulator();\n        var newViewCache, filterServerNode;\n        if (operation.type === Operation_1.OperationType.OVERWRITE) {\n            var overwrite = operation;\n            if (overwrite.source.fromUser) {\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(overwrite.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n                // again\n                filterServerNode =\n                    overwrite.source.tagged ||\n                        (oldViewCache.getServerCache().isFiltered() &&\n                            !overwrite.path.isEmpty());\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.MERGE) {\n            var merge = operation;\n            if (merge.source.fromUser) {\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n            }\n            else {\n                util_1.assert(merge.source.fromServer, 'Unknown source.');\n                // We filter the node if it's a tagged update or the node has been previously filtered\n                filterServerNode =\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.ACK_USER_WRITE) {\n            var ackUserWrite = operation;\n            if (!ackUserWrite.revert) {\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n            }\n            else {\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n            }\n        }\n        else if (operation.type === Operation_1.OperationType.LISTEN_COMPLETE) {\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n        }\n        else {\n            throw util_1.assertionError('Unknown operation type: ' + operation.type);\n        }\n        var changes = accumulator.getChanges();\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n        return new ProcessorResult(newViewCache, changes);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!ViewCache} newViewCache\n     * @param {!Array.<!Change>} accumulator\n     * @private\n     */\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n        var eventSnap = newViewCache.getEventCache();\n        if (eventSnap.isFullyInitialized()) {\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n            if (accumulator.length > 0 ||\n                !oldViewCache.getEventCache().isFullyInitialized() ||\n                (isLeafOrEmpty &&\n                    !eventSnap\n                        .getNode()\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\n                !eventSnap\n                    .getNode()\n                    .getPriority()\n                    .equals(oldCompleteSnap.getPriority())) {\n                accumulator.push(Change_1.Change.valueChange(\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\n            }\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} changePath\n     * @param {!WriteTreeRef} writesCache\n     * @param {!CompleteChildSource} source\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n        var oldEventSnap = viewCache.getEventCache();\n        if (writesCache.shadowingWrite(changePath) != null) {\n            // we have a shadowing write, ignore changes\n            return viewCache;\n        }\n        else {\n            var newEventCache = void 0, serverNode = void 0;\n            if (changePath.isEmpty()) {\n                // TODO: figure out how this plays with \"sliding ack windows\"\n                util_1.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n                if (viewCache.getServerCache().isFiltered()) {\n                    // We need to special case this, because we need to only apply writes to complete children, or\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\n                    // writes cannot be guaranteed to be complete\n                    var serverCache = viewCache.getCompleteServerSnap();\n                    var completeChildren = serverCache instanceof ChildrenNode_1.ChildrenNode\n                        ? serverCache\n                        : ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n                }\n                else {\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n                }\n            }\n            else {\n                var childKey = changePath.getFront();\n                if (childKey == '.priority') {\n                    util_1.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\n                    var oldEventNode = oldEventSnap.getNode();\n                    serverNode = viewCache.getServerCache().getNode();\n                    // we might have overwrites for this priority\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n                    if (updatedPriority != null) {\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n                    }\n                    else {\n                        // priority didn't change, keep old node\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n                else {\n                    var childChangePath = changePath.popFront();\n                    // update child\n                    var newEventChild = void 0;\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\n                        serverNode = viewCache.getServerCache().getNode();\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n                        if (eventChildUpdate != null) {\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey)\n                                .updateChild(childChangePath, eventChildUpdate);\n                        }\n                        else {\n                            // Nothing changed, just keep the old child\n                            newEventChild = oldEventSnap\n                                .getNode()\n                                .getImmediateChild(childKey);\n                        }\n                    }\n                    else {\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                    }\n                    if (newEventChild != null) {\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n                    }\n                    else {\n                        // no complete child available or no change\n                        newEventCache = oldEventSnap.getNode();\n                    }\n                }\n            }\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n        }\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n        var oldServerSnap = oldViewCache.getServerCache();\n        var newServerCache;\n        var serverFilter = filterServerNode\n            ? this.filter_\n            : this.filter_.getIndexedFilter();\n        if (changePath.isEmpty()) {\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n        }\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n            var newServerNode = oldServerSnap\n                .getNode()\n                .updateChild(changePath, changedSnap);\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\n                changePath.getLength() > 1) {\n                // We don't update incomplete nodes with updates intended for other listeners\n                return oldViewCache;\n            }\n            var childChangePath = changePath.popFront();\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n            if (childKey == '.priority') {\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n            }\n            else {\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, null);\n            }\n        }\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n    };\n    /**\n     * @param {!ViewCache} oldViewCache\n     * @param {!Path} changePath\n     * @param {!Node} changedSnap\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n        var oldEventSnap = oldViewCache.getEventCache();\n        var newViewCache, newEventCache;\n        var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n        if (changePath.isEmpty()) {\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n        }\n        else {\n            var childKey = changePath.getFront();\n            if (childKey === '.priority') {\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n            }\n            else {\n                var childChangePath = changePath.popFront();\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n                var newChild = void 0;\n                if (childChangePath.isEmpty()) {\n                    // Child overwrite, we can replace the child\n                    newChild = changedSnap;\n                }\n                else {\n                    var childNode = source.getCompleteChild(childKey);\n                    if (childNode != null) {\n                        if (childChangePath.getBack() === '.priority' &&\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\n                            // This is a priority update on an empty node. If this node exists on the server, the\n                            // server will send down the priority in the update, so ignore for now\n                            newChild = childNode;\n                        }\n                        else {\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\n                        }\n                    }\n                    else {\n                        // There is no complete child node available\n                        newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    }\n                }\n                if (!oldChild.equals(newChild)) {\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n                }\n                else {\n                    newViewCache = oldViewCache;\n                }\n            }\n        }\n        return newViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {string} childKey\n     * @return {boolean}\n     * @private\n     */\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n        return viewCache.getEventCache().isCompleteForChild(childKey);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n        var _this = this;\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        changedChildren.foreach(function (relativePath, childNode) {\n            var writePath = path.child(relativePath);\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!Node} node\n     * @param {ImmutableTree.<!Node>} merge\n     * @return {!Node}\n     * @private\n     */\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n        merge.foreach(function (relativePath, childNode) {\n            node = node.updateChild(relativePath, childNode);\n        });\n        return node;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!ImmutableTree.<!Node>} changedChildren\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache\n     * @param {boolean} filterServerNode\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n        var _this = this;\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n        // wait for the complete data update coming soon.\n        if (viewCache\n            .getServerCache()\n            .getNode()\n            .isEmpty() &&\n            !viewCache.getServerCache().isFullyInitialized()) {\n            return viewCache;\n        }\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\n        // window leaving room for new items.  It's important we process these changes first, so we\n        // iterate the changes twice, first processing any that affect items currently in view.\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n        // not the other.\n        var curViewCache = viewCache;\n        var viewMergeTree;\n        if (path.isEmpty()) {\n            viewMergeTree = changedChildren;\n        }\n        else {\n            viewMergeTree = ImmutableTree_1.ImmutableTree.Empty.setTree(path, changedChildren);\n        }\n        var serverNode = viewCache.getServerCache().getNode();\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n            if (serverNode.hasChild(childKey)) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\n                childMergeTree.value == null;\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n                var serverChild = viewCache\n                    .getServerCache()\n                    .getNode()\n                    .getImmediateChild(childKey);\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path_1.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n            }\n        });\n        return curViewCache;\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} ackPath\n     * @param {!ImmutableTree<!boolean>} affectedTree\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n        if (writesCache.shadowingWrite(ackPath) != null) {\n            return viewCache;\n        }\n        // Only filter server node if it is currently filtered\n        var filterServerNode = viewCache.getServerCache().isFiltered();\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n        // now that it won't be shadowed.\n        var serverCache = viewCache.getServerCache();\n        if (affectedTree.value != null) {\n            // This is an overwrite.\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\n                serverCache.isCompleteForPath(ackPath)) {\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else if (ackPath.isEmpty()) {\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n                // should just re-apply whatever we have in our cache as a merge.\n                var changedChildren_1 = ImmutableTree_1.ImmutableTree.Empty;\n                serverCache.getNode().forEachChild(KeyIndex_1.KEY_INDEX, function (name, node) {\n                    changedChildren_1 = changedChildren_1.set(new Path_1.Path(name), node);\n                });\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n            }\n            else {\n                return viewCache;\n            }\n        }\n        else {\n            // This is a merge.\n            var changedChildren_2 = ImmutableTree_1.ImmutableTree.Empty;\n            affectedTree.foreach(function (mergePath, value) {\n                var serverCachePath = ackPath.child(mergePath);\n                if (serverCache.isCompleteForPath(serverCachePath)) {\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n                }\n            });\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n        }\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n        var oldServerNode = viewCache.getServerCache();\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, CompleteChildSource_1.NO_COMPLETE_CHILD_SOURCE, accumulator);\n    };\n    /**\n     * @param {!ViewCache} viewCache\n     * @param {!Path} path\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} completeServerCache\n     * @param {!ChildChangeAccumulator} accumulator\n     * @return {!ViewCache}\n     * @private\n     */\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n        var complete;\n        if (writesCache.shadowingWrite(path) != null) {\n            return viewCache;\n        }\n        else {\n            var source = new CompleteChildSource_1.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n            var oldEventCache = viewCache.getEventCache().getNode();\n            var newEventCache = void 0;\n            if (path.isEmpty() || path.getFront() === '.priority') {\n                var newNode = void 0;\n                if (viewCache.getServerCache().isFullyInitialized()) {\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                }\n                else {\n                    var serverChildren = viewCache.getServerCache().getNode();\n                    util_1.assert(serverChildren instanceof ChildrenNode_1.ChildrenNode, 'serverChildren would be complete if leaf node');\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\n                }\n                newNode = newNode;\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n            }\n            else {\n                var childKey = path.getFront();\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n                if (newChild == null &&\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\n                    newChild = oldEventCache.getImmediateChild(childKey);\n                }\n                if (newChild != null) {\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n                }\n                else if (viewCache\n                    .getEventCache()\n                    .getNode()\n                    .hasChild(childKey)) {\n                    // No complete child available, delete the existing one, if any\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n                }\n                else {\n                    newEventCache = oldEventCache;\n                }\n                if (newEventCache.isEmpty() &&\n                    viewCache.getServerCache().isFullyInitialized()) {\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n                    if (complete.isLeafNode()) {\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n                    }\n                }\n            }\n            complete =\n                viewCache.getServerCache().isFullyInitialized() ||\n                    writesCache.shadowingWrite(Path_1.Path.Empty) != null;\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n        }\n    };\n    return ViewProcessor;\n}());\nexports.ViewProcessor = ViewProcessor;\n\n//# sourceMappingURL=ViewProcessor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ViewProcessor.js\n// module id = 256\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"./Change\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * @constructor\n */\nvar ChildChangeAccumulator = /** @class */ (function () {\n    function ChildChangeAccumulator() {\n        this.changeMap_ = {};\n    }\n    /**\n     * @param {!Change} change\n     */\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n        var type = change.type;\n        var childKey /** @type {!string} */ = change.childName;\n        util_2.assert(type == Change_1.Change.CHILD_ADDED ||\n            type == Change_1.Change.CHILD_CHANGED ||\n            type == Change_1.Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n        util_2.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n        var oldChange = util_1.safeGet(this.changeMap_, childKey);\n        if (oldChange) {\n            var oldType = oldChange.type;\n            if (type == Change_1.Change.CHILD_ADDED && oldType == Change_1.Change.CHILD_REMOVED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                delete this.changeMap_[childKey];\n            }\n            else if (type == Change_1.Change.CHILD_REMOVED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childRemovedChange(childKey, oldChange.oldSnap);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_ADDED) {\n                this.changeMap_[childKey] = Change_1.Change.childAddedChange(childKey, change.snapshotNode);\n            }\n            else if (type == Change_1.Change.CHILD_CHANGED &&\n                oldType == Change_1.Change.CHILD_CHANGED) {\n                this.changeMap_[childKey] = Change_1.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\n            }\n            else {\n                throw util_2.assertionError('Illegal combination of changes: ' +\n                    change +\n                    ' occurred after ' +\n                    oldChange);\n            }\n        }\n        else {\n            this.changeMap_[childKey] = change;\n        }\n    };\n    /**\n     * @return {!Array.<!Change>}\n     */\n    ChildChangeAccumulator.prototype.getChanges = function () {\n        return util_1.getValues(this.changeMap_);\n    };\n    return ChildChangeAccumulator;\n}());\nexports.ChildChangeAccumulator = ChildChangeAccumulator;\n\n//# sourceMappingURL=ChildChangeAccumulator.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/ChildChangeAccumulator.js\n// module id = 257\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = require(\"./CacheNode\");\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n *\n * @private\n * @constructor\n * @implements CompleteChildSource\n */\nvar NoCompleteChildSource_ = /** @class */ (function () {\n    function NoCompleteChildSource_() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n        return null;\n    };\n    return NoCompleteChildSource_;\n}());\nexports.NoCompleteChildSource_ = NoCompleteChildSource_;\n/**\n * Singleton instance.\n * @const\n * @type {!CompleteChildSource}\n */\nexports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n *\n *\n * @implements CompleteChildSource\n */\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\n    /**\n     * @param {!WriteTreeRef} writes_\n     * @param {!ViewCache} viewCache_\n     * @param {?Node} optCompleteServerCache_\n     */\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\n        this.writes_ = writes_;\n        this.viewCache_ = viewCache_;\n        this.optCompleteServerCache_ = optCompleteServerCache_;\n    }\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n        var node = this.viewCache_.getEventCache();\n        if (node.isCompleteForChild(childKey)) {\n            return node.getNode().getImmediateChild(childKey);\n        }\n        else {\n            var serverNode = this.optCompleteServerCache_ != null\n                ? new CacheNode_1.CacheNode(this.optCompleteServerCache_, true, false)\n                : this.viewCache_.getServerCache();\n            return this.writes_.calcCompleteChild(childKey, serverNode);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n        var completeServerData = this.optCompleteServerCache_ != null\n            ? this.optCompleteServerCache_\n            : this.viewCache_.getCompleteServerSnap();\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n        if (nodes.length === 0) {\n            return null;\n        }\n        else {\n            return nodes[0];\n        }\n    };\n    return WriteTreeCompleteChildSource;\n}());\nexports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;\n\n//# sourceMappingURL=CompleteChildSource.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/CompleteChildSource.js\n// module id = 258\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node_1 = require(\"../snap/Node\");\nvar Change_1 = require(\"./Change\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n * @constructor\n */\nvar EventGenerator = /** @class */ (function () {\n    /**\n     *\n     * @param {!Query} query_\n     */\n    function EventGenerator(query_) {\n        this.query_ = query_;\n        /**\n         * @private\n         * @type {!Index}\n         */\n        this.index_ = this.query_.getQueryParams().getIndex();\n    }\n    /**\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n     *\n     * Notes:\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\n     *    our index.\n     *  - prevName will be calculated based on the index ordering.\n     *\n     * @param {!Array.<!Change>} changes\n     * @param {!Node} eventCache\n     * @param {!Array.<!EventRegistration>} eventRegistrations\n     * @return {!Array.<!Event>}\n     */\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n        var _this = this;\n        var events = [];\n        var moves = [];\n        changes.forEach(function (change) {\n            if (change.type === Change_1.Change.CHILD_CHANGED &&\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n                moves.push(Change_1.Change.childMovedChange(change.childName, change.snapshotNode));\n            }\n        });\n        this.generateEventsForType_(events, Change_1.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n        this.generateEventsForType_(events, Change_1.Change.VALUE, changes, eventRegistrations, eventCache);\n        return events;\n    };\n    /**\n     * Given changes of a single change type, generate the corresponding events.\n     *\n     * @param {!Array.<!Event>} events\n     * @param {!string} eventType\n     * @param {!Array.<!Change>} changes\n     * @param {!Array.<!EventRegistration>} registrations\n     * @param {!Node} eventCache\n     * @private\n     */\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n        var _this = this;\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\n        filteredChanges.sort(this.compareChanges_.bind(this));\n        filteredChanges.forEach(function (change) {\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\n            registrations.forEach(function (registration) {\n                if (registration.respondsTo(change.type)) {\n                    events.push(registration.createEvent(materializedChange, _this.query_));\n                }\n            });\n        });\n    };\n    /**\n     * @param {!Change} change\n     * @param {!Node} eventCache\n     * @return {!Change}\n     * @private\n     */\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n        if (change.type === 'value' || change.type === 'child_removed') {\n            return change;\n        }\n        else {\n            change.prevName = eventCache.getPredecessorChildName(\n            /** @type {!string} */\n            change.childName, change.snapshotNode, this.index_);\n            return change;\n        }\n    };\n    /**\n     * @param {!Change} a\n     * @param {!Change} b\n     * @return {number}\n     * @private\n     */\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\n        if (a.childName == null || b.childName == null) {\n            throw util_1.assertionError('Should only compare child_ events.');\n        }\n        var aWrapped = new Node_1.NamedNode(a.childName, a.snapshotNode);\n        var bWrapped = new Node_1.NamedNode(b.childName, b.snapshotNode);\n        return this.index_.compare(aWrapped, bWrapped);\n    };\n    return EventGenerator;\n}());\nexports.EventGenerator = EventGenerator;\n\n//# sourceMappingURL=EventGenerator.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventGenerator.js\n// module id = 259\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar Path_1 = require(\"./util/Path\");\nvar CompoundWrite_1 = require(\"./CompoundWrite\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n *\n * @constructor\n */\nvar WriteTree = /** @class */ (function () {\n    function WriteTree() {\n        /**\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\n         * applyLocally=false or writes that are completely shadowed by other writes.\n         *\n         * @type {!CompoundWrite}\n         * @private\n         */\n        this.visibleWrites_ = CompoundWrite_1.CompoundWrite.Empty;\n        /**\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n         * used by transactions).\n         *\n         * @type {!Array.<!WriteRecord>}\n         * @private\n         */\n        this.allWrites_ = [];\n        this.lastWriteId_ = -1;\n    }\n    /**\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n     *\n     * @param {!Path} path\n     * @return {!WriteTreeRef}\n     */\n    WriteTree.prototype.childWrites = function (path) {\n        return new WriteTreeRef(path, this);\n    };\n    /**\n     * Record a new overwrite from user code.\n     *\n     * @param {!Path} path\n     * @param {!Node} snap\n     * @param {!number} writeId\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\n     */\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n        if (visible === undefined) {\n            visible = true;\n        }\n        this.allWrites_.push({\n            path: path,\n            snap: snap,\n            writeId: writeId,\n            visible: visible\n        });\n        if (visible) {\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n        }\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * Record a new merge from user code.\n     *\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} changedChildren\n     * @param {!number} writeId\n     */\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n        util_2.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n        this.allWrites_.push({\n            path: path,\n            children: changedChildren,\n            writeId: writeId,\n            visible: true\n        });\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n        this.lastWriteId_ = writeId;\n    };\n    /**\n     * @param {!number} writeId\n     * @return {?WriteRecord}\n     */\n    WriteTree.prototype.getWrite = function (writeId) {\n        for (var i = 0; i < this.allWrites_.length; i++) {\n            var record = this.allWrites_[i];\n            if (record.writeId === writeId) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n     *\n     * @param {!number} writeId\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\n     * events as a result).\n     */\n    WriteTree.prototype.removeWrite = function (writeId) {\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n        // out of order.\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n        var _this = this;\n        var idx = this.allWrites_.findIndex(function (s) {\n            return s.writeId === writeId;\n        });\n        util_2.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n        var writeToRemove = this.allWrites_[idx];\n        this.allWrites_.splice(idx, 1);\n        var removedWriteWasVisible = writeToRemove.visible;\n        var removedWriteOverlapsWithOtherWrites = false;\n        var i = this.allWrites_.length - 1;\n        while (removedWriteWasVisible && i >= 0) {\n            var currentWrite = this.allWrites_[i];\n            if (currentWrite.visible) {\n                if (i >= idx &&\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n                    // The removed write was completely shadowed by a subsequent write.\n                    removedWriteWasVisible = false;\n                }\n                else if (writeToRemove.path.contains(currentWrite.path)) {\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\n                    removedWriteOverlapsWithOtherWrites = true;\n                }\n            }\n            i--;\n        }\n        if (!removedWriteWasVisible) {\n            return false;\n        }\n        else if (removedWriteOverlapsWithOtherWrites) {\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\n            this.resetTree_();\n            return true;\n        }\n        else {\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n            if (writeToRemove.snap) {\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n            }\n            else {\n                var children = writeToRemove.children;\n                util_1.forEach(children, function (childName) {\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n                });\n            }\n            return true;\n        }\n    };\n    /**\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n     * No server data is considered.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.getCompleteWriteData = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n     * writes), attempt to calculate a complete snapshot for the given path\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        if (!writeIdsToExclude && !includeHiddenWrites) {\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n            if (shadowingNode != null) {\n                return shadowingNode;\n            }\n            else {\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n                if (subMerge.isEmpty()) {\n                    return completeServerCache;\n                }\n                else if (completeServerCache == null &&\n                    !subMerge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n                    return null;\n                }\n                else {\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return subMerge.apply(layeredCache);\n                }\n            }\n        }\n        else {\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            if (!includeHiddenWrites && merge.isEmpty()) {\n                return completeServerCache;\n            }\n            else {\n                // If the server cache is null, and we don't have a complete cache, we need to return null\n                if (!includeHiddenWrites &&\n                    completeServerCache == null &&\n                    !merge.hasCompleteWrite(Path_1.Path.Empty)) {\n                    return null;\n                }\n                else {\n                    var filter = function (write) {\n                        return ((write.visible || includeHiddenWrites) &&\n                            (!writeIdsToExclude ||\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\n                    };\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n                    var layeredCache = completeServerCache || ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                    return mergeAtPath.apply(layeredCache);\n                }\n            }\n        }\n    };\n    /**\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n     * Used when creating new views, to pre-fill their complete event children snapshot.\n     *\n     * @param {!Path} treePath\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n        var completeChildren = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n        if (topLevelSet) {\n            if (!topLevelSet.isLeafNode()) {\n                // we're shadowing everything. Return the children.\n                topLevelSet.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childSnap) {\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n                });\n            }\n            return completeChildren;\n        }\n        else if (completeServerChildren) {\n            // Layer any children we have on top of this\n            // We know we don't have a top-level set, so just enumerate existing children\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n            completeServerChildren.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                var node = merge_1\n                    .childCompoundWrite(new Path_1.Path(childName))\n                    .apply(childNode);\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\n            });\n            // Add any complete children we have from the set\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n        else {\n            // We don't have anything to layer on top of. Layer on any children we have\n            // Note that we can return an empty snap if we have a defined delete\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\n            merge.getCompleteChildren().forEach(function (namedNode) {\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n            });\n            return completeChildren;\n        }\n    };\n    /**\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\n     * applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events\n     *\n     * Either existingEventSnap or existingServerSnap must exist\n     *\n     * @param {!Path} treePath\n     * @param {!Path} childPath\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n        util_2.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n        var path = treePath.child(childPath);\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\n            // At this point we can probably guarantee that we're in case 2, meaning no events\n            // May need to check visibility while doing the findRootMostValueAndPath call\n            return null;\n        }\n        else {\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\n            if (childMerge.isEmpty()) {\n                // We're not shadowing at all. Case 1\n                return existingServerSnap.getChild(childPath);\n            }\n            else {\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n                // However this is tricky to find out, since user updates don't necessary change the server\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n                // only check if the updates change the serverNode.\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n                return childMerge.apply(existingServerSnap.getChild(childPath));\n            }\n        }\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!Path} treePath\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n        var path = treePath.child(childKey);\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n        if (shadowingNode != null) {\n            return shadowingNode;\n        }\n        else {\n            if (existingServerSnap.isCompleteForChild(childKey)) {\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTree.prototype.shadowingWrite = function (path) {\n        return this.visibleWrites_.getCompleteNode(path);\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window.\n     *\n     * @param {!Path} treePath\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n        var toIterate;\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\n        var shadowingNode = merge.getCompleteNode(Path_1.Path.Empty);\n        if (shadowingNode != null) {\n            toIterate = shadowingNode;\n        }\n        else if (completeServerData != null) {\n            toIterate = merge.apply(completeServerData);\n        }\n        else {\n            // no children to iterate on\n            return [];\n        }\n        toIterate = toIterate.withIndex(index);\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n            var nodes = [];\n            var cmp = index.getCompare();\n            var iter = reverse\n                ? toIterate.getReverseIteratorFrom(startPost, index)\n                : toIterate.getIteratorFrom(startPost, index);\n            var next = iter.getNext();\n            while (next && nodes.length < count) {\n                if (cmp(next, startPost) !== 0) {\n                    nodes.push(next);\n                }\n                next = iter.getNext();\n            }\n            return nodes;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @param {!WriteRecord} writeRecord\n     * @param {!Path} path\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n        if (writeRecord.snap) {\n            return writeRecord.path.contains(path);\n        }\n        else {\n            // findKey can return undefined, so use !! to coerce to boolean\n            return !!util_1.findKey(writeRecord.children, function (childSnap, childName) {\n                return writeRecord.path.child(childName).contains(path);\n            });\n        }\n    };\n    /**\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n     * @private\n     */\n    WriteTree.prototype.resetTree_ = function () {\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path_1.Path.Empty);\n        if (this.allWrites_.length > 0) {\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n        }\n        else {\n            this.lastWriteId_ = -1;\n        }\n    };\n    /**\n     * The default filter used when constructing the tree. Keep everything that's visible.\n     *\n     * @param {!WriteRecord} write\n     * @return {boolean}\n     * @private\n     */\n    WriteTree.DefaultFilter_ = function (write) {\n        return write.visible;\n    };\n    /**\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n     * event data at that path.\n     *\n     * @param {!Array.<!WriteRecord>} writes\n     * @param {!function(!WriteRecord):boolean} filter\n     * @param {!Path} treeRoot\n     * @return {!CompoundWrite}\n     * @private\n     */\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n        var compoundWrite = CompoundWrite_1.CompoundWrite.Empty;\n        for (var i = 0; i < writes.length; ++i) {\n            var write = writes[i];\n            // Theory, a later set will either:\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n            if (filter(write)) {\n                var writePath = write.path;\n                var relativePath = void 0;\n                if (write.snap) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, write.snap.getChild(relativePath));\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else if (write.children) {\n                    if (treeRoot.contains(writePath)) {\n                        relativePath = Path_1.Path.relativePath(treeRoot, writePath);\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n                    }\n                    else if (writePath.contains(treeRoot)) {\n                        relativePath = Path_1.Path.relativePath(writePath, treeRoot);\n                        if (relativePath.isEmpty()) {\n                            compoundWrite = compoundWrite.addWrites(Path_1.Path.Empty, write.children);\n                        }\n                        else {\n                            var child = util_1.safeGet(write.children, relativePath.getFront());\n                            if (child) {\n                                // There exists a child in this node that matches the root path\n                                var deepNode = child.getChild(relativePath.popFront());\n                                compoundWrite = compoundWrite.addWrite(Path_1.Path.Empty, deepNode);\n                            }\n                        }\n                    }\n                    else {\n                        // There is no overlap between root path and write path, ignore write\n                    }\n                }\n                else {\n                    throw util_2.assertionError('WriteRecord should have .snap or .children');\n                }\n            }\n        }\n        return compoundWrite;\n    };\n    return WriteTree;\n}());\nexports.WriteTree = WriteTree;\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n * @constructor\n */\nvar WriteTreeRef = /** @class */ (function () {\n    /**\n     * @param {!Path} path\n     * @param {!WriteTree} writeTree\n     */\n    function WriteTreeRef(path, writeTree) {\n        this.treePath_ = path;\n        this.writeTree_ = writeTree;\n    }\n    /**\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n     * can lead to a more expensive calculation.\n     *\n     * @param {?Node} completeServerCache\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n    };\n    /**\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n     * mix of the given server data and write data.\n     *\n     * @param {?ChildrenNode} completeServerChildren\n     * @return {!ChildrenNode}\n     */\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n    };\n    /**\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n     * if anything, needs to be applied to the event cache.\n     *\n     * Possibilities:\n     *\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n     *\n     * 2. Some write is completely shadowing. No events to be raised\n     *\n     * 3. Is partially shadowed. Events should be raised\n     *\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n     *\n     * @param {!Path} path\n     * @param {?Node} existingEventSnap\n     * @param {?Node} existingServerSnap\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n    };\n    /**\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n     * a higher path, this will return the child of that write relative to the write and this path.\n     * Returns null if there is no write at this path.\n     *\n     * @param {!Path} path\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n    };\n    /**\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n     * the window, but may now be in the window\n     *\n     * @param {?Node} completeServerData\n     * @param {!NamedNode} startPost\n     * @param {!number} count\n     * @param {boolean} reverse\n     * @param {!Index} index\n     * @return {!Array.<!NamedNode>}\n     */\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n    };\n    /**\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\n     * complete child for this ChildKey.\n     *\n     * @param {!string} childKey\n     * @param {!CacheNode} existingServerCache\n     * @return {?Node}\n     */\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n    };\n    /**\n     * Return a WriteTreeRef for a child.\n     *\n     * @param {string} childName\n     * @return {!WriteTreeRef}\n     */\n    WriteTreeRef.prototype.child = function (childName) {\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n    };\n    return WriteTreeRef;\n}());\nexports.WriteTreeRef = WriteTreeRef;\n\n//# sourceMappingURL=WriteTree.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/WriteTree.js\n// module id = 260\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ImmutableTree_1 = require(\"./util/ImmutableTree\");\nvar Path_1 = require(\"./util/Path\");\nvar util_1 = require(\"@firebase/util\");\nvar Node_1 = require(\"./snap/Node\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n *\n * @constructor\n * @param {!ImmutableTree.<!Node>} writeTree\n */\nvar CompoundWrite = /** @class */ (function () {\n    function CompoundWrite(writeTree_) {\n        this.writeTree_ = writeTree_;\n    }\n    /**\n     * @param {!Path} path\n     * @param {!Node} node\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrite = function (path, node) {\n        if (path.isEmpty()) {\n            return new CompoundWrite(new ImmutableTree_1.ImmutableTree(node));\n        }\n        else {\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n            if (rootmost != null) {\n                var rootMostPath = rootmost.path;\n                var value = rootmost.value;\n                var relativePath = Path_1.Path.relativePath(rootMostPath, path);\n                value = value.updateChild(relativePath, node);\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n            }\n            else {\n                var subtree = new ImmutableTree_1.ImmutableTree(node);\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\n                return new CompoundWrite(newWriteTree);\n            }\n        }\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object.<string, !Node>} updates\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.addWrites = function (path, updates) {\n        var newWrite = this;\n        util_1.forEach(updates, function (childKey, node) {\n            newWrite = newWrite.addWrite(path.child(childKey), node);\n        });\n        return newWrite;\n    };\n    /**\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n     * location, which must be removed by calling this method with that path.\n     *\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\n     */\n    CompoundWrite.prototype.removeWrite = function (path) {\n        if (path.isEmpty()) {\n            return CompoundWrite.Empty;\n        }\n        else {\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree_1.ImmutableTree.Empty);\n            return new CompoundWrite(newWriteTree);\n        }\n    };\n    /**\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n     * considered \"complete\".\n     *\n     * @param {!Path} path The path to check for\n     * @return {boolean} Whether there is a complete write at that path\n     */\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\n        return this.getCompleteNode(path) != null;\n    };\n    /**\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n     * writes from deeper paths, but will return child nodes from a more shallow path.\n     *\n     * @param {!Path} path The path to get a complete write\n     * @return {?Node} The node if complete at that path, or null otherwise.\n     */\n    CompoundWrite.prototype.getCompleteNode = function (path) {\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n        if (rootmost != null) {\n            return this.writeTree_\n                .get(rootmost.path)\n                .getChild(Path_1.Path.relativePath(rootmost.path, path));\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Returns all children that are guaranteed to be a complete overwrite.\n     *\n     * @return {!Array.<NamedNode>} A list of all complete children.\n     */\n    CompoundWrite.prototype.getCompleteChildren = function () {\n        var children = [];\n        var node = this.writeTree_.value;\n        if (node != null) {\n            // If it's a leaf node, it has no children; so nothing to do.\n            if (!node.isLeafNode()) {\n                node.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (childName, childNode) {\n                    children.push(new Node_1.NamedNode(childName, childNode));\n                });\n            }\n        }\n        else {\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n                if (childTree.value != null) {\n                    children.push(new Node_1.NamedNode(childName, childTree.value));\n                }\n            });\n        }\n        return children;\n    };\n    /**\n     * @param {!Path} path\n     * @return {!CompoundWrite}\n     */\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\n        if (path.isEmpty()) {\n            return this;\n        }\n        else {\n            var shadowingNode = this.getCompleteNode(path);\n            if (shadowingNode != null) {\n                return new CompoundWrite(new ImmutableTree_1.ImmutableTree(shadowingNode));\n            }\n            else {\n                return new CompoundWrite(this.writeTree_.subtree(path));\n            }\n        }\n    };\n    /**\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n     * @return {boolean} Whether this CompoundWrite is empty\n     */\n    CompoundWrite.prototype.isEmpty = function () {\n        return this.writeTree_.isEmpty();\n    };\n    /**\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n     * node\n     * @param {!Node} node The node to apply this CompoundWrite to\n     * @return {!Node} The node with all writes applied\n     */\n    CompoundWrite.prototype.apply = function (node) {\n        return CompoundWrite.applySubtreeWrite_(Path_1.Path.Empty, this.writeTree_, node);\n    };\n    /**\n     * @type {!CompoundWrite}\n     */\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree_1.ImmutableTree(null));\n    /**\n     * @param {!Path} relativePath\n     * @param {!ImmutableTree.<!Node>} writeTree\n     * @param {!Node} node\n     * @return {!Node}\n     * @private\n     */\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\n        if (writeTree.value != null) {\n            // Since there a write is always a leaf, we're done here\n            return node.updateChild(relativePath, writeTree.value);\n        }\n        else {\n            var priorityWrite_1 = null;\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\n                if (childKey === '.priority') {\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n                    // to apply priorities to empty nodes that are later filled\n                    util_2.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n                    priorityWrite_1 = childTree.value;\n                }\n                else {\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\n                }\n            });\n            // If there was a priority write, we only apply it if the node is not empty\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n            }\n            return node;\n        }\n    };\n    return CompoundWrite;\n}());\nexports.CompoundWrite = CompoundWrite;\n\n//# sourceMappingURL=CompoundWrite.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/CompoundWrite.js\n// module id = 261\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nvar SnapshotHolder = /** @class */ (function () {\n    function SnapshotHolder() {\n        this.rootNode_ = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}());\nexports.SnapshotHolder = SnapshotHolder;\n\n//# sourceMappingURL=SnapshotHolder.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/SnapshotHolder.js\n// module id = 262\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util/util\");\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nvar AuthTokenProvider = /** @class */ (function () {\n    /**\n     * @param {!FirebaseApp} app_\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\n     * @param {boolean} forceRefresh\n     * @return {!Promise<FirebaseAuthTokenData>}\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                util_1.log('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            }\n            else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\n            this.app_.name +\n            '\" are invalid. This usually indicates your app was not ' +\n            'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"credential\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else if ('serviceAccount' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else {\n            errorMessage +=\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n                    'initializeApp() match the values provided for your app at ' +\n                    'https://console.firebase.google.com/.';\n        }\n        util_1.warn(errorMessage);\n    };\n    return AuthTokenProvider;\n}());\nexports.AuthTokenProvider = AuthTokenProvider;\n\n//# sourceMappingURL=AuthTokenProvider.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/AuthTokenProvider.js\n// module id = 263\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nvar StatsCollection = /** @class */ (function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) { amount = 1; }\n        if (!util_2.contains(this.counters_, name))\n            this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return util_1.deepCopy(this.counters_);\n    };\n    return StatsCollection;\n}());\nexports.StatsCollection = StatsCollection;\n\n//# sourceMappingURL=StatsCollection.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsCollection.js\n// module id = 264\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar StatsListener_1 = require(\"./StatsListener\");\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\n// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\n * @constructor\n */\nvar StatsReporter = /** @class */ (function () {\n    /**\n     * @param collection\n     * @param server_\n     */\n    function StatsReporter(collection, server_) {\n        this.server_ = server_;\n        this.statsToReport_ = {};\n        this.statsListener_ = new StatsListener_1.StatsListener(collection);\n        var timeout = FIRST_STATS_MIN_TIME +\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n    }\n    StatsReporter.prototype.includeStat = function (stat) {\n        this.statsToReport_[stat] = true;\n    };\n    StatsReporter.prototype.reportStats_ = function () {\n        var _this = this;\n        var stats = this.statsListener_.get();\n        var reportedStats = {};\n        var haveStatsToReport = false;\n        util_1.forEach(stats, function (stat, value) {\n            if (value > 0 && util_1.contains(_this.statsToReport_, stat)) {\n                reportedStats[stat] = value;\n                haveStatsToReport = true;\n            }\n        });\n        if (haveStatsToReport) {\n            this.server_.reportStats(reportedStats);\n        }\n        // queue our next run.\n        util_2.setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n    };\n    return StatsReporter;\n}());\nexports.StatsReporter = StatsReporter;\n\n//# sourceMappingURL=StatsReporter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/stats/StatsReporter.js\n// module id = 265\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nvar EventQueue = /** @class */ (function () {\n    function EventQueue() {\n        /**\n         * @private\n         * @type {!Array.<EventList>}\n         */\n        this.eventLists_ = [];\n        /**\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n         * @private\n         * @type {!number}\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\n     * @param {!Array.<Event>} eventDataList The new events to queue.\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\n     * for the specified path.\n     *\n     * It is assumed that the new events are all for the specified path.\n     *\n     * @param {!Path} path The path to raise events for.\n     * @param {!Array.<Event>} eventDataList The new events to raise.\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\n     * locations related to the specified change path (i.e. all ancestors and descendants).\n     *\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n     *\n     * @param {!Path} changedPath The path to raise events for.\n     * @param {!Array.<!Event>} eventDataList The events to raise\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\n     * @param {!function(!Path):boolean} predicate\n     * @private\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                }\n                else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}());\nexports.EventQueue = EventQueue;\n/**\n * @param {!Path} path\n * @constructor\n */\nvar EventList = /** @class */ (function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\n         * @type {!Array.<Event>}\n         * @private\n         */\n        this.events_ = [];\n    }\n    /**\n     * @param {!Event} eventData\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\n     * Iterates through the list and raises each event\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (util_1.logger) {\n                    util_1.log('event: ' + eventData.toString());\n                }\n                util_1.exceptionGuard(eventFn);\n            }\n        }\n    };\n    /**\n     * @return {!Path}\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}());\nexports.EventList = EventList;\n\n//# sourceMappingURL=EventQueue.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/EventQueue.js\n// module id = 266\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * @extends {EventEmitter}\n */\nvar VisibilityMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' &&\n            typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            }\n            else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            }\n            else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            }\n            else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.VisibilityMonitor = VisibilityMonitor;\n\n//# sourceMappingURL=VisibilityMonitor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/VisibilityMonitor.js\n// module id = 267\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n *\n * @extends {EventEmitter}\n */\nvar OnlineMonitor = /** @class */ (function (_super) {\n    tslib_1.__extends(OnlineMonitor, _super);\n    function OnlineMonitor() {\n        var _this = _super.call(this, ['online']) || this;\n        _this.online_ = true;\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\n        // for Cordova.\n        if (typeof window !== 'undefined' &&\n            typeof window.addEventListener !== 'undefined' &&\n            !util_2.isMobileCordova()) {\n            window.addEventListener('online', function () {\n                if (!_this.online_) {\n                    _this.online_ = true;\n                    _this.trigger('online', true);\n                }\n            }, false);\n            window.addEventListener('offline', function () {\n                if (_this.online_) {\n                    _this.online_ = false;\n                    _this.trigger('online', false);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    OnlineMonitor.getInstance = function () {\n        return new OnlineMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n        return [this.online_];\n    };\n    /**\n     * @return {boolean}\n     */\n    OnlineMonitor.prototype.currentlyOnline = function () {\n        return this.online_;\n    };\n    return OnlineMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.OnlineMonitor = OnlineMonitor;\n\n//# sourceMappingURL=OnlineMonitor.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/OnlineMonitor.js\n// module id = 268\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserPollConnection_1 = require(\"./BrowserPollConnection\");\nvar WebSocketConnection_1 = require(\"./WebSocketConnection\");\nvar util_1 = require(\"../core/util/util\");\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n * @constructor\n */\nvar TransportManager = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\n     */\n    function TransportManager(repoInfo) {\n        this.initTransports_(repoInfo);\n    }\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n        /**\n         * @const\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\n         */\n        get: function () {\n            return [BrowserPollConnection_1.BrowserPollConnection, WebSocketConnection_1.WebSocketConnection];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {!RepoInfo} repoInfo\n     * @private\n     */\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\n        var isWebSocketsAvailable = WebSocketConnection_1.WebSocketConnection && WebSocketConnection_1.WebSocketConnection['isAvailable']();\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection_1.WebSocketConnection.previouslyFailed();\n        if (repoInfo.webSocketOnly) {\n            if (!isWebSocketsAvailable)\n                util_1.warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n            isSkipPollConnection = true;\n        }\n        if (isSkipPollConnection) {\n            this.transports_ = [WebSocketConnection_1.WebSocketConnection];\n        }\n        else {\n            var transports_1 = (this.transports_ = []);\n            util_1.each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\n                if (transport && transport['isAvailable']()) {\n                    transports_1.push(transport);\n                }\n            });\n        }\n    };\n    /**\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\n     * initial transport to use\n     */\n    TransportManager.prototype.initialTransport = function () {\n        if (this.transports_.length > 0) {\n            return this.transports_[0];\n        }\n        else {\n            throw new Error('No transports available');\n        }\n    };\n    /**\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\n     * transport, or null\n     */\n    TransportManager.prototype.upgradeTransport = function () {\n        if (this.transports_.length > 1) {\n            return this.transports_[1];\n        }\n        else {\n            return null;\n        }\n    };\n    return TransportManager;\n}());\nexports.TransportManager = TransportManager;\n\n//# sourceMappingURL=TransportManager.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/TransportManager.js\n// module id = 269\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../../core/util/util\");\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n * @constructor\n */\nvar PacketReceiver = /** @class */ (function () {\n    /**\n     * @param onMessage_\n     */\n    function PacketReceiver(onMessage_) {\n        this.onMessage_ = onMessage_;\n        this.pendingResponses = [];\n        this.currentResponseNum = 0;\n        this.closeAfterResponse = -1;\n        this.onClose = null;\n    }\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n        this.closeAfterResponse = responseNum;\n        this.onClose = callback;\n        if (this.closeAfterResponse < this.currentResponseNum) {\n            this.onClose();\n            this.onClose = null;\n        }\n    };\n    /**\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n     * browsers will respond in the same order as the requests we sent\n     * @param {number} requestNum\n     * @param {Array} data\n     */\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n        var _this = this;\n        this.pendingResponses[requestNum] = data;\n        var _loop_1 = function () {\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n            delete this_1.pendingResponses[this_1.currentResponseNum];\n            var _loop_2 = function (i) {\n                if (toProcess[i]) {\n                    util_1.exceptionGuard(function () {\n                        _this.onMessage_(toProcess[i]);\n                    });\n                }\n            };\n            for (var i = 0; i < toProcess.length; ++i) {\n                _loop_2(i);\n            }\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n                if (this_1.onClose) {\n                    this_1.onClose();\n                    this_1.onClose = null;\n                }\n                return \"break\";\n            }\n            this_1.currentResponseNum++;\n        };\n        var this_1 = this;\n        while (this.pendingResponses[this.currentResponseNum]) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    return PacketReceiver;\n}());\nexports.PacketReceiver = PacketReceiver;\n\n//# sourceMappingURL=PacketReceiver.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/realtime/polling/PacketReceiver.js\n// module id = 270\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nvar ReadonlyRestClient = /** @class */ (function (_super) {\n    tslib_1.__extends(ReadonlyRestClient, _super);\n    /**\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param {AuthTokenProvider} authTokenProvider_\n     * @implements {ServerActions}\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = util_2.logWrapper('p:rest:');\n        /**\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n         * that's been removed. :-/\n         *\n         * @private {!Object.<string, !Object>}\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {!Query} query\n     * @param {?number=} tag\n     * @return {string}\n     * @private\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        }\n        else {\n            util_1.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query\n            .getQueryParams()\n            .toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n            }\n            if (util_4.safeGet(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                }\n                else if (error == 401) {\n                    status_1 = 'permission_denied';\n                }\n                else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\n     * Performs a REST request to the given path, with the provided query string parameters,\n     * and any auth credentials we have.\n     *\n     * @param {!string} pathString\n     * @param {!Object.<string, *>} queryStringParameters\n     * @param {?function(?number, *=)} callback\n     * @private\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_\n            .getToken(/*forceRefresh=*/ false)\n            .then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\n                _this.repoInfo_.host +\n                pathString +\n                '?' +\n                util_5.querystring(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = util_3.jsonEval(xhr.responseText);\n                        }\n                        catch (e) {\n                            util_2.warn('Failed to parse JSON response for ' +\n                                url +\n                                ': ' +\n                                xhr.responseText);\n                        }\n                        callback(null, res);\n                    }\n                    else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            util_2.warn('Got unsuccessful REST response for ' +\n                                url +\n                                ' Status: ' +\n                                xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/ true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(ServerActions_1.ServerActions));\nexports.ReadonlyRestClient = ReadonlyRestClient;\n\n//# sourceMappingURL=ReadonlyRestClient.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/ReadonlyRestClient.js\n// module id = 271\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar KeyIndex_1 = require(\"../snap/indexes/KeyIndex\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\nvar ValueIndex_1 = require(\"../snap/indexes/ValueIndex\");\nvar PathIndex_1 = require(\"../snap/indexes/PathIndex\");\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar LimitedFilter_1 = require(\"./filter/LimitedFilter\");\nvar RangedFilter_1 = require(\"./filter/RangedFilter\");\nvar util_3 = require(\"@firebase/util\");\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nvar QueryParams = /** @class */ (function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = PriorityIndex_1.PRIORITY_INDEX;\n    }\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\n     * @return {boolean} True if it would return from left.\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        }\n        else {\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\n        }\n    };\n    /**\n     * Only valid to call if hasStart() returns true\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\n     * Only valid to call if hasStart() returns true.\n     * Returns the starting key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        }\n        else {\n            return util_2.MIN_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * Returns the end key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        }\n        else {\n            return util_2.MAX_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\n     * Only valid to call if hasLimit() returns true\n     * @return {!number}\n     */\n    QueryParams.prototype.getLimit = function () {\n        util_1.assert(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\n     * @return {!Index}\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @return {!QueryParams}\n     * @private\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        }\n        else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        }\n        else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {!Index} index\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\n     * @return {!Object}\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                }\n                else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== PriorityIndex_1.PRIORITY_INDEX) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == PriorityIndex_1.PRIORITY_INDEX;\n    };\n    /**\n     * @return {!NodeFilter}\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new IndexedFilter_1.IndexedFilter(this.getIndex());\n        }\n        else if (this.hasLimit()) {\n            return new LimitedFilter_1.LimitedFilter(this);\n        }\n        else {\n            return new RangedFilter_1.RangedFilter(this);\n        }\n    };\n    /**\n     * Returns a set of REST query string parameters representing this query.\n     *\n     * @return {!Object.<string,*>} query string parameters\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === PriorityIndex_1.PRIORITY_INDEX) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        }\n        else if (this.index_ === ValueIndex_1.VALUE_INDEX) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        }\n        else if (this.index_ === KeyIndex_1.KEY_INDEX) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        }\n        else {\n            util_1.assert(this.index_ instanceof PathIndex_1.PathIndex, 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = util_3.stringify(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = util_3.stringify(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + util_3.stringify(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = util_3.stringify(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + util_3.stringify(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            }\n            else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\n     * Wire Protocol Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\n     * REST Query Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\n     * Default, empty query parameters\n     * @type {!QueryParams}\n     * @const\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}());\nexports.QueryParams = QueryParams;\n\n//# sourceMappingURL=QueryParams.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/QueryParams.js\n// module id = 272\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RangedFilter_1 = require(\"./RangedFilter\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\nvar Node_1 = require(\"../../snap/Node\");\nvar util_1 = require(\"@firebase/util\");\nvar Change_1 = require(\"../Change\");\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar LimitedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function LimitedFilter(params) {\n        this.rangedFilter_ = new RangedFilter_1.RangedFilter(params);\n        this.index_ = params.getIndex();\n        this.limit_ = params.getLimit();\n        this.reverse_ = !params.isViewFromLeft();\n    }\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.rangedFilter_.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        if (snap.getImmediateChild(key).equals(newChild)) {\n            // No change\n            return snap;\n        }\n        else if (snap.numChildren() < this.limit_) {\n            return this.rangedFilter_\n                .getIndexedFilter()\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n        }\n        else {\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        var filtered;\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        }\n        else {\n            if (this.limit_ * 2 < newSnap.numChildren() &&\n                newSnap.isIndexed(this.index_)) {\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n                filtered = ChildrenNode_1.ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n                // anchor to the startPost, endPost, or last element as appropriate\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n                }\n                else {\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n                }\n                var count = 0;\n                while (iterator.hasNext() && count < this.limit_) {\n                    var next = iterator.getNext();\n                    var inRange = void 0;\n                    if (this.reverse_) {\n                        inRange =\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n                    }\n                    else {\n                        inRange =\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n                    }\n                    if (inRange) {\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\n                        count++;\n                    }\n                    else {\n                        // if we have reached the end post, we cannot keep adding elemments\n                        break;\n                    }\n                }\n            }\n            else {\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n                filtered = newSnap.withIndex(this.index_);\n                // Don't support priorities on queries\n                filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var startPost = void 0;\n                var endPost = void 0;\n                var cmp = void 0;\n                var iterator = void 0;\n                if (this.reverse_) {\n                    iterator = filtered.getReverseIterator(this.index_);\n                    startPost = this.rangedFilter_.getEndPost();\n                    endPost = this.rangedFilter_.getStartPost();\n                    var indexCompare_1 = this.index_.getCompare();\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\n                }\n                else {\n                    iterator = filtered.getIterator(this.index_);\n                    startPost = this.rangedFilter_.getStartPost();\n                    endPost = this.rangedFilter_.getEndPost();\n                    cmp = this.index_.getCompare();\n                }\n                var count = 0;\n                var foundStartPost = false;\n                while (iterator.hasNext()) {\n                    var next = iterator.getNext();\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\n                        // start adding\n                        foundStartPost = true;\n                    }\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n                    if (inRange) {\n                        count++;\n                    }\n                    else {\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                    }\n                }\n            }\n        }\n        return this.rangedFilter_\n            .getIndexedFilter()\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndexedFilter = function () {\n        return this.rangedFilter_.getIndexedFilter();\n    };\n    /**\n     * @inheritDoc\n     */\n    LimitedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!Node} snap\n     * @param {string} childKey\n     * @param {!Node} childSnap\n     * @param {!CompleteChildSource} source\n     * @param {?ChildChangeAccumulator} changeAccumulator\n     * @return {!Node}\n     * @private\n     */\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n        // TODO: rename all cache stuff etc to general snap terminology\n        var cmp;\n        if (this.reverse_) {\n            var indexCmp_1 = this.index_.getCompare();\n            cmp = function (a, b) { return indexCmp_1(b, a); };\n        }\n        else {\n            cmp = this.index_.getCompare();\n        }\n        var oldEventCache = snap;\n        util_1.assert(oldEventCache.numChildren() == this.limit_, '');\n        var newChildNamedNode = new Node_1.NamedNode(childKey, childSnap);\n        var windowBoundary = this.reverse_\n            ? oldEventCache.getFirstChild(this.index_)\n            : oldEventCache.getLastChild(this.index_);\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\n        if (oldEventCache.hasChild(childKey)) {\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n            while (nextChild != null &&\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\n                // the limited filter...\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n            }\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n            if (remainsInWindow) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childChangedChange(childKey, childSnap, oldChildSnap));\n                }\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\n            }\n            else {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(childKey, oldChildSnap));\n                }\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n                if (nextChildInRange) {\n                    if (changeAccumulator != null) {\n                        changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(nextChild.name, nextChild.node));\n                    }\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n                }\n                else {\n                    return newEventCache;\n                }\n            }\n        }\n        else if (childSnap.isEmpty()) {\n            // we're deleting a node, but it was not in the window, so ignore it\n            return snap;\n        }\n        else if (inRange) {\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n                if (changeAccumulator != null) {\n                    changeAccumulator.trackChildChange(Change_1.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n                    changeAccumulator.trackChildChange(Change_1.Change.childAddedChange(childKey, childSnap));\n                }\n                return oldEventCache\n                    .updateImmediateChild(childKey, childSnap)\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n            else {\n                return snap;\n            }\n        }\n        else {\n            return snap;\n        }\n    };\n    return LimitedFilter;\n}());\nexports.LimitedFilter = LimitedFilter;\n\n//# sourceMappingURL=LimitedFilter.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/view/filter/LimitedFilter.js\n// module id = 273\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Reference_1 = require(\"../api/Reference\");\nvar DataSnapshot_1 = require(\"../api/DataSnapshot\");\nvar Path_1 = require(\"./util/Path\");\nvar Tree_1 = require(\"./util/Tree\");\nvar PriorityIndex_1 = require(\"./snap/indexes/PriorityIndex\");\nvar util_2 = require(\"./util/util\");\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar validation_1 = require(\"./util/validation\");\nvar util_3 = require(\"@firebase/util\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar Repo_1 = require(\"./Repo\");\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n/**\n * @enum {number}\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n    // mismatched hash.\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n    // or rejected yet).\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n    // removed when we get a chance to prune completed ones.\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n    // If it comes back as unsuccessful, we'll abort it.\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\n    // Temporary state used to mark transactions that need to be aborted.\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\n/**\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\n * @type {number}\n * @const\n * @private\n */\nRepo_1.Repo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\n * Setup the transaction data structures\n * @private\n */\nRepo_1.Repo.prototype.transactions_init_ = function () {\n    /**\n     * Stores queues of outstanding transactions for Firebase locations.\n     *\n     * @type {!Tree.<Array.<!Transaction>>}\n     * @private\n     */\n    this.transactionQueueTree_ = new Tree_1.Tree();\n};\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\n *\n * @param {!Path} path Path at which to do transaction.\n * @param {function(*):*} transactionUpdate Update callback.\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\n */\nRepo_1.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path);\n    // Add a watch to make sure we get server updates.\n    var valueCallback = function () { };\n    var watchRef = new Reference_1.Reference(this, path);\n    watchRef.on('value', valueCallback);\n    var unwatcher = function () {\n        watchRef.off('value', valueCallback);\n    };\n    // Initialize transaction.\n    var transaction = {\n        path: path,\n        update: transactionUpdate,\n        onComplete: onComplete,\n        // One of TransactionStatus enums.\n        status: null,\n        // Used when combining transactions at different locations to figure out which one goes first.\n        order: util_2.LUIDGenerator(),\n        // Whether to raise local events for this transaction.\n        applyLocally: applyLocally,\n        // Count of how many times we've retried the transaction.\n        retryCount: 0,\n        // Function to call to clean up our .on() listener.\n        unwatcher: unwatcher,\n        // Stores why a transaction was aborted.\n        abortReason: null,\n        currentWriteId: null,\n        currentInputSnapshot: null,\n        currentOutputSnapshotRaw: null,\n        currentOutputSnapshotResolved: null\n    };\n    // Run transaction initially.\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n    if (newVal === undefined) {\n        // Abort transaction.\n        transaction.unwatcher();\n        transaction.currentOutputSnapshotRaw = null;\n        transaction.currentOutputSnapshotResolved = null;\n        if (transaction.onComplete) {\n            // We just set the input snapshot, so this cast should be safe\n            var snapshot = new DataSnapshot_1.DataSnapshot(transaction.currentInputSnapshot, new Reference_1.Reference(this, transaction.path), PriorityIndex_1.PRIORITY_INDEX);\n            transaction.onComplete(null, false, snapshot);\n        }\n    }\n    else {\n        validation_1.validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\n        // Mark as run and add to our queue.\n        transaction.status = TransactionStatus.RUN;\n        var queueNode = this.transactionQueueTree_.subTree(path);\n        var nodeQueue = queueNode.getValue() || [];\n        nodeQueue.push(transaction);\n        queueNode.setValue(nodeQueue);\n        // Update visibleData and raise events\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\n        // start new transactions from the event callbacks.\n        var priorityForNode = void 0;\n        if (typeof newVal === 'object' &&\n            newVal !== null &&\n            util_3.contains(newVal, '.priority')) {\n            priorityForNode = util_3.safeGet(newVal, '.priority');\n            util_1.assert(validation_1.isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\n                'Priority must be a valid string, finite number, server value, or null.');\n        }\n        else {\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\n                ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n            priorityForNode = currentNode.getPriority().val();\n        }\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, priorityForNode);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n        transaction.currentOutputSnapshotResolved = newNode;\n        transaction.currentWriteId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        this.sendReadyTransactions_();\n    }\n};\n/**\n * @param {!Path} path\n * @param {Array.<number>=} excludeSets A specific set to exclude\n * @return {Node}\n * @private\n */\nRepo_1.Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\n        ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n};\n/**\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\n * complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively with a particular\n * transactionQueueTree node to recurse through the tree.\n *\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\n * @private\n */\nRepo_1.Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n    if (node === void 0) { node = this.transactionQueueTree_; }\n    // Before recursing, make sure any completed transactions are removed.\n    if (!node) {\n        this.pruneCompletedTransactionsBelowNode_(node);\n    }\n    if (node.getValue() !== null) {\n        var queue = this.buildTransactionQueue_(node);\n        util_1.assert(queue.length > 0, 'Sending zero length transaction queue');\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\n        if (allRun) {\n            this.sendTransactionQueue_(node.path(), queue);\n        }\n    }\n    else if (node.hasChildren()) {\n        node.forEachChild(function (childNode) {\n            _this.sendReadyTransactions_(childNode);\n        });\n    }\n};\n/**\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\n *\n * @param {!Path} path The location of the queue.\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\n * @private\n */\nRepo_1.Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this;\n    // Mark transactions as sent and increment retry count!\n    var setsToIgnore = queue.map(function (txn) {\n        return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n    for (var i = 0; i < queue.length; i++) {\n        var txn = queue[i];\n        util_1.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n        txn.status = TransactionStatus.SENT;\n        txn.retryCount++;\n        var relativePath = Path_1.Path.relativePath(path, txn.path);\n        // If we've gotten to this point, the output snapshot must be defined.\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\n    }\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path;\n    // Send the put.\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n        _this.log_('transaction put response', {\n            path: pathToSend.toString(),\n            status: status\n        });\n        var events = [];\n        if (status === 'ok') {\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n            // the callback could trigger more transactions or sets.\n            var callbacks = [];\n            for (var i = 0; i < queue.length; i++) {\n                queue[i].status = TransactionStatus.COMPLETED;\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n                if (queue[i].onComplete) {\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\n                    var node = queue[i].currentOutputSnapshotResolved;\n                    var ref = new Reference_1.Reference(_this, queue[i].path);\n                    var snapshot = new DataSnapshot_1.DataSnapshot(node, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n                }\n                queue[i].unwatcher();\n            }\n            // Now remove the completed transactions.\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\n            // There may be pending transactions that we can now send.\n            _this.sendReadyTransactions_();\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\n            // Finally, trigger onComplete callbacks.\n            for (var i = 0; i < callbacks.length; i++) {\n                util_2.exceptionGuard(callbacks[i]);\n            }\n        }\n        else {\n            // transactions are no longer sent.  Update their status appropriately.\n            if (status === 'datastale') {\n                for (var i = 0; i < queue.length; i++) {\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    else\n                        queue[i].status = TransactionStatus.RUN;\n                }\n            }\n            else {\n                util_2.warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n                for (var i = 0; i < queue.length; i++) {\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\n                    queue[i].abortReason = status;\n                }\n            }\n            _this.rerunTransactions_(path);\n        }\n    }, latestHash);\n};\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\n * be raised for.\n *\n * @param {!Path} changedPath The path in mergedData that changed.\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n};\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\n *\n * @param {Array.<Transaction>} queue The queue of transactions to run.\n * @param {!Path} path The path the queue is for.\n * @private\n */\nRepo_1.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n        return; // Nothing to do!\n    }\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = [];\n    var events = [];\n    // Ignore all of the sets we're going to re-run.\n    var txnsToRerun = queue.filter(function (q) {\n        return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n        return q.currentWriteId;\n    });\n    for (var i = 0; i < queue.length; i++) {\n        var transaction = queue[i];\n        var relativePath = Path_1.Path.relativePath(path, transaction.path);\n        var abortTransaction = false, abortReason = void 0;\n        util_1.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n            abortTransaction = true;\n            abortReason = transaction.abortReason;\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n        else if (transaction.status === TransactionStatus.RUN) {\n            if (transaction.retryCount >= Repo_1.Repo.MAX_TRANSACTION_RETRIES_) {\n                abortTransaction = true;\n                abortReason = 'maxretry';\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n            }\n            else {\n                // This code reruns a transaction\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n                transaction.currentInputSnapshot = currentNode;\n                var newData = queue[i].update(currentNode.val());\n                if (newData !== undefined) {\n                    validation_1.validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n                    var newDataNode = nodeFromJSON_1.nodeFromJSON(newData);\n                    var hasExplicitPriority = typeof newData === 'object' &&\n                        newData != null &&\n                        util_3.contains(newData, '.priority');\n                    if (!hasExplicitPriority) {\n                        // Keep the old priority if there wasn't a priority explicitly specified.\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n                    }\n                    var oldWriteId = transaction.currentWriteId;\n                    var serverValues = this.generateServerValues();\n                    var newNodeResolved = ServerValues_1.resolveDeferredValueSnapshot(newDataNode, serverValues);\n                    transaction.currentOutputSnapshotRaw = newDataNode;\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\n                    transaction.currentWriteId = this.getNextWriteId_();\n                    // Mutates setsToIgnore in place\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n                }\n                else {\n                    abortTransaction = true;\n                    abortReason = 'nodata';\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n                }\n            }\n        }\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n        events = [];\n        if (abortTransaction) {\n            // Abort.\n            queue[i].status = TransactionStatus.COMPLETED;\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n            // So defer the unwatcher until we're done.\n            (function (unwatcher) {\n                setTimeout(unwatcher, Math.floor(0));\n            })(queue[i].unwatcher);\n            if (queue[i].onComplete) {\n                if (abortReason === 'nodata') {\n                    var ref = new Reference_1.Reference(this, queue[i].path);\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\n                    var snapshot = new DataSnapshot_1.DataSnapshot(lastInput, ref, PriorityIndex_1.PRIORITY_INDEX);\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n                }\n                else {\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n                }\n            }\n        }\n    }\n    // Clean up completed transactions.\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\n    // Now fire callbacks, now that we're in a good, known state.\n    for (var i = 0; i < callbacks.length; i++) {\n        util_2.exceptionGuard(callbacks[i]);\n    }\n    // Try to send the transaction result to the server.\n    this.sendReadyTransactions_();\n};\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\n * the node for the given path if there are no pending transactions on any ancestor.\n *\n * @param {!Path} path The location to start at.\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\n * @private\n */\nRepo_1.Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front;\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n    var transactionNode = this.transactionQueueTree_;\n    while ((front = path.getFront()) !== null &&\n        transactionNode.getValue() === null) {\n        transactionNode = transactionNode.subTree(front);\n        path = path.popFront();\n    }\n    return transactionNode;\n};\n/**\n * Builds the queue of all transactions at or below the specified transactionNode.\n *\n * @param {!Tree.<Array.<Transaction>>} transactionNode\n * @return {Array.<Transaction>} The generated queue.\n * @private\n */\nRepo_1.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\n    // Sort them by the order the transactions were created.\n    transactionQueue.sort(function (a, b) {\n        return a.order - b.order;\n    });\n    return transactionQueue;\n};\n/**\n * @param {!Tree.<Array.<Transaction>>} node\n * @param {Array.<Transaction>} queue\n * @private\n */\nRepo_1.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n    var nodeQueue = node.getValue();\n    if (nodeQueue !== null) {\n        for (var i = 0; i < nodeQueue.length; i++) {\n            queue.push(nodeQueue[i]);\n        }\n    }\n    node.forEachChild(function (child) {\n        _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n};\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n *\n * @param {!Tree.<Array.<!Transaction>>} node\n * @private\n */\nRepo_1.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n    var queue = node.getValue();\n    if (queue) {\n        var to = 0;\n        for (var from = 0; from < queue.length; from++) {\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\n                queue[to] = queue[from];\n                to++;\n            }\n        }\n        queue.length = to;\n        node.setValue(queue.length > 0 ? queue : null);\n    }\n    node.forEachChild(function (childNode) {\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n};\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\n * since we consider them incompatible with transactions.\n *\n * @param {!Path} path Path for which we want to abort related transactions.\n * @return {!Path}\n * @private\n */\nRepo_1.Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n        _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n};\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\n * @private\n */\nRepo_1.Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n    if (queue !== null) {\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n        // the callback could trigger more transactions or sets.\n        var callbacks = [];\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n        // can be immediately aborted and removed.\n        var events = [];\n        var lastSent = -1;\n        for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n                // Already marked.  No action needed.\n            }\n            else if (queue[i].status === TransactionStatus.SENT) {\n                util_1.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n                lastSent = i;\n                // Mark transaction for abort when it comes back.\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n                queue[i].abortReason = 'set';\n            }\n            else {\n                util_1.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\n                // We can abort it immediately.\n                queue[i].unwatcher();\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n                if (queue[i].onComplete) {\n                    var snapshot = null;\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n                }\n            }\n        }\n        if (lastSent === -1) {\n            // We're not waiting for any sent transactions.  We can clear the queue.\n            node.setValue(null);\n        }\n        else {\n            // Remove the transactions we aborted.\n            queue.length = lastSent + 1;\n        }\n        // Now fire the callbacks.\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n        for (var i = 0; i < callbacks.length; i++) {\n            util_2.exceptionGuard(callbacks[i]);\n        }\n    }\n};\n\n//# sourceMappingURL=Repo_transaction.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/Repo_transaction.js\n// module id = 274\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"./Path\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Node in a Tree.\n */\nvar TreeNode = /** @class */ (function () {\n    function TreeNode() {\n        // TODO: Consider making accessors that create children and value lazily or\n        // separate Internal / Leaf 'types'.\n        this.children = {};\n        this.childCount = 0;\n        this.value = null;\n    }\n    return TreeNode;\n}());\nexports.TreeNode = TreeNode;\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nvar Tree = /** @class */ (function () {\n    /**\n     * @template T\n     * @param {string=} name_ Optional name of the node.\n     * @param {Tree=} parent_ Optional parent node.\n     * @param {TreeNode=} node_ Optional node to wrap.\n     */\n    function Tree(name_, parent_, node_) {\n        if (name_ === void 0) { name_ = ''; }\n        if (parent_ === void 0) { parent_ = null; }\n        if (node_ === void 0) { node_ = new TreeNode(); }\n        this.name_ = name_;\n        this.parent_ = parent_;\n        this.node_ = node_;\n    }\n    /**\n     * Returns a sub-Tree for the given path.\n     *\n     * @param {!(string|Path)} pathObj Path to look up.\n     * @return {!Tree.<T>} Tree for path.\n     */\n    Tree.prototype.subTree = function (pathObj) {\n        // TODO: Require pathObj to be Path?\n        var path = pathObj instanceof Path_1.Path ? pathObj : new Path_1.Path(pathObj);\n        var child = this, next;\n        while ((next = path.getFront()) !== null) {\n            var childNode = util_2.safeGet(child.node_.children, next) || new TreeNode();\n            child = new Tree(next, child, childNode);\n            path = path.popFront();\n        }\n        return child;\n    };\n    /**\n     * Returns the data associated with this tree node.\n     *\n     * @return {?T} The data or null if no data exists.\n     */\n    Tree.prototype.getValue = function () {\n        return this.node_.value;\n    };\n    /**\n     * Sets data to this tree node.\n     *\n     * @param {!T} value Value to set.\n     */\n    Tree.prototype.setValue = function (value) {\n        util_1.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n        this.node_.value = value;\n        this.updateParents_();\n    };\n    /**\n     * Clears the contents of the tree node (its value and all children).\n     */\n    Tree.prototype.clear = function () {\n        this.node_.value = null;\n        this.node_.children = {};\n        this.node_.childCount = 0;\n        this.updateParents_();\n    };\n    /**\n     * @return {boolean} Whether the tree has any children.\n     */\n    Tree.prototype.hasChildren = function () {\n        return this.node_.childCount > 0;\n    };\n    /**\n     * @return {boolean} Whether the tree is empty (no value or children).\n     */\n    Tree.prototype.isEmpty = function () {\n        return this.getValue() === null && !this.hasChildren();\n    };\n    /**\n     * Calls action for each child of this tree node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachChild = function (action) {\n        var _this = this;\n        util_2.forEach(this.node_.children, function (child, childTree) {\n            action(new Tree(child, _this, childTree));\n        });\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\n     *   false.\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\n     *   parent.\n     */\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n        if (includeSelf && !childrenFirst)\n            action(this);\n        this.forEachChild(function (child) {\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\n        });\n        if (includeSelf && childrenFirst)\n            action(this);\n    };\n    /**\n     * Calls action on each ancestor node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\n     *   true to abort.\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\n     * @return {boolean} true if the action callback returned true.\n     */\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\n        var node = includeSelf ? this : this.parent();\n        while (node !== null) {\n            if (action(node)) {\n                return true;\n            }\n            node = node.parent();\n        }\n        return false;\n    };\n    /**\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n     * is found, action is called on it and traversal does not continue inside the node.\n     * Action is *not* called on this node.\n     *\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\n     */\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n        this.forEachChild(function (child) {\n            if (child.getValue() !== null)\n                action(child);\n            else\n                child.forEachImmediateDescendantWithValue(action);\n        });\n    };\n    /**\n     * @return {!Path} The path of this tree node, as a Path.\n     */\n    Tree.prototype.path = function () {\n        return new Path_1.Path(this.parent_ === null\n            ? this.name_\n            : this.parent_.path() + '/' + this.name_);\n    };\n    /**\n     * @return {string} The name of the tree node.\n     */\n    Tree.prototype.name = function () {\n        return this.name_;\n    };\n    /**\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\n     */\n    Tree.prototype.parent = function () {\n        return this.parent_;\n    };\n    /**\n     * Adds or removes this child from its parent based on whether it's empty or not.\n     *\n     * @private\n     */\n    Tree.prototype.updateParents_ = function () {\n        if (this.parent_ !== null)\n            this.parent_.updateChild_(this.name_, this);\n    };\n    /**\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\n     *\n     * @param {string} childName The name of the child to update.\n     * @param {!Tree.<T>} child The child to update.\n     * @private\n     */\n    Tree.prototype.updateChild_ = function (childName, child) {\n        var childEmpty = child.isEmpty();\n        var childExists = util_2.contains(this.node_.children, childName);\n        if (childEmpty && childExists) {\n            delete this.node_.children[childName];\n            this.node_.childCount--;\n            this.updateParents_();\n        }\n        else if (!childEmpty && !childExists) {\n            this.node_.children[childName] = child.node_;\n            this.node_.childCount++;\n            this.updateParents_();\n        }\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n\n//# sourceMappingURL=Tree.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/core/util/Tree.js\n// module id = 275\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketConnection_1 = require(\"../realtime/WebSocketConnection\");\nvar BrowserPollConnection_1 = require(\"../realtime/BrowserPollConnection\");\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n *\n * @const\n */\nexports.forceLongPolling = function () {\n    WebSocketConnection_1.WebSocketConnection.forceDisallow();\n    BrowserPollConnection_1.BrowserPollConnection.forceAllow();\n};\nexports.forceWebSockets = function () {\n    BrowserPollConnection_1.BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\nexports.isWebSocketsAvailable = function () {\n    return WebSocketConnection_1.WebSocketConnection['isAvailable']();\n};\nexports.setSecurityDebugCallback = function (ref, callback) {\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\nexports.stats = function (ref, showDelta) {\n    ref.repo.stats(showDelta);\n};\nexports.statsIncrementCounter = function (ref, metric) {\n    ref.repo.statsIncrementCounter(metric);\n};\nexports.dataUpdateCount = function (ref) {\n    return ref.repo.dataUpdateCount;\n};\nexports.interceptServerData = function (ref, callback) {\n    return ref.repo.interceptServerData_(callback);\n};\n\n//# sourceMappingURL=internal.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/internal.js\n// module id = 276\n// module chunks = 0","\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RepoInfo_1 = require(\"../core/RepoInfo\");\nvar PersistentConnection_1 = require(\"../core/PersistentConnection\");\nvar RepoManager_1 = require(\"../core/RepoManager\");\nvar Connection_1 = require(\"../realtime/Connection\");\nexports.DataConnection = PersistentConnection_1.PersistentConnection;\n/**\n * @param {!string} pathString\n * @param {function(*)} onComplete\n */\nPersistentConnection_1.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n    this.sendRequest('q', { p: pathString }, onComplete);\n};\n/**\n * @param {*} data\n * @param {function(*)} onEcho\n */\nPersistentConnection_1.PersistentConnection.prototype.echo = function (data, onEcho) {\n    this.sendRequest('echo', { d: data }, onEcho);\n};\n// RealTimeConnection properties that we use in tests.\nexports.RealTimeConnection = Connection_1.Connection;\n/**\n * @param {function(): string} newHash\n * @return {function()}\n */\nexports.hijackHash = function (newHash) {\n    var oldPut = PersistentConnection_1.PersistentConnection.prototype.put;\n    PersistentConnection_1.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\n        if (opt_hash !== undefined) {\n            opt_hash = newHash();\n        }\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\n    };\n    return function () {\n        PersistentConnection_1.PersistentConnection.prototype.put = oldPut;\n    };\n};\n/**\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\n */\nexports.ConnectionTarget = RepoInfo_1.RepoInfo;\n/**\n * @param {!Query} query\n * @return {!string}\n */\nexports.queryIdentifier = function (query) {\n    return query.queryIdentifier();\n};\n/**\n * @param {!Query} firebaseRef\n * @return {!Object}\n */\nexports.listens = function (firebaseRef) {\n    return firebaseRef.repo.persistentConnection_.listens_;\n};\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n *\n * @param {boolean} forceRestClient\n */\nexports.forceRestClient = function (forceRestClient) {\n    RepoManager_1.RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n\n//# sourceMappingURL=test_access.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/cjs/src/api/test_access.js\n// module id = 277\n// module chunks = 0","module.exports = {\"firebase\":{\"apiKey\":\"AIzaSyCW6s0biYO48fItNvKaAdfn0QkUjnztHFo\",\"authDomain\":\"portfolio-94b41.firebaseapp.com\",\"databaseURL\":\"https://portfolio-94b41.firebaseio.com\",\"projectId\":\"portfolio-94b41\",\"storageBucket\":\"portfolio-94b41.appspot.com\",\"messagingSenderId\":\"974810211301\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config.json\n// module id = 278\n// module chunks = 0"],"sourceRoot":""}